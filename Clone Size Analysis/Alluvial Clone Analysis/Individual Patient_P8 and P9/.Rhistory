group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
df_wide <- df_selected %>%
pivot_wider(names_from = all_of(group_column), values_from = Clone_Size, values_fill = 0)
df_long <- df_wide %>%
pivot_longer(cols = all_of(group_values), names_to = group_column, values_to = "Clone_Size") %>%
filter(Clone_Size > 0)
x_label <- ifelse(group_column == "PatientName", "Individual Patient", group_column)
filename <- paste0("Alluvial_Selected ",
ifelse(group_column == "PatientName", "Individual Patient", group_column),
" and ", paste(group_values, collapse = " and "), ".png")
p_alluvial <- ggplot(df_long,
aes_string(x = group_column, stratum = "cdr_Full_ab", alluvium = "cdr_Full_ab",
y = "Clone_Size", fill = "cdr_Full_ab")) +
geom_flow(alpha = 0.6) +
geom_stratum(alpha = 0.8) +
theme_minimal() +
labs(
title = paste0("Alluvial Plot of Selected Clone Sizes in ", x_label, "s: ", paste(group_values, collapse = " and ")),
x = x_label,
y = "Clone Size",
fill = "Clone ID"
) +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
plot.title = element_text(hjust = 0.5)
)
ggsave(filename, plot = p_alluvial, width = 12, height = 6, dpi = 600, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
# input -----------------------------------------------------------------------
group_column <- "PatientName"
group_values <- c("1872", "P1")
selected_clones <- c(
"CALSDGQAGTALIF+CSARVTALNTEAFF",
"CADFDRGSTLGRLYF+CASSSGGNYGYTF",
"CATDAYSGYALNF+CSARDLGTGELFF",
"CATVLNQAGTALIF+CASSSGGSANYGYTF"
)
# input ----------------------------------------------------------------------
df_selected <- full_metadata %>%
filter(
!!sym(group_column) %in% group_values,
cdr_Full_ab %in% selected_clones
) %>%
select(all_of(group_column), cdr_Full_ab) %>%
group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
df_wide <- df_selected %>%
pivot_wider(names_from = all_of(group_column), values_from = Clone_Size, values_fill = 0)
df_long <- df_wide %>%
pivot_longer(cols = all_of(group_values), names_to = group_column, values_to = "Clone_Size") %>%
filter(Clone_Size > 0)
x_label <- ifelse(group_column == "PatientName", "Individual Patient", group_column)
filename <- paste0("Alluvial_Selected ",
ifelse(group_column == "PatientName", "Individual Patient", group_column),
" ", paste(group_values, collapse = " and "), ".png")
p_alluvial <- ggplot(df_long,
aes_string(x = group_column, stratum = "cdr_Full_ab", alluvium = "cdr_Full_ab",
y = "Clone_Size", fill = "cdr_Full_ab")) +
geom_flow(alpha = 0.6) +
geom_stratum(alpha = 0.8) +
theme_minimal() +
labs(
title = paste0("Alluvial Plot of Selected Clone Sizes in ", x_label, "s: ", paste(group_values, collapse = " and ")),
x = x_label,
y = "Clone Size",
fill = "Clone ID"
) +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
plot.title = element_text(hjust = 0.5)
)
ggsave(filename, plot = p_alluvial, width = 12, height = 6, dpi = 600, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clone Size Analysis/Alluvial Clone Analysis/Individual Patient_P1 and 1986")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
# input -----------------------------------------------------------------------
group_column <- "PatientName"
group_values <- c("P1", "1986")
selected_clones <- c(
"CAGARAGTASKLTF+CSVGPRETQYF",
"CAMRRPSGGYNKLIF+CASSRTGKGNTIYF",
"CAVRDGDYKLSF+CASSDSDGGPDTQYF",
"CGADKDPGGGADGLTF+CASSTLTLRDEKLFF",
"CATDGEYGNNRLAF+CASSLLGISGVQETQYF",
"CAVNTDNAGNMLTF+CASSYSVGNTGELFF",
"CALRSTNAGKSTF+CASSPRDRGNQPQHF",
"CAASEGDTPLVF+CASSFPGTETQYF",
"CAMRRPISSGSARQLTF+CASSFPQDPYERQYF",
"CVVSEDTNAGKSTF+CASRAPVWGGSTDTQYF",
"CAVRDLETGRRALTF+CASSSVAGGPVYEQYF",
"CAVGSNAGNMLTF+CASSLGGHEQFF",
"CAATPNDYKLSF+CASMPRPGGEMETQYF",
"CALSEEREGGSEKLVF+CASSLWFGEGINEQFF",
"CLAAAQTGSASKIIF+CASSVGQTYPNTEAFF",
"CAVHTGGGNKLTF+CASSQLNTEAFF",
"CAMRRPISSGSARQLTF+CASSSDRGYYSPLHF",
"CATDAGSNNDMRF+CASSYGITGGIDEQYF",
"CAVGRGGSYIPTF+CASSLSVQGAYTGELFF",
"CAGVEDSNYQLIW+CASSPDGSYEQYF",
"CAASVGNFNKFYF+CASSPWTGGEMGQPQHF",
"CAASMVVLQTSS+CASSFGGTGELFF",
"CAVNVGSGYSTLTF+CASSFDSGDYEQYF",
"CAVSGSARQLTF+CASSITGALGPTS*LS",
"CAASETNAGNMLTF+CASSWDNGGETQYF",
"CAASRGECWQQP*AD+CASSGGTGFYGYTF",
"CAASYTGNQFYF+CASSFMGQETQYF",
"CADFNQFYF+CSARDRGNKQSAPAF",
"CAENAGNMLTF+CASSQDGGSGNTIYF",
"CAENLDQAGTALIF+CASSPGQRVPETQYF",
"CAFCWWLQ*ADF+CASSFPQDPYERQYF",
"CAFMYNSNTGNQFYF+CASSSRRETQYF",
"CAFNTDKLIF+CASSYQWPGEILYNEQFF",
"CAGGYGNKLVF+CASSLALGSQDTQYF",
"CAGQQILL+CASSVGTSNTEAFF",
"CALSASGAQPWGGYT+CASSLGGSGKGETQYF",
"CALSDQGAQKLVF+CASKN*PESSRKQLMKNCF",
"CAMRTTAGFQKLVF+CASSQEGGRNNSPLHF",
"CAPLMDSSYKLIF+CASSPHQGQGYGYTF",
"CAPSNTGNQFYF+CAWTKGGSGTQYF",
"CARSLGGQNFVF+CASSSQGGGQPQHF",
"CATDGNKLVF+CASRTGATEAFF",
"CAVNEGAAGTASKLTF+CASRGQGGSNQPQHF",
"CAVRGGGGADGLTF+CASSPYRGNIQYF",
"CAVRGNTDKLIF+CASSLGGRDNQPQHF",
"CAVRVLVVLAMES*H+CASTKGNQPQHF",
"CAVSKSGGSYIPTF+CASSRDMTNTEAFF",
"CAYKVGGATNKL+CASSRDGTKANTGELFF",
"CAYRSPLIQGAQKLVF+CSVGHTQETQYF",
"CLVVLRDNTDKLIF+CASSFPQDPYERAVL",
"CVRGGSNYKLTF+CASREMRDYGYTF",
"CVVEGGSYIPTF+CAISEPKGTLSGYTF",
"CVVGGTTDSL+CASTMGQPTNTDTQYF",
"CVVGRGNNNARLMF+CASSPGQGTSNYGYTF"
)
# input ----------------------------------------------------------------------
df_selected <- full_metadata %>%
filter(
!!sym(group_column) %in% group_values,
cdr_Full_ab %in% selected_clones
) %>%
select(all_of(group_column), cdr_Full_ab) %>%
group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
# input -----------------------------------------------------------------------
group_column <- "PatientName"
group_values <- c("P1", "1986")
selected_clones <- c(
"CAGARAGTASKLTF+CSVGPRETQYF",
"CAMRRPSGGYNKLIF+CASSRTGKGNTIYF",
"CAVRDGDYKLSF+CASSDSDGGPDTQYF",
"CGADKDPGGGADGLTF+CASSTLTLRDEKLFF",
"CATDGEYGNNRLAF+CASSLLGISGVQETQYF",
"CAVNTDNAGNMLTF+CASSYSVGNTGELFF",
"CALRSTNAGKSTF+CASSPRDRGNQPQHF",
"CAASEGDTPLVF+CASSFPGTETQYF",
"CAMRRPISSGSARQLTF+CASSFPQDPYERQYF",
"CVVSEDTNAGKSTF+CASRAPVWGGSTDTQYF",
"CAVRDLETGRRALTF+CASSSVAGGPVYEQYF",
"CAVGSNAGNMLTF+CASSLGGHEQFF",
"CAATPNDYKLSF+CASMPRPGGEMETQYF",
"CALSEEREGGSEKLVF+CASSLWFGEGINEQFF",
"CLAAAQTGSASKIIF+CASSVGQTYPNTEAFF",
"CAVHTGGGNKLTF+CASSQLNTEAFF",
"CAMRRPISSGSARQLTF+CASSSDRGYYSPLHF",
"CATDAGSNNDMRF+CASSYGITGGIDEQYF",
"CAVGRGGSYIPTF+CASSLSVQGAYTGELFF",
"CAGVEDSNYQLIW+CASSPDGSYEQYF",
"CAASVGNFNKFYF+CASSPWTGGEMGQPQHF",
"CAASMVVLQTSS+CASSFGGTGELFF",
"CAVNVGSGYSTLTF+CASSFDSGDYEQYF",
"CAVSGSARQLTF+CASSITGALGPTS*LS",
"CAASETNAGNMLTF+CASSWDNGGETQYF",
"CAASRGECWQQP*AD+CASSGGTGFYGYTF",
"CAASYTGNQFYF+CASSFMGQETQYF",
"CADFNQFYF+CSARDRGNKQSAPAF",
"CAENAGNMLTF+CASSQDGGSGNTIYF",
"CAENLDQAGTALIF+CASSPGQRVPETQYF",
"CAFCWWLQ*ADF+CASSFPQDPYERQYF",
"CAFMYNSNTGNQFYF+CASSSRRETQYF",
"CAFNTDKLIF+CASSYQWPGEILYNEQFF",
"CAGGYGNKLVF+CASSLALGSQDTQYF",
"CAGQQILL+CASSVGTSNTEAFF",
"CALSASGAQPWGGYT+CASSLGGSGKGETQYF",
"CALSDQGAQKLVF+CASKN*PESSRKQLMKNCF",
"CAMRTTAGFQKLVF+CASSQEGGRNNSPLHF",
"CAPLMDSSYKLIF+CASSPHQGQGYGYTF",
"CAPSNTGNQFYF+CAWTKGGSGTQYF",
"CARSLGGQNFVF+CASSSQGGGQPQHF",
"CATDGNKLVF+CASRTGATEAFF",
"CAVNEGAAGTASKLTF+CASRGQGGSNQPQHF",
"CAVRGGGGADGLTF+CASSPYRGNIQYF",
"CAVRGNTDKLIF+CASSLGGRDNQPQHF",
"CAVRVLVVLAMES*H+CASTKGNQPQHF",
"CAVSKSGGSYIPTF+CASSRDMTNTEAFF",
"CAYKVGGATNKL+CASSRDGTKANTGELFF",
"CAYRSPLIQGAQKLVF+CSVGHTQETQYF",
"CLVVLRDNTDKLIF+CASSFPQDPYERAVL",
"CVRGGSNYKLTF+CASREMRDYGYTF",
"CVVEGGSYIPTF+CAISEPKGTLSGYTF",
"CVVGGTTDSL+CASTMGQPTNTDTQYF",
"CVVGRGNNNARLMF+CASSPGQGTSNYGYTF"
)
# input ----------------------------------------------------------------------
df_selected <- full_metadata %>%
filter(
!!sym(group_column) %in% group_values,
cdr_Full_ab %in% selected_clones
) %>%
select(all_of(group_column), cdr_Full_ab) %>%
group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
df_wide <- df_selected %>%
pivot_wider(names_from = all_of(group_column), values_from = Clone_Size, values_fill = 0)
df_long <- df_wide %>%
pivot_longer(cols = all_of(group_values), names_to = group_column, values_to = "Clone_Size") %>%
filter(Clone_Size > 0)
x_label <- ifelse(group_column == "PatientName", "Individual Patient", group_column)
filename <- paste0("Alluvial_Selected ",
ifelse(group_column == "PatientName", "Individual Patient", group_column),
" ", paste(group_values, collapse = " and "), ".png")
p_alluvial <- ggplot(df_long,
aes_string(x = group_column, stratum = "cdr_Full_ab", alluvium = "cdr_Full_ab",
y = "Clone_Size", fill = "cdr_Full_ab")) +
geom_flow(alpha = 0.6) +
geom_stratum(alpha = 0.8) +
theme_minimal() +
labs(
title = paste0("Alluvial Plot of Selected Clone Sizes in ", x_label, "s: ", paste(group_values, collapse = " and ")),
x = x_label,
y = "Clone Size",
fill = "Clone ID"
) +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
plot.title = element_text(hjust = 0.5)
)
ggsave(filename, plot = p_alluvial, width = 12, height = 6, dpi = 600, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
# input -----------------------------------------------------------------------
group_column <- "PatientName"
group_values <- c("P2", "1996")
selected_clones <- c(
"CAVKSAGGTNAGKSTF+CASSFEVQSYEQYF",
"CAVRDIGYGGATNKL+CASSAGDVNLYEQYF",
"CAVKSAGGTNAGKSTF+CASSLVLDRGSQRAVL",
"CAFKDNDMRF+CASGLFPGDRSSYEQYF",
"CAPDCLVATIS*F+CASSLVNSPLHF",
"CAESKTMDSSYKLIF+CAWTGSGELFF",
"CAVKSAGGTNAGKSTF+CASSFEVQSYESSTS",
"CAPFSGGYNKLIF+CASSERASDTDTQYF",
"CAVRDSGYALNF+CASSQEYGGNLADTQYF",
"CAVDGNQFYF+CAIRRDRHSNQPQHF",
"CAENSGGSNYKLTF+CSASHPGQGG*AVL",
"CAVEDQGTDKLIF+CSARDHGSSSYNEQFF",
"CAAGGREESLSS+CASSYGQNTEAFF",
"CATDAGGTSYGKLTF+CASSPGWETQYF",
"CAA*VL*QCFQDNL+CASSFEVQSYEQYF",
"CAVKSAGGTNAGKSTF+CSARDHGSSSYNEQFF",
"CAAASGSARQLTF+CASSSTTSGYNEQFF",
"CAGVLKFHSTSGMHSTS+CASSPDSYYSNQPQHF",
"CAASDTGNQFYF+CASSFEVQSYEQYF",
"CAENTGGFKTIF+CASSVGGLAGGRRPSTS",
"CLVGDRGANAGKSTF+CASSGRRDTGSSYNSPLHF",
"CAASKRLWECAAL+CASSFEVQSYEQYF",
"CAASTGGGNKLTF+CASSLGSSLQETQYF",
"CAASTGGGNKLTF+CASSLVLDRGSQRAVL",
"CAASTGGGNKLTF+CSAREGAKNIQYF",
"CAGAKASNYQLIW+CASSIGLGQAVTQYF",
"CAGRGSQGNLIF+CASSFNTLLGTQYF"
)
# input ----------------------------------------------------------------------
df_selected <- full_metadata %>%
filter(
!!sym(group_column) %in% group_values,
cdr_Full_ab %in% selected_clones
) %>%
select(all_of(group_column), cdr_Full_ab) %>%
group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
df_wide <- df_selected %>%
pivot_wider(names_from = all_of(group_column), values_from = Clone_Size, values_fill = 0)
df_long <- df_wide %>%
pivot_longer(cols = all_of(group_values), names_to = group_column, values_to = "Clone_Size") %>%
filter(Clone_Size > 0)
x_label <- ifelse(group_column == "PatientName", "Individual Patient", group_column)
filename <- paste0("Alluvial_Selected ",
ifelse(group_column == "PatientName", "Individual Patient", group_column),
" ", paste(group_values, collapse = " and "), ".png")
p_alluvial <- ggplot(df_long,
aes_string(x = group_column, stratum = "cdr_Full_ab", alluvium = "cdr_Full_ab",
y = "Clone_Size", fill = "cdr_Full_ab")) +
geom_flow(alpha = 0.6) +
geom_stratum(alpha = 0.8) +
theme_minimal() +
labs(
title = paste0("Alluvial Plot of Selected Clone Sizes in ", x_label, "s: ", paste(group_values, collapse = " and ")),
x = x_label,
y = "Clone Size",
fill = "Clone ID"
) +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
plot.title = element_text(hjust = 0.5)
)
ggsave(filename, plot = p_alluvial, width = 12, height = 6, dpi = 600, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
# input -----------------------------------------------------------------------
group_column <- "PatientName"
group_values <- c("1960", "2020")
selected_clones <- c(
"CAEPGTGGFKTIF+CASSLWTGDGYTF",
"CATDPLLSYNQGGKLIF+CASSELGLLYEQYF",
"CLVGDMGNTGFQKLVF+CASSLSGTGIYGYTF",
"CLVFNTGGFKTIF+CASSTRSGGANTGELFF",
"CIVFKAAGNKLTF+CASRAFDSTNEKLFF",
"CVVTITPSCRQHAHL+CASRAFDSTNEKLFF",
"CAVGFTGGGNKLTF+CASSLQNWGLKHF",
"CALSEERNGQGAQKLVF+CASSPSTCCGYTF",
"CATTGGYNKLIF+CASSPGTVGYNEQFF"
)
# input ----------------------------------------------------------------------
df_selected <- full_metadata %>%
filter(
!!sym(group_column) %in% group_values,
cdr_Full_ab %in% selected_clones
) %>%
select(all_of(group_column), cdr_Full_ab) %>%
group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
df_wide <- df_selected %>%
pivot_wider(names_from = all_of(group_column), values_from = Clone_Size, values_fill = 0)
df_long <- df_wide %>%
pivot_longer(cols = all_of(group_values), names_to = group_column, values_to = "Clone_Size") %>%
filter(Clone_Size > 0)
x_label <- ifelse(group_column == "PatientName", "Individual Patient", group_column)
filename <- paste0("Alluvial_Selected ",
ifelse(group_column == "PatientName", "Individual Patient", group_column),
" ", paste(group_values, collapse = " and "), ".png")
p_alluvial <- ggplot(df_long,
aes_string(x = group_column, stratum = "cdr_Full_ab", alluvium = "cdr_Full_ab",
y = "Clone_Size", fill = "cdr_Full_ab")) +
geom_flow(alpha = 0.6) +
geom_stratum(alpha = 0.8) +
theme_minimal() +
labs(
title = paste0("Alluvial Plot of Selected Clone Sizes in ", x_label, "s: ", paste(group_values, collapse = " and ")),
x = x_label,
y = "Clone Size",
fill = "Clone ID"
) +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
plot.title = element_text(hjust = 0.5)
)
ggsave(filename, plot = p_alluvial, width = 12, height = 6, dpi = 600, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clone Size Analysis/Alluvial Clone Analysis/Individual Patient_1960 and CD11")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
# input -----------------------------------------------------------------------
group_column <- "PatientName"
group_values <- c("1960", "CD11")
selected_clones <- c(
"CLVFNTGGFKTIF+CASSTRSGGRTPGSCF",
"CLVFNTGGFKTIF+CASSLQNWGLKHF",
"CIVFKAAGNKLTF+CASRAFDSTNEKLFF",
"CAPRGTSGTYKYIF+CASSFGTGGHEQYF"
)
# input ----------------------------------------------------------------------
df_selected <- full_metadata %>%
filter(
!!sym(group_column) %in% group_values,
cdr_Full_ab %in% selected_clones
) %>%
select(all_of(group_column), cdr_Full_ab) %>%
group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
# input -----------------------------------------------------------------------
group_column <- "PatientName"
group_values <- c("1960", "CD11")
selected_clones <- c(
"CLVFNTGGFKTIF+CASSTRSGGRTPGSCF",
"CLVFNTGGFKTIF+CASSLQNWGLKHF",
"CIVFKAAGNKLTF+CASRAFDSTNEKLFF",
"CAPRGTSGTYKYIF+CASSFGTGGHEQYF"
)
# input ----------------------------------------------------------------------
df_selected <- full_metadata %>%
filter(
!!sym(group_column) %in% group_values,
cdr_Full_ab %in% selected_clones
) %>%
select(all_of(group_column), cdr_Full_ab) %>%
group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
df_wide <- df_selected %>%
pivot_wider(names_from = all_of(group_column), values_from = Clone_Size, values_fill = 0)
df_long <- df_wide %>%
pivot_longer(cols = all_of(group_values), names_to = group_column, values_to = "Clone_Size") %>%
filter(Clone_Size > 0)
x_label <- ifelse(group_column == "PatientName", "Individual Patient", group_column)
filename <- paste0("Alluvial_Selected ",
ifelse(group_column == "PatientName", "Individual Patient", group_column),
" ", paste(group_values, collapse = " and "), ".png")
p_alluvial <- ggplot(df_long,
aes_string(x = group_column, stratum = "cdr_Full_ab", alluvium = "cdr_Full_ab",
y = "Clone_Size", fill = "cdr_Full_ab")) +
geom_flow(alpha = 0.6) +
geom_stratum(alpha = 0.8) +
theme_minimal() +
labs(
title = paste0("Alluvial Plot of Selected Clone Sizes in ", x_label, "s: ", paste(group_values, collapse = " and ")),
x = x_label,
y = "Clone Size",
fill = "Clone ID"
) +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
plot.title = element_text(hjust = 0.5)
)
ggsave(filename, plot = p_alluvial, width = 12, height = 6, dpi = 600, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clone Size Analysis/Alluvial Clone Analysis/Individual Patient_P8 and P9")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggalluvial)
# input -----------------------------------------------------------------------
group_column <- "PatientName"
group_values <- c("P8", "P9")
selected_clones <- c(
"CALGGGFKTIF+CASGSSVSTGELFF",
"CAVRLSNARLMF+CASSQGSSYEQYF",
"CALRGADGLTF+CASSFWWGTEAFF",
"CAGLIQGAQKLVF+CASSLESQTGELFF"
)
# input ----------------------------------------------------------------------
df_selected <- full_metadata %>%
filter(
!!sym(group_column) %in% group_values,
cdr_Full_ab %in% selected_clones
) %>%
select(all_of(group_column), cdr_Full_ab) %>%
group_by_at(vars(all_of(group_column), "cdr_Full_ab")) %>%
summarise(Clone_Size = n(), .groups = "drop")
df_wide <- df_selected %>%
pivot_wider(names_from = all_of(group_column), values_from = Clone_Size, values_fill = 0)
df_long <- df_wide %>%
pivot_longer(cols = all_of(group_values), names_to = group_column, values_to = "Clone_Size") %>%
filter(Clone_Size > 0)
x_label <- ifelse(group_column == "PatientName", "Individual Patient", group_column)
filename <- paste0("Alluvial_Selected ",
ifelse(group_column == "PatientName", "Individual Patient", group_column),
" ", paste(group_values, collapse = " and "), ".png")
p_alluvial <- ggplot(df_long,
aes_string(x = group_column, stratum = "cdr_Full_ab", alluvium = "cdr_Full_ab",
y = "Clone_Size", fill = "cdr_Full_ab")) +
geom_flow(alpha = 0.6) +
geom_stratum(alpha = 0.8) +
theme_minimal() +
labs(
title = paste0("Alluvial Plot of Selected Clone Sizes in ", x_label, "s: ", paste(group_values, collapse = " and ")),
x = x_label,
y = "Clone Size",
fill = "Clone ID"
) +
theme(
legend.position = "right",
legend.title = element_text(size = 10),
legend.text = element_text(size = 8),
plot.title = element_text(hjust = 0.5)
)
ggsave(filename, plot = p_alluvial, width = 12, height = 6, dpi = 600, bg = "white")
unique(full_metadata$Patient)
unique(full_metadata$PatientName)
View(full_metadata)
unique(full_metadata$Diagnosis)
