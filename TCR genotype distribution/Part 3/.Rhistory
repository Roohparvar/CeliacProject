library(dplyr)
library(ggplot2)
# مرحله 1: استخراج تعداد و فراوانی TRBV28 در هر نمونه
trbv28_freq <- full_metadata %>%
mutate(TRBV28_present = ifelse(TRBV == "TRBV28", 1, 0)) %>%
group_by(SampleID, Diagnosis) %>%
summarise(
TRBV28_count = sum(TRBV28_present),
total_count = n(),
freq = TRBV28_count / total_count,
.groups = "drop"
)
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
# مرحله 1: استخراج تعداد و فراوانی TRBV28 در هر نمونه
trbv28_freq <- full_metadata %>%
mutate(TRBV28_present = ifelse(TRBV == "TRBV28", 1, 0)) %>%
group_by(SampleID, Diagnosis) %>%
summarise(
TRBV28_count = sum(TRBV28_present),
total_count = n(),
freq = TRBV28_count / total_count,
.groups = "drop"
)
# بارگذاری کتابخانه‌ها
library(dplyr)
library(ggplot2)
# بررسی این‌که ستون‌ها در داده موجودند
# colnames(full_metadata)
# ساخت ستون جدید برای حضور یا عدم حضور TRBV28
trbv28_freq <- full_metadata %>%
mutate(TRBV28_present = ifelse(TRBV == "TRBV28", 1, 0)) %>%
group_by(Diagnosis) %>%
summarise(
TRBV28_count = sum(TRBV28_present, na.rm = TRUE),  # تعداد سلول‌هایی که TRBV28 دارند
total_cells = n(),                                 # کل سلول‌ها در آن گروه
freq = TRBV28_count / total_cells,                 # فراوانی
.groups = "drop"
)
# نمایش جدول حاصل
print(trbv28_freq)
# رسم نمودار ستونی فراوانی TRBV28
ggplot(trbv28_freq, aes(x = Diagnosis, y = freq, fill = Diagnosis)) +
geom_col(width = 0.6, color = "black") +
labs(
title = "TRBV28 Frequency Across Diagnosis Groups",
x = "Diagnosis Group",
y = "Frequency of TRBV28 Usage"
) +
theme_minimal(base_size = 14) +
theme(legend.position = "none")
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر فقط ژن‌های TRBV
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(Diagnosis, gene = TRBV)
# محاسبه فراوانی نسبی هر ژن TRBV در هر گروه بیماری
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# مرتب‌سازی ژن‌ها براساس فراوانی در گروه ACD
top_genes_order <- dot_data %>%
filter(Diagnosis == "ACD") %>%
arrange(desc(freq)) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = top_genes_order))
# رسم Dot Plot
ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر فقط ژن‌های TRBV
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(Diagnosis, gene = TRBV)
# محاسبه فراوانی نسبی ژن‌ها
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# مرتب‌سازی ژن‌ها بر اساس ACD (از کم به زیاد برای برعکس شدن)
gene_order <- dot_data %>%
filter(Diagnosis == "ACD") %>%
arrange(freq) %>%  # کم به زیاد یعنی بزرگ‌ها پایین‌تر
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
# مرتب‌سازی ژن‌ها بر اساس ACD (از کم به زیاد برای برعکس شدن)
gene_order <- dot_data %>%
filter(Diagnosis == "Healthy") %>%
arrange(freq) %>%  # کم به زیاد یعنی بزرگ‌ها پایین‌تر
pull(gene)
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر فقط ژن‌های TRBV
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(Diagnosis, gene = TRBV)
# محاسبه فراوانی نسبی ژن‌ها
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# مرتب‌سازی ژن‌ها بر اساس ACD (از کم به زیاد برای برعکس شدن)
gene_order <- dot_data %>%
filter(Diagnosis == "Healthy") %>%
arrange(freq) %>%  # کم به زیاد یعنی بزرگ‌ها پایین‌تر
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
library(forcats)
full_metadata <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "")
# فیلتر فقط ژن‌های TRBV
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(Diagnosis, gene = TRBV)
# محاسبه فراوانی نسبی ژن‌ها
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# مرتب‌سازی ژن‌ها بر اساس ACD (از کم به زیاد برای برعکس شدن)
gene_order <- dot_data %>%
filter(Diagnosis == "Healthy") %>%
arrange(freq) %>%  # کم به زیاد یعنی بزرگ‌ها پایین‌تر
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر فقط ژن‌های TRBV
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(Diagnosis, gene = TRBV)
# محاسبه فراوانی نسبی ژن‌ها
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# مرتب‌سازی ژن‌ها بر اساس ACD (از کم به زیاد برای برعکس شدن)
gene_order <- dot_data %>%
filter(Diagnosis == "Healthy") %>%
arrange(freq) %>%  # کم به زیاد یعنی بزرگ‌ها پایین‌تر
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
View(dot_data)
View(full_metadata)
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر فقط ژن‌های TRBV و حذف NA یا ""
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%  # این خط همه ژن‌های معتبر رو نگه می‌داره
select(Diagnosis, gene = TRBV)
# محاسبه فراوانی نسبی ژن‌ها
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# مرتب‌سازی ژن‌ها بر اساس Healthy (از کم به زیاد برای برعکس شدن)
gene_order <- dot_data %>%
filter(Diagnosis == "Healthy") %>%
arrange(freq) %>%
pull(gene)
# اعمال ترتیب
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
View(trbv_data)
unique(trbv_data$gene)
View(dot_data)
View(dot_plot)
View(dot_data)
dot_data <- dot_data %>%
filter(!is.na(gene) & gene != "") %>%  # این خط همه ژن‌های معتبر رو نگه می‌داره
View(dot_data)
dot_data <- dot_data %>%
filter(!is.na(gene) & gene != "") %>%  # این خط همه ژن‌های معتبر رو نگه می‌داره
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر فقط ژن‌های TRBV و حذف NA یا ""
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%  # این خط همه ژن‌های معتبر رو نگه می‌داره
select(Diagnosis, gene = TRBV)
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر فقط ژن‌های TRBV و حذف NA یا ""
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%  # این خط همه ژن‌های معتبر رو نگه می‌داره
select(Diagnosis, gene = TRBV)
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & gene != "")  # ← جلوگیری نهایی از NA یا خالی
# مرتب‌سازی ژن‌ها بر اساس Healthy (از کم به زیاد برای برعکس شدن)
gene_order <- dot_data %>%
filter(Diagnosis == "Healthy") %>%
arrange(freq) %>%
pull(gene)
# اعمال ترتیب
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
View(dot_data)
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
library(forcats)
# حذف NA و رشته‌های فقط فاصله‌دار با trimws
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
select(Diagnosis, gene = TRBV) %>%
mutate(Diagnosis = factor(Diagnosis, levels = c("ACD", "Healthy", "RCD-I", "RCD-II")))
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس Healthy
gene_order <- dot_data %>%
filter(Diagnosis == "Healthy") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
View(trbv_data)
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
library(forcats)
# حذف NA و رشته‌های فقط فاصله‌دار با trimws
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
select(Diagnosis, gene = TRBV) %>%
mutate(Diagnosis = factor(Diagnosis, levels = c("ACD", "Healthy", "RCD-I", "RCD-II")))
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
View(dot_data)
View(dot_data)
# مرتب‌سازی ژن‌ها بر اساس Healthy
gene_order <- dot_data %>%
filter(Diagnosis == "Healthy") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
View(dot_data)
library(dplyr)
library(ggplot2)
library(forcats)
# حذف NA و رشته‌های فقط فاصله‌دار با trimws
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
select(Diagnosis, gene = TRBV) %>%
mutate(Diagnosis = factor(Diagnosis, levels = c("ACD", "Healthy", "RCD-I", "RCD-II")))
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس Healthy
gene_order <- dot_data %>%
filter(Diagnosis == "ACD") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
View(dot_data)
library(dplyr)
library(ggplot2)
library(forcats)
# حذف NA و رشته‌های فقط فاصله‌دار با trimws
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
select(Diagnosis, gene = TRBV) %>%
mutate(Diagnosis = factor(Diagnosis, levels = c("ACD", "Healthy", "RCD-I", "RCD-II")))
dot_data <- trbv_data %>%
group_by(Diagnosis, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس Healthy
gene_order <- dot_data %>%
filter(Diagnosis == "ACD") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
dot_plot <- ggplot(dot_data, aes(x = Diagnosis, y = gene)) +
geom_point(aes(size = freq, color = Diagnosis), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Diagnosis Groups",
x = "Diagnosis",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggsave(
filename = "TRBV_DotPlot_by_Diagnosis.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
unique(full_metadata$cluster)
