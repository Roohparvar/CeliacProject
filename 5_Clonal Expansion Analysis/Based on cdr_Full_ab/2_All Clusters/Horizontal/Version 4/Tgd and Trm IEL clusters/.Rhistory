"IEL CCL4+" = "#8d9900",
"nIEL" = "#006f00"
)
# رسم نمودار
p <- ggplot(long_data,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(stat = "stratum", aes(label = paste0(round(Freq, 1), "%")),
size = 2.5, color = "black") +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = cluster_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "CD4+ T Cell Clusters Distribution (Percentage)",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# ذخیره نمودار به PNG
ggsave("CD4_alluvial_percentages_Healthy_ACD_RCDI_RCDII.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
library(tibble)
library(dplyr)
library(ggplot2)
library(ggalluvial)
library(tidyr)
library(scales)  # برای percent_format
target_clusters <- c("IEL GZMK+", "Trm IEL", "Prolif. IEL", "Cyt. IEL", "IEL CCL4+", "nIEL")
target_diagnosis <- c("Healthy", "ACD", "RCD-I", "RCD-II")
percent_matrix <- matrix(NA,
nrow = length(target_diagnosis),
ncol = length(target_clusters),
dimnames = list(target_diagnosis, target_clusters))
for (diag in target_diagnosis) {
subset_diag <- full_metadata[full_metadata$Diagnosis == diag, ]
for (clust in target_clusters) {
count_cluster <- sum(subset_diag$cluster == clust, na.rm = TRUE)
total_cells <- nrow(subset_diag)
percent <- (count_cluster / total_cells) * 100
percent_matrix[diag, clust] <- percent
}
}
percent_matrix <- t(percent_matrix)
df <- as.data.frame(percent_matrix)
df <- cbind(cluster = rownames(df), df)
rownames(df) <- NULL
wide_percent <- as_tibble(df)
# نامگذاری ستون‌ها
alluvial_data <- wide_percent %>%
rename(Healthy = Healthy, ACD = ACD, RCD_I = `RCD-I`, RCD_II = `RCD-II`) %>%
mutate(id = cluster)
# ساخت داده long برای 4 مرحله (با درصد)
long_data <- alluvial_data %>%
pivot_longer(cols = c("Healthy", "ACD", "RCD_I", "RCD_II"),
names_to = "Stage",
values_to = "Freq")
# ترتیب factor محور x
long_data$Stage <- factor(long_data$Stage, levels = c("Healthy", "ACD", "RCD_I", "RCD_II"))
# اضافه کردن شناسه alluvium
long_data <- long_data %>%
arrange(id, Stage) %>%
group_by(id) %>%
mutate(alluvium = cur_group_id()) %>%
ungroup()
cluster_colors <- c(
"IEL GZMK+" = "#4A4E69",
"Trm IEL"    = "#2a9d8f",
"Prolif. IEL" = "#e76f51",
"Cyt. IEL"   = "#8d99ae",
"IEL CCL4+" = "#8d9900",
"nIEL" = "#006f00"
)
# رسم نمودار
p <- ggplot(long_data,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(stat = "stratum", aes(label = paste0(round(Freq, 1), "%")),
size = 2.5, color = "black") +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = cluster_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "IEL T Cell Clusters Distribution (Percentage)",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# ذخیره نمودار به PNG
ggsave("IEL_alluvial_percentages_Healthy_ACD_RCDI_RCDII.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/5_Clonal Expansion Analysis/Based on cdr_Full_ab/2_All Clusters/Horizontal/Version 4/CD4-CD8- and Cyt IEL clusters")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" | full_metadata$cluster == "Cyt. IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_ab)) %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#F0CCFF", "#E099FF", "#C066FF", "#660066", "#1A0026"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
patient_colours
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" | full_metadata$cluster == "Cyt. IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_ab)) %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#D2F53C", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" | full_metadata$cluster == "Cyt. IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_ab)) %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#D999FF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" | full_metadata$cluster == "Cyt. IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_ab)) %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/5_Clonal Expansion Analysis/Based on cdr_Full_ab/2_All Clusters/Horizontal/Version 4/Tgd and Trm IEL clusters")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "Tγδ" | full_metadata$cluster == "Trm IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "Tγδ" | full_metadata$cluster == "Trm IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "Tγδ" | full_metadata$cluster == "Trm IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_γδ_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_γδ_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
