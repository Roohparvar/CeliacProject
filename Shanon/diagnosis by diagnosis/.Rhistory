# 157 cells were re-annotated as ab
#gd
full_metadata$imm_receptor_Esmaeil[full_metadata$CellID %in% gd_subkeys] <- "gd"
full_metadata$TRAV[full_metadata$CellID %in% gd_subkeys] <- ""
full_metadata$TRAJ[full_metadata$CellID %in% gd_subkeys] <- ""
full_metadata$a_cdr3[full_metadata$CellID %in% gd_subkeys] <- ""
full_metadata$TRBV[full_metadata$CellID %in% gd_subkeys] <- ""
full_metadata$TRBJ[full_metadata$CellID %in% gd_subkeys] <- ""
full_metadata$b_cdr3[full_metadata$CellID %in% gd_subkeys] <- ""
full_metadata$cdr_Full_ab[full_metadata$CellID %in% gd_subkeys] <- ""
full_metadata$clone_size_ab[full_metadata$CellID %in% gd_subkeys] <- ""
full_metadata$clone_size_bucket_ab[full_metadata$CellID %in% gd_subkeys] <- ""
# 28 cells were re-annotated as gd
#--------------------------------------------------------------------------------- Part 1 - Step 8: Computing Clone Size for ab and gd TCRs
# Calculated clone_size_ab and clone_size_bucket_ab based on the frequency of each cdr_Full_ab sequence.
clone_sizes <- table(full_metadata$cdr_Full_ab)
full_metadata$clone_size_ab <- clone_sizes[full_metadata$cdr_Full_ab]
full_metadata$clone_size_bucket_ab <- ifelse(
is.na(full_metadata$clone_size_ab),
NA,
ifelse(
full_metadata$clone_size_ab == 1,
"Singleton",
ifelse(
full_metadata$clone_size_ab >= 2 & full_metadata$clone_size_ab < 10,
"Small clone (2+)",
"Large clone (10+)"
)
)
)
# Calculated clone_size_gd and clone_size_bucket_gd based on the frequency of each cdr_Full_gd sequence.
clone_sizes <- table(full_metadata$cdr_Full_gd)
full_metadata$clone_size_gd <- clone_sizes[full_metadata$cdr_Full_gd]
full_metadata$clone_size_bucket_gd <- ifelse(
is.na(full_metadata$clone_size_gd),
NA,
ifelse(
full_metadata$clone_size_gd == 1,
"Singleton",
ifelse(
full_metadata$clone_size_gd >= 2 & full_metadata$clone_size_gd < 10,
"Small clone (2+)",
"Large clone (10+)"
)
)
)
View(full_metadata)
# Calculated clone_size_gd and clone_size_bucket_gd based on the frequency of each g_cdr3 sequence among "Aberrant g" cells only
aberrant_g_idx <- which(full_metadata$imm_receptor_Esmaeil == "Aberrant g")
full_metadata$cdr_Full_gd[aberrant_g_idx] <- NA
full_metadata$clone_size_gd[aberrant_g_idx] <- NA
full_metadata$clone_size_bucket_gd[aberrant_g_idx] <- NA
aberrant_g_cdr3 <- full_metadata$g_cdr3[aberrant_g_idx]
cdr3_counts <- table(aberrant_g_cdr3)
clone_sizes <- cdr3_counts[as.character(aberrant_g_cdr3)]
full_metadata$clone_size_gd[aberrant_g_idx] <- as.numeric(clone_sizes)
full_metadata$clone_size_bucket_gd[aberrant_g_idx] <- ifelse(
is.na(clone_sizes),
NA,
ifelse(
clone_sizes == 1,
"Singleton",
ifelse(
clone_sizes >= 2 & clone_sizes < 10,
"Small clone (2+)",
"Large clone (10+)"
)
)
)
View(full_metadata)
full_metadata$cluster <- recode(full_metadata$cluster,
"NK Tgd" = "NK Tγδ",
"Tgd CD8+" = "Tγδ CD8+",
"Tgd INSIG1+" = "Tγδ INSIG1+",
"Tgd" = "Tγδ"
)
plot_data <- full_metadata %>%
filter(!is.na(cluster))
cluster_centers <- plot_data %>%
group_by(cluster) %>%
summarize(x = mean(scVI_with_hvg_UMAP_1),
y = mean(scVI_with_hvg_UMAP_2))
umap_plot <- ggplot(plot_data, aes(x = scVI_with_hvg_UMAP_1,
y = scVI_with_hvg_UMAP_2,
color = factor(cluster))) +
geom_point(size = 0.6, alpha = 0.8) +
geom_text(data = cluster_centers, aes(x = x, y = y, label = cluster),
color = "black", size = 3, hjust = 0.5, vjust = 0.5) +
labs(title = "Distributions of Cells Colored by Cluster",
x = "UMAP 1",
y = "UMAP 2",
color = "Cluster") +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA))
ggsave("UMAP.png", plot = umap_plot, width = 8, height = 6, dpi = 300, bg = "white")
#--------------------------------------------------------------------------------- Save MetaData
full_metadata[full_metadata == ""] <- NA
save(full_metadata, patient_colours, diagnosis_colours, palette_34, file = "MetaData_Esmaeil.Rdata")
View(full_metadata)
setwd("C:/Esmaeil/CeliacProject/CeliacProject/1_Data Cleaning/immune receptors distribution Before Data Cleaning")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_jerome.Rdata")
unique(full_metadata$cluster)
setwd("C:/Esmaeil/CeliacProject/CeliacProject/1_Data Cleaning/immune receptors distribution Before Data Cleaning")
#---------------------------------------------------------- Add UMAP plot colored by imm_receptor with custom colors
library(ggplot2)
library(dplyr)
library(cowplot)
# Define receptor colors and labels
receptor_colors <- c(
"ab" = "#ee1819",
"gd" = "#fd7d00",
"abgd" = "#92509f",
"T and B" = "#9b592d",
"hkl" = "#fcd919",
"Aberant ab" = "#3a78ce",
"Aberrant g" = "#47ad45",
"None" = "#eeeeee"
)
receptor_labels <- c(
"ab" = "TCR⍺β",
"gd" = "TRRγδ",
"abgd" = "TCR⍺βγδ",
"T and B" = "T and B",
"hkl" = "hkl",
"Aberant ab" = "Aberrant ⍺β",
"Aberrant g" = "Aberrant γ"
)
# Factor levels
full_metadata$imm_receptor <- factor(
full_metadata$imm_receptor,
levels = c("ab", "gd", "Aberant ab", "Aberrant g", "hkl", "abgd", "T and B", "None")
)
# Plot without legend
main_plot <- ggplot() +
geom_point(
data = full_metadata %>% filter(imm_receptor != ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor),
size = 0.2, alpha = 0.8
) +
scale_color_manual(values = receptor_colors, labels = receptor_labels) +
labs(
title = "Distributions of Cells Colored by Immune Receptor",
x = "UMAP 1",
y = "UMAP 2"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
legend.position = "none",
panel.grid = element_blank(),
plot.background = element_rect(fill = "white", color = NA)
)
# Extract legend with custom title
legend_plot <- ggplot() +
geom_point(
data = full_metadata %>% filter(imm_receptor != ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor)
) +
scale_color_manual(values = receptor_colors, labels = receptor_labels) +
labs(color = "immune receptor") +
guides(color = guide_legend(override.aes = list(size = 4))) +
theme_void()
legend <- cowplot::get_legend(legend_plot)
# Combine plot + legend (UMAP = 8in wide, legend = 2in)
final_plot <- cowplot::plot_grid(main_plot, legend, ncol = 2, rel_widths = c(1, 0.25))
# Save image — total width = 10in, height = 6in
ggsave("Umap_imm_receptor_highlighted.png", plot = final_plot, width = 10, height = 6, dpi = 600, bg = "white")
#---------------------------------------------------------- Add UMAP plot colored by cluster with custom colors
full_metadata$cluster <- recode(full_metadata$cluster,
"NK Tgd" = "NK Tγδ",
"Tgd CD8+" = "Tγδ CD8+",
"Tgd INSIG1+" = "Tγδ INSIG1+",
"Tgd" = "Tγδ"
)
plot_data <- full_metadata %>%
filter(!is.na(cluster))
cluster_centers <- plot_data %>%
group_by(cluster) %>%
summarize(x = mean(scVI_with_hvg_UMAP_1),
y = mean(scVI_with_hvg_UMAP_2))
umap_plot <- ggplot(plot_data, aes(x = scVI_with_hvg_UMAP_1,
y = scVI_with_hvg_UMAP_2,
color = factor(cluster))) +
geom_point(size = 0.6, alpha = 0.8) +
geom_text(data = cluster_centers, aes(x = x, y = y, label = cluster),
color = "black", size = 3, hjust = 0.5, vjust = 0.5) +
labs(title = "Distributions of Cells Colored by Cluster",
x = "UMAP 1",
y = "UMAP 2",
color = "Cluster") +
theme_minimal() +
theme(legend.position = "none",
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "white", color = NA))
ggsave("Umap_cluster_highlighted.png", plot = umap_plot, width = 8, height = 6, dpi = 600, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/1_Data Cleaning/γδαβ Cells")
full_metadata = full_metadata[full_metadata$imm_receptor=="T and B", ]
View(full_metadata)
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_jerome.Rdata")
load("C:/Esmaeil/CeliacProject/BackUp/GEX Data/all_norm_protein_gene.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/1_Data Cleaning")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/1_Data Cleaning")
#------------------------------------------------------------------------------- libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
library(Matrix)
library(tidyverse)
View(full_metadata)
full_metadata2 <- full_metadata[full_metadata$imm_receptor_Jerome == "T and B", ]
full_metadata2 <- full_metadata[full_metadata$imm_receptor == "T and B", ]
View(full_metadata2)
unique(full_metadata2$Patient)
table(full_metadata2$Patient)
load("C:/Users/z5551702/Downloads/metadata_and_colours_latest_cleaned.Rdata")
full_metadata2 <- full_metadata[full_metadata$imm_receptor == "T and B", ]
table(full_metadata2$Patient)
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_jerome.Rdata")
View(full_metadata2)
table(full_metadata2$a_cdr3)
table(full_metadata2$b_cdr3)
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Shanon/diagnosis by diagnosis")
library(dplyr)
library(ggplot2)
library(vegan)
# انتخاب کلاسترهای هدف برای حذف (اختیاری)
# انتخاب کلاسترهای هدف (اگر میخوای حذفشون کنی)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "Tgd INSIG1+", "Tgd", "Tgd CD8+", "ILC2/ILC3", "ILC2/ILTi", "ILC1", "DC", "Macrophages", "Mast cells"
)
full_metadata <- full_metadata %>%
filter(!cluster %in% target_clusters)
# ترتیب مرجع برای نمودار
ordered_celltypes_bycelltype <- c(
"CD4-CD8-", "Cyt. IEL", "Trm IEL",
"IEL CCL4+", "nIEL", "Prolif. IEL", "IEL GZMK+",
"CD4-CD8- IL10 ICOS",
"CD8 Mem", "CD8 Cyt.", "CD8 Trm",
"Th", "Tregs", "Th1 Mem", "Th2/Tfh", "Th17",
"NK Tgd", "Tgd CD8+", "Tgd", "Tgd INSIG1+",
"ILC1", "ILC2/ILC3", "ILC2/ILTi",
"B cells MZB1+", "B cells BAFFR", "B cells_1", "B cells_2",
"Plasmablast", "Plasma cells_1", "Plasma cells_2",
"Macrophages", "DC", "Mast cells"
)
ordered_clusters <- ordered_celltypes_bycelltype[
ordered_celltypes_bycelltype %in% unique(full_metadata$cluster)
]
# محاسبه شاخص‌ها بر اساس Diagnosis و Cluster
cluster_Diagnosis_diversity <- full_metadata %>%
filter(!is.na(cdr_Full_ab)) %>%
group_by(Diagnosis, cluster, cdr_Full_ab) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis, cluster) %>%
summarise(
shannon  = diversity(count, index = "shannon"),
simpson  = diversity(count, index = "simpson"),
richness = specnumber(count),
.groups = "drop"
) %>%
mutate(
shannon_norm = shannon / log(richness),
cluster = factor(cluster, levels = ordered_clusters)
)
# تم گرافیکی
custom_theme <- theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(size = 8, angle = 45, hjust = 1)
)
# حلقه برای رسم و ذخیره نمودار هر بیمار
Diagnosiss <- unique(cluster_Diagnosis_diversity$Diagnosis)
View(custom_theme)
View(custom_theme)
# Combined plot for normalized Shannon by Cluster and Diagnosis
p_combined <- ggplot(cluster_Diagnosis_diversity,
aes(x = cluster, y = shannon_norm, fill = Diagnosis)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Normalized Shannon Diversity by Cluster and Diagnosis",
x = "Cluster", y = "Normalized Shannon Index") +
custom_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save the combined plot
ggsave("shannon_norm_diversity_by_cluster_and_diagnosis.png",
plot = p_combined, width = 12, height = 6, dpi = 300, bg = "white")
# Combined stacked plot for normalized Shannon by Cluster and Diagnosis
p_combined <- ggplot(cluster_Diagnosis_diversity,
aes(x = cluster, y = shannon_norm, fill = Diagnosis)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c(
"Healthy" = "#D83A8A",
"ACD"     = "#349C7C",
"RCD1"    = "#D0632B",
"RCD2"    = "#6E71AD"
)) +
labs(title = "Normalized Shannon Diversity by Cluster and Diagnosis",
x = "Cluster", y = "Normalized Shannon Index", fill = "Diagnosis") +
custom_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save stacked plot
ggsave("shannon_norm_diversity_by_cluster_and_diagnosis_stacked.png",
plot = p_combined, width = 12, height = 6, dpi = 300, bg = "white")
# Combined stacked plot for normalized Shannon by Cluster and Diagnosis
p_combined <- ggplot(cluster_Diagnosis_diversity,
aes(x = cluster, y = shannon_norm, fill = Diagnosis)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c(
"Healthy" = "#D83A8A",
"ACD"     = "#349C7C",
"RCD-I"    = "#D0632B",
"RCD-II"    = "#6E71AD"
)) +
labs(title = "Normalized Shannon Diversity by Cluster and Diagnosis",
x = "Cluster", y = "Normalized Shannon Index", fill = "Diagnosis") +
custom_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save stacked plot
ggsave("shannon_norm_diversity_by_cluster_and_diagnosis_stacked.png",
plot = p_combined, width = 12, height = 6, dpi = 300, bg = "white")
library(ggalluvial)
# Prepare data for alluvial plot
# We'll use Diagnosis ~ Cluster with normalized Shannon as weight
alluvial_df <- cluster_Diagnosis_diversity %>%
filter(!is.na(shannon_norm)) %>%
select(Diagnosis, cluster, shannon_norm)
# Alluvial plot
p_alluvial <- ggplot(alluvial_df,
aes(axis1 = Diagnosis, axis2 = cluster, y = shannon_norm,
fill = Diagnosis)) +
geom_alluvium(aes(fill = Diagnosis), width = 1/12) +
geom_stratum(width = 1/12, fill = "grey80", color = "grey50") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
scale_x_discrete(limits = c("Diagnosis", "Cluster"), expand = c(.05, .05)) +
scale_fill_manual(values = c(
"Healthy" = "#D83A8A",
"ACD"     = "#349C7C",
"RCD1"    = "#D0632B",
"RCD2"    = "#6E71AD"
)) +
labs(title = "Alluvial Plot of Normalized Shannon Diversity",
y = "Normalized Shannon Index") +
theme_bw() +
theme(axis.title.x = element_blank())
# Save alluvial plot
ggsave("shannon_norm_diversity_alluvial.png",
plot = p_alluvial, width = 12, height = 6, dpi = 300, bg = "white")
# Line plot of normalized Shannon by Cluster and Diagnosis
p_line <- ggplot(cluster_Diagnosis_diversity,
aes(x = cluster, y = shannon_norm, color = Diagnosis, group = Diagnosis)) +
geom_line(size = 1) +
geom_point(size = 2) +
scale_color_manual(values = c(
"Healthy" = "#D83A8A",
"ACD"     = "#349C7C",
"RCD1"    = "#D0632B",
"RCD2"    = "#6E71AD"
)) +
labs(title = "Normalized Shannon Diversity Across Clusters",
x = "Cluster", y = "Normalized Shannon Index", color = "Diagnosis") +
custom_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save line plot
ggsave("shannon_norm_diversity_line.png",
plot = p_line, width = 12, height = 6, dpi = 300, bg = "white")
# Line plot of normalized Shannon by Cluster and Diagnosis
p_line <- ggplot(cluster_Diagnosis_diversity,
aes(x = cluster, y = shannon_norm, color = Diagnosis, group = Diagnosis)) +
geom_line(size = 1) +
geom_point(size = 2) +
scale_color_manual(values = c(
"Healthy" = "#D83A8A",
"ACD"     = "#349C7C",
"RCD-I"    = "#D0632B",
"RCD-II"    = "#6E71AD"
)) +
labs(title = "Normalized Shannon Diversity Across Clusters",
x = "Cluster", y = "Normalized Shannon Index", color = "Diagnosis") +
custom_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save line plot
ggsave("shannon_norm_diversity_line.png",
plot = p_line, width = 12, height = 6, dpi = 300, bg = "white")
# Save line plot
ggsave("shannon_norm_diversity_line.png",
plot = p_line, width = 12, height = 6, dpi = 300, bg = "white")
ggsave("shannon_norm_diversity_line.pdf",
plot = p_line, width = 12, height = 6, dpi = 300, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Shanon/diagnosis by diagnosis")
library(dplyr)
library(ggplot2)
library(vegan)
# انتخاب کلاسترهای هدف برای حذف (اختیاری)
# انتخاب کلاسترهای هدف (اگر میخوای حذفشون کنی)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "Tgd INSIG1+", "Tgd", "Tgd CD8+", "ILC2/ILC3", "ILC2/ILTi", "ILC1", "DC", "Macrophages", "Mast cells"
)
full_metadata <- full_metadata %>%
filter(!cluster %in% target_clusters)
# ترتیب مرجع برای نمودار
ordered_celltypes_bycelltype <- c(
"CD4-CD8-", "Cyt. IEL", "Trm IEL",
"IEL CCL4+", "nIEL", "Prolif. IEL", "IEL GZMK+",
"CD4-CD8- IL10 ICOS",
"CD8 Mem", "CD8 Cyt.", "CD8 Trm",
"Th", "Tregs", "Th1 Mem", "Th2/Tfh", "Th17",
"NK Tgd", "Tgd CD8+", "Tgd", "Tgd INSIG1+",
"ILC1", "ILC2/ILC3", "ILC2/ILTi",
"B cells MZB1+", "B cells BAFFR", "B cells_1", "B cells_2",
"Plasmablast", "Plasma cells_1", "Plasma cells_2",
"Macrophages", "DC", "Mast cells"
)
ordered_clusters <- ordered_celltypes_bycelltype[
ordered_celltypes_bycelltype %in% unique(full_metadata$cluster)
]
# محاسبه شاخص‌ها بر اساس Diagnosis و Cluster
cluster_Diagnosis_diversity <- full_metadata %>%
filter(!is.na(cdr_Full_ab)) %>%
group_by(Diagnosis, cluster, cdr_Full_ab) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(Diagnosis, cluster) %>%
summarise(
shannon  = diversity(count, index = "shannon"),
simpson  = diversity(count, index = "simpson"),
richness = specnumber(count),
.groups = "drop"
) %>%
mutate(
shannon_norm = shannon / log(richness),
cluster = factor(cluster, levels = ordered_clusters)
)
# تم گرافیکی
custom_theme <- theme_bw() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
axis.text.x = element_text(size = 8, angle = 45, hjust = 1)
)
# حلقه برای رسم و ذخیره نمودار هر بیمار
Diagnosiss <- unique(cluster_Diagnosis_diversity$Diagnosis)
for (p in Diagnosiss) {
df_Diagnosis <- cluster_Diagnosis_diversity %>% filter(Diagnosis == p)
# نمودار شانون خام
p1 <- ggplot(df_Diagnosis, aes(x = cluster, y = shannon)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = paste("Shannon Diversity - Diagnosis", p),
x = "Cluster", y = "Shannon Index") +
custom_theme
# نمودار شانون نرمالایز شده
p2 <- ggplot(df_Diagnosis, aes(x = cluster, y = shannon_norm)) +
geom_bar(stat = "identity", fill = "darkgreen") +
labs(title = paste("Normalized Shannon Diversity - Diagnosis", p),
x = "Cluster", y = "Normalized Shannon Index") +
custom_theme
# ذخیره نمودارها
ggsave(paste0("shannon_diversity_Diagnosis_", p, ".png"), plot = p1, width = 10, height = 5, dpi = 300, bg = "white")
ggsave(paste0("shannon_norm_diversity_Diagnosis_", p, ".png"), plot = p2, width = 10, height = 5, dpi = 300, bg = "white")
# ذخیره نمودارها (PDF)
ggsave(paste0("shannon_diversity_Diagnosis_", p, ".pdf"),
plot = p1, width = 10, height = 5, dpi = 300, bg = "white")
ggsave(paste0("shannon_norm_diversity_Diagnosis_", p, ".pdf"),
plot = p2, width = 10, height = 5, dpi = 300, bg = "white")
}
# Combined stacked plot for normalized Shannon by Cluster and Diagnosis
p_combined <- ggplot(cluster_Diagnosis_diversity,
aes(x = cluster, y = shannon_norm, fill = Diagnosis)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c(
"Healthy" = "#D83A8A",
"ACD"     = "#349C7C",
"RCD-I"    = "#D0632B",
"RCD-II"    = "#6E71AD"
)) +
labs(title = "Normalized Shannon Diversity by Cluster and Diagnosis",
x = "Cluster", y = "Normalized Shannon Index", fill = "Diagnosis") +
custom_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save stacked plot
ggsave("shannon_norm_diversity_by_cluster_and_diagnosis_stacked.png",
plot = p_combined, width = 12, height = 6, dpi = 300, bg = "white")
ggsave("shannon_norm_diversity_by_cluster_and_diagnosis_stacked.pdf",
plot = p_combined, width = 12, height = 6, dpi = 300, bg = "white")
# Line plot of normalized Shannon by Cluster and Diagnosis
p_line <- ggplot(cluster_Diagnosis_diversity,
aes(x = cluster, y = shannon_norm, color = Diagnosis, group = Diagnosis)) +
geom_line(size = 1) +
geom_point(size = 2) +
scale_color_manual(values = c(
"Healthy" = "#D83A8A",
"ACD"     = "#349C7C",
"RCD-I"    = "#D0632B",
"RCD-II"    = "#6E71AD"
)) +
labs(title = "Normalized Shannon Diversity Across Clusters",
x = "Cluster", y = "Normalized Shannon Index", color = "Diagnosis") +
custom_theme +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Save line plot
ggsave("shannon_norm_diversity_line.png",
plot = p_line, width = 12, height = 6, dpi = 300, bg = "white")
ggsave("shannon_norm_diversity_line.pdf",
plot = p_line, width = 12, height = 6, dpi = 300, bg = "white")
