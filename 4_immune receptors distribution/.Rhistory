load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/immune receptors distribution")
#--------------------------------------------------------------------------------- Add UMAP plot colored by imm_receptor_Esmaeil with custom colors
library(ggplot2)
receptor_colors <- c(
"ab" = "#ee1819",
"gd" = "#fd7d00",
"hkl" = "#fcd919",
"Aberrant ab" = "#3a78ce",
"Aberrant g" = "#47ad45",
"None" = "gray80"
)
# Set factor levels ("" = unknown) to be plotted first
full_metadata$imm_receptor_Esmaeil <- factor(
full_metadata$imm_receptor_Esmaeil,
levels = c("", "hkl", "Aberrant ab", "Aberrant g", "ab", "gd")
)
p <- ggplot() +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil == ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.5
) +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil != ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.8
) +
scale_color_manual(values = receptor_colors) +
guides(color = guide_legend(override.aes = list(size = 4))) +
labs(
title = "UMAP Colored by imm_receptor_Esmaeil",
x = "UMAP 1",
y = "UMAP 2",
color = "Receptor Type"
) +
theme_minimal()
#--------------------------------------------------------------------------------- Add UMAP plot colored by imm_receptor_Esmaeil with custom colors
library(ggplot2)
library(dplyr)
receptor_colors <- c(
"ab" = "#ee1819",
"gd" = "#fd7d00",
"hkl" = "#fcd919",
"Aberrant ab" = "#3a78ce",
"Aberrant g" = "#47ad45",
"None" = "gray80"
)
# Set factor levels ("" = unknown) to be plotted first
full_metadata$imm_receptor_Esmaeil <- factor(
full_metadata$imm_receptor_Esmaeil,
levels = c("", "hkl", "Aberrant ab", "Aberrant g", "ab", "gd")
)
p <- ggplot() +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil == ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.5
) +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil != ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.8
) +
scale_color_manual(values = receptor_colors) +
guides(color = guide_legend(override.aes = list(size = 4))) +
labs(
title = "UMAP Colored by imm_receptor_Esmaeil",
x = "UMAP 1",
y = "UMAP 2",
color = "Receptor Type"
) +
theme_minimal()
ggsave("Umap_imm_receptor_highlighted.png", plot = p, width = 8, height = 6, dpi = 300, bg = "white")
filtered_data <- full_metadata[!is.na(full_metadata$imm_receptor_Esmaeil) & full_metadata$imm_receptor_Esmaeil != "", ]
table_data <- table(filtered_data$cluster, filtered_data$imm_receptor_Esmaeil)
count_df <- as.data.frame.matrix(table_data)
receptor_types <- colnames(count_df)
for (receptor in receptor_types) {
png_filename <- paste0("BarPlot_", gsub(" ", "_", receptor), ".png")
max_y <- max(count_df[[receptor]])
ylim_max <- max_y * 1.1
png(filename = png_filename, width = 4000, height = 2000, res = 600)
barplot(count_df[[receptor]],
names.arg = rownames(count_df),
main = paste("Distribution of", receptor, "across clusters"),
xlab = "Clusters",
ylab = "Count",
col = "#984EA3",
las = 2,
cex.names = 0.3,
cex.axis = 0.3,
ylim = c(0, ylim_max))
dev.off()
}
unique(full_metadata$imm_receptor_Esmaeil)
full_metadata <- full_metadata[full_metadata$imm_receptor_Esmaeil %in% c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g"), ]
filtered_data <- full_metadata[!is.na(full_metadata$imm_receptor_Esmaeil) & full_metadata$imm_receptor_Esmaeil != "", ]
table_data <- table(filtered_data$cluster, filtered_data$imm_receptor_Esmaeil)
count_df <- as.data.frame.matrix(table_data)
receptor_types <- colnames(count_df)
for (receptor in receptor_types) {
png_filename <- paste0("BarPlot_", gsub(" ", "_", receptor), ".png")
max_y <- max(count_df[[receptor]])
ylim_max <- max_y * 1.1
png(filename = png_filename, width = 4000, height = 2000, res = 600)
barplot(count_df[[receptor]],
names.arg = rownames(count_df),
main = paste("Distribution of", receptor, "across clusters"),
xlab = "Clusters",
ylab = "Count",
col = "#984EA3",
las = 2,
cex.names = 0.3,
cex.axis = 0.3,
ylim = c(0, ylim_max))
dev.off()
}
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
full_metadata <- full_metadata[full_metadata$imm_receptor_Esmaeil %in% c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g"), ]
filtered_data <- full_metadata[!is.na(full_metadata$imm_receptor_Esmaeil) & full_metadata$imm_receptor_Esmaeil != "", ]
full_metadata <- full_metadata[full_metadata$imm_receptor_Esmaeil %in% c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g"), ]
filtered_data <- full_metadata[!is.na(full_metadata$imm_receptor_Esmaeil) & full_metadata$imm_receptor_Esmaeil != "", ]
table_data <- table(filtered_data$cluster, filtered_data$imm_receptor_Esmaeil)
count_df <- as.data.frame.matrix(table_data)
receptor_types <- colnames(count_df)
for (receptor in receptor_types) {
cat(receptor,"\n")
png_filename <- paste0("BarPlot_", gsub(" ", "_", receptor), ".png")
max_y <- max(count_df[[receptor]])
ylim_max <- max_y * 1.1
png(filename = png_filename, width = 4000, height = 2000, res = 600)
barplot(count_df[[receptor]],
names.arg = rownames(count_df),
main = paste("Distribution of", receptor, "across clusters"),
xlab = "Clusters",
ylab = "Count",
col = "#984EA3",
las = 2,
cex.names = 0.3,
cex.axis = 0.3,
ylim = c(0, ylim_max))
dev.off()
}
unique(full_metadata$imm_receptor_Esmaeil)
print(rownames(count_df))
print(colnames(count_df))
# فقط ردیف‌هایی که imm_receptor_Esmaeil یکی از موارد زیر است نگه داشته می‌شود
valid_receptors <- c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g")
full_metadata <- full_metadata[
!is.na(full_metadata$imm_receptor_Esmaeil) &
full_metadata$imm_receptor_Esmaeil %in% valid_receptors, ]
# حذف ردیف‌هایی که cluster نامعتبر یا NA دارند
filtered_data <- full_metadata[
!is.na(full_metadata$cluster) & full_metadata$cluster != "", ]
# ساخت جدول شمارش
table_data <- table(filtered_data$cluster, filtered_data$imm_receptor_Esmaeil)
count_df <- as.data.frame.matrix(table_data)
# حذف ستون اشتباهی به نام "V1" اگر به‌صورت ناخواسته ایجاد شده
if ("V1" %in% colnames(count_df)) {
count_df <- count_df[, colnames(count_df) != "V1"]
}
# لیست انواع ریسپتور
receptor_types <- colnames(count_df)
# حلقه برای رسم نمودار برای هر ریسپتور
for (receptor in receptor_types) {
cat(receptor, "\n")
png_filename <- paste0("BarPlot_", gsub(" ", "_", receptor), ".png")
max_y <- max(count_df[[receptor]])
ylim_max <- max_y * 1.1
png(filename = png_filename, width = 4000, height = 2000, res = 600)
barplot(count_df[[receptor]],
names.arg = rownames(count_df),
main = paste("Distribution of", receptor, "across clusters"),
xlab = "Clusters",
ylab = "Count",
col = "#984EA3",   # رنگ بنفش
las = 2,
cex.names = 0.3,
cex.axis = 0.3,
ylim = c(0, ylim_max))
dev.off()
}
#--------------------------------------------------------------------------------- Add UMAP plot colored by imm_receptor_Esmaeil with custom colors
library(ggplot2)
library(dplyr)
receptor_colors <- c(
"ab" = "#ee1819",
"gd" = "#fd7d00",
"hkl" = "#fcd919",
"Aberrant ab" = "#3a78ce",
"Aberrant g" = "#47ad45",
"None" = "gray80"
)
# Set factor levels ("" = unknown) to be plotted first
full_metadata$imm_receptor_Esmaeil <- factor(
full_metadata$imm_receptor_Esmaeil,
levels = c("", "hkl", "Aberrant ab", "Aberrant g", "ab", "gd")
)
p <- ggplot() +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil == ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.5
) +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil != ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.8
) +
scale_color_manual(values = receptor_colors) +
guides(color = guide_legend(override.aes = list(size = 4))) +
labs(
title = "UMAP Colored by imm_receptor_Esmaeil",
x = "UMAP 1",
y = "UMAP 2",
color = "Receptor Type"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Umap_imm_receptor_highlighted.png", plot = p, width = 8, height = 6, dpi = 300, bg = "white")
