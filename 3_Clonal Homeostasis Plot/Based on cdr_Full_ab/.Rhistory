mutate(
Aberrant_status = ifelse(
imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant",
"Not Aberrant"
)
)
count_df <- filtered_df %>%
group_by(cluster, Aberrant_status) %>%
summarise(count = n(), .groups = "drop") %>%
complete(cluster, Aberrant_status = c("Aberrant", "Not Aberrant"), fill = list(count = 0))
count_df$cluster <- factor(count_df$cluster, levels = unique(count_df$cluster))
p <- ggplot(count_df, aes(x = cluster, y = count, fill = Aberrant_status)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "Number of Aberrant vs Not Aberrant Cells per Cluster (Stacked)",
x = "Cluster",
y = "Number of Cells",
fill = "Aberrant Status"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# ذخیره نمودار به صورت PNG
ggsave("Aberrant_vs_NotAberrant_per_Cluster.png", plot = p, width = 10, height = 6, dpi = 300)
# ------------------
library(dplyr)
library(ggplot2)
library(tidyr)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
filtered_df <- full_metadata %>%
filter(!cluster %in% target_clusters) %>%
mutate(
Aberrant_status = ifelse(
imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant",
"Not Aberrant"
)
)
count_df <- filtered_df %>%
group_by(cluster, Aberrant_status) %>%
summarise(count = n(), .groups = "drop") %>%
complete(cluster, Aberrant_status = c("Aberrant", "Not Aberrant"), fill = list(count = 0))
count_df$cluster <- factor(count_df$cluster, levels = unique(count_df$cluster))
p <- ggplot(count_df, aes(x = cluster, y = count, fill = Aberrant_status)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "Number of Aberrant vs Not Aberrant Cells per Cluster (Stacked)",
x = "Cluster",
y = "Number of Cells",
fill = "Aberrant Status"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# ذخیره نمودار به صورت PNG
ggsave("Aberrant_vs_NotAberrant_per_Cluster.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
library(tidyr)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
cluster_summary <- full_metadata %>%
group_by(cluster) %>%
summarise(
Aberrant_ab = sum(imm_receptor_Esmaeil == "Aberrant ab", na.rm = TRUE),
Aberrant_g = sum(imm_receptor_Esmaeil == "Aberrant g", na.rm = TRUE)
) %>%
mutate(Aberrant_total = Aberrant_ab + Aberrant_g) %>%
filter(!cluster %in% target_clusters)
# ------------------------------------------------------ Part 1: Total Aberrant per cluster ---------------------------
png("1_Cluster_Aberrant_Total_Barplot.png", width = 2000, height = 1400, res = 300)
ggplot(cluster_summary, aes(x = cluster, y = Aberrant_total)) +
geom_bar(stat = "identity", fill = "#984EA3", width = 0.6) +
labs(
title = "Total Aberrant Cells per Cluster",
x = "Cluster",
y = "Total Aberrant Cell Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
axis.text.y = element_text(size = 7),
plot.title = element_text(hjust = 0.5, size = 12),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9)
)
dev.off()
# ------------------------------------------------------ Part 2: Aberrant ab vs g ---------------------------
cluster_long <- cluster_summary %>%
pivot_longer(
cols = c(Aberrant_ab, Aberrant_g),
names_to = "Type",
values_to = "Count"
)
png("2_Cluster_Aberrant_Split_Barplot.png", width = 2500, height = 1600, res = 300)
ggplot(cluster_long, aes(x = cluster, y = Count, fill = Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.6) +
scale_fill_manual(
values = c("Aberrant_ab" = "#3a78ce", "Aberrant_g" = "#47ad45"),
name = "Aberrant Cell Type",
labels = c("Aberrant ab", "Aberrant g")
) +
labs(
title = "Aberrant Cell Counts per Cluster",
x = "Cluster",
y = "Cell Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
axis.text.y = element_text(size = 7),
plot.title = element_text(hjust = 0.5, size = 12),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9)
)
dev.off()
# ------------------------------------------------------ Part 3: Aberrant ab vs g ---------------------------
library(ggplot2)
library(dplyr)
color_map <- c(
"Aberrant ab" = "#3A78CE",
"Aberrant g"  = "#47AD45",
"Other"       = "grey80"
)
plot_df <- full_metadata %>%
mutate(
receptor_label = case_when(
imm_receptor_Esmaeil == "Aberrant ab" ~ "Aberrant ab",
imm_receptor_Esmaeil == "Aberrant g"  ~ "Aberrant g",
TRUE                                  ~ "Other"
),
receptor_label = factor(receptor_label, levels = c("Other", "Aberrant ab", "Aberrant g"))
)
umap_plot <- ggplot(plot_df, aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2)) +
geom_point(data = filter(plot_df, receptor_label == "Other"),
color = "grey80", size = 0.5, alpha = 0.4) +
geom_point(data = filter(plot_df, receptor_label != "Other"),
aes(color = receptor_label), size = 0.2, alpha = 0.8) +
scale_color_manual(values = color_map, name = "Immune Receptor") +
guides(color = guide_legend(override.aes = list(size = 3))) +
labs(
title = "UMAP Plot Colored by Aberrant Immune Receptors",
x = "UMAP 1", y = "UMAP 2"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
legend.position = "right"
)
ggsave("3_UMAP_Aberrant_Receptors.png", umap_plot, width = 8, height = 6, dpi = 400, bg = "white")
# ------------------------------------------------------ Part 4: Aberrant vs Not Aberrant per Cluster plot ---------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
filtered_df <- full_metadata %>%
filter(!cluster %in% target_clusters) %>%
mutate(
Aberrant_status = ifelse(
imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant",
"Not Aberrant"
)
)
count_df <- filtered_df %>%
group_by(cluster, Aberrant_status) %>%
summarise(count = n(), .groups = "drop") %>%
complete(cluster, Aberrant_status = c("Aberrant", "Not Aberrant"), fill = list(count = 0))
count_df$cluster <- factor(count_df$cluster, levels = unique(count_df$cluster))
p <- ggplot(count_df, aes(x = cluster, y = count, fill = Aberrant_status)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "Number of Aberrant vs Not Aberrant Cells per Cluster (Stacked)",
x = "Cluster",
y = "Number of Cells",
fill = "Aberrant Status"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# ذخیره نمودار به صورت PNG
ggsave("4_Aberrant_vs_NotAberrant_per_Cluster.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
library(dplyr)
library(ggplot2)
library(tidyr)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
cluster_summary <- full_metadata %>%
group_by(cluster) %>%
summarise(
Aberrant_ab = sum(imm_receptor_Esmaeil == "Aberrant ab", na.rm = TRUE),
Aberrant_g = sum(imm_receptor_Esmaeil == "Aberrant g", na.rm = TRUE)
) %>%
mutate(Aberrant_total = Aberrant_ab + Aberrant_g) %>%
filter(!cluster %in% target_clusters)
# ------------------------------------------------------ Part 1: Total Aberrant per cluster ---------------------------
png("1_Cluster_Aberrant_Total_Barplot.png", width = 2000, height = 1400, res = 300)
ggplot(cluster_summary, aes(x = cluster, y = Aberrant_total)) +
geom_bar(stat = "identity", fill = "#984EA3", width = 0.6) +
labs(
title = "Total Aberrant Cells per Cluster",
x = "Cluster",
y = "Total Aberrant Cell Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
axis.text.y = element_text(size = 7),
plot.title = element_text(hjust = 0.5, size = 12),
axis.title.x = element_text(size = 9),
axis.title.y = element_text(size = 9)
)
dev.off()
# ------------------------------------------------------ Part 2: Aberrant ab vs g ---------------------------
library(ggplot2)
library(dplyr)
color_map <- c(
"Aberrant ab" = "#3A78CE",
"Aberrant g"  = "#47AD45",
"Other"       = "grey80"
)
plot_df <- full_metadata %>%
mutate(
receptor_label = case_when(
imm_receptor_Esmaeil == "Aberrant ab" ~ "Aberrant ab",
imm_receptor_Esmaeil == "Aberrant g"  ~ "Aberrant g",
TRUE                                  ~ "Other"
),
receptor_label = factor(receptor_label, levels = c("Other", "Aberrant ab", "Aberrant g"))
)
umap_plot <- ggplot(plot_df, aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2)) +
geom_point(data = filter(plot_df, receptor_label == "Other"),
color = "grey80", size = 0.5, alpha = 0.4) +
geom_point(data = filter(plot_df, receptor_label != "Other"),
aes(color = receptor_label), size = 0.2, alpha = 0.8) +
scale_color_manual(values = color_map, name = "Immune Receptor") +
guides(color = guide_legend(override.aes = list(size = 3))) +
labs(
title = "UMAP Plot Colored by Aberrant Immune Receptors",
x = "UMAP 1", y = "UMAP 2"
) +
theme_minimal(base_size = 12) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 12),
legend.position = "right"
)
ggsave("3_UMAP_Aberrant_Receptors.png", umap_plot, width = 8, height = 6, dpi = 400, bg = "white")
# ------------------------------------------------------ Part 3: Aberrant ab vs g ---------------------------
cluster_long <- cluster_summary %>%
pivot_longer(
cols = c(Aberrant_ab, Aberrant_g),
names_to = "Type",
values_to = "Count"
)
png("2_Cluster_Aberrant_Split_Barplot.png", width = 2500, height = 1600, res = 300)
ggplot(cluster_long, aes(x = cluster, y = Count, fill = Type)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8), width = 0.6) +
scale_fill_manual(
values = c("Aberrant_ab" = "#3a78ce", "Aberrant_g" = "#47ad45"),
name = "Aberrant Cell Type",
labels = c("Aberrant ab", "Aberrant g")
) +
labs(
title = "Aberrant Cell Counts per Cluster",
x = "Cluster",
y = "Cell Count"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 7),
axis.text.y = element_text(size = 7),
plot.title = element_text(hjust = 0.5, size = 12),
legend.title = element_text(size = 10),
legend.text = element_text(size = 9)
)
dev.off()
# ------------------------------------------------------ Part 4: Aberrant vs Not Aberrant per Cluster plot ---------------------------
library(dplyr)
library(ggplot2)
library(tidyr)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
filtered_df <- full_metadata %>%
filter(!cluster %in% target_clusters) %>%
mutate(
Aberrant_status = ifelse(
imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant",
"Not Aberrant"
)
)
count_df <- filtered_df %>%
group_by(cluster, Aberrant_status) %>%
summarise(count = n(), .groups = "drop") %>%
complete(cluster, Aberrant_status = c("Aberrant", "Not Aberrant"), fill = list(count = 0))
count_df$cluster <- factor(count_df$cluster, levels = unique(count_df$cluster))
p <- ggplot(count_df, aes(x = cluster, y = count, fill = Aberrant_status)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "Number of Aberrant vs Not Aberrant Cells per Cluster (Stacked)",
x = "Cluster",
y = "Number of Cells",
fill = "Aberrant Status"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold")
)
# ذخیره نمودار به صورت PNG
ggsave("4_Aberrant_vs_NotAberrant_per_Cluster.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
unique(full_metadata$cluster)
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clone Size Analysis/Top 10 Clone Sizes")
library(dplyr)
library(ggplot2)
# استخراج 10 کلون بزرگ
top10_clones <- full_metadata %>%
group_by(cdr_Full_ab) %>%
summarise(
clone_size = unique(clone_size_ab)[1],
receptor_type = case_when(
any(imm_receptor_Esmaeil == "Aberrant ab") ~ "Aberrant ab",
any(imm_receptor_Esmaeil == "Aberrant g")  ~ "Aberrant g",
TRUE                                        ~ "Other"
)
) %>%
arrange(desc(clone_size)) %>%
slice_head(n = 10)
# تنظیم ترتیب عوامل
top10_clones$cdr_Full_ab <- factor(top10_clones$cdr_Full_ab,
levels = top10_clones$cdr_Full_ab)
# تعریف رنگ‌ها
color_map <- c(
"Aberrant ab" = "#3A78CE",
"Aberrant g"  = "#47AD45",
"Other"       = "grey60"
)
# رسم نمودار
png("Top_10_Clone_Sizes_With_Legend.png", width = 3000, height = 2000, res = 300)
ggplot(top10_clones, aes(x = cdr_Full_ab, y = clone_size, fill = receptor_type)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = color_map, name = "Receptor Type") +
labs(
title = "Top 10 Clones by Clone Size",
x = "Clone",
y = "Clone Size"
) +
theme_minimal(base_size = 16) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(hjust = 0.5, size = 20, face = "bold")
)
dev.off()
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clonal Homeostasis Plot/Based on cdr_Full_gd")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("scRepertoire")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggplot2)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
metadata_filtered <- full_metadata %>%
filter(!cluster %in% target_clusters)
metadata_filtered <- metadata_filtered %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
))
df <- metadata_filtered %>%
filter(!is.na(clone_category)) %>%
group_by(cluster, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(cluster, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(cluster) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
df$cluster <- factor(df$cluster)
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
clone_colors <- rev(c("#999999", "#FDBF6F", "#CAB2D6", "#f781bf", "#1b9e77"))
p1 <- ggplot(df, aes(x = cluster, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Cluster", y = "Percentage of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution per Cluster (Percentage)"
) +
white_theme
ggsave("CloneSize_gd_Percentage.png", p1, width = 10, height = 5, dpi = 400, bg = "white")
p2 <- ggplot(df, aes(x = cluster, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Cluster", y = "Number of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution per Cluster (Raw Counts)"
) +
white_theme
ggsave("CloneSize_gd_RawCounts.png", p2, width = 10, height = 5, dpi = 400, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clonal Homeostasis Plot/Based on cdr_Full_ab")
library(dplyr)
library(tidyr)
library(ggplot2)
# فیلتر کردن خوشه‌های نامطلوب (مثل قبل)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
metadata_filtered <- full_metadata %>%
filter(!cluster %in% target_clusters)
# دسته‌بندی کلون‌ها بر اساس clone_size_ab (به جای clone_size_gd)
metadata_filtered <- metadata_filtered %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
))
# گروه‌بندی و خلاصه‌سازی داده‌ها برای نمودارها
df <- metadata_filtered %>%
filter(!is.na(clone_category)) %>%
group_by(cluster, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(cluster, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(cluster) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# ترتیب دسته‌ها
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
df$cluster <- factor(df$cluster)
# تعریف تم سفید با عنوان وسط‌چین
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# رنگ‌ها (می‌توانید بر اساس سلیقه تغییر دهید)
clone_colors <- rev(c("#999999", "#FDBF6F", "#CAB2D6", "#f781bf", "#1b9e77"))
# نمودار درصدی
p1 <- ggplot(df, aes(x = cluster, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Cluster", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution per Cluster (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage.png", p1, width = 10, height = 5, dpi = 400, bg = "white")
# نمودار تعدادی
p2 <- ggplot(df, aes(x = cluster, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Cluster", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution per Cluster (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts.png", p2, width = 10, height = 5, dpi = 400, bg = "white")
