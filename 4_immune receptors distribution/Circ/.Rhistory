"Aberrant",
"Not Aberrant"
)
)
count_df <- filtered_df %>%
group_by(cluster, Aberrant_status) %>%
summarise(count = n(), .groups = "drop") %>%
complete(cluster, Aberrant_status = c("Aberrant", "Not Aberrant"), fill = list(count = 0))
count_df$cluster <- factor(count_df$cluster, levels = unique(count_df$cluster))
p <- ggplot(count_df, aes(x = cluster, y = count, fill = Aberrant_status)) +
geom_bar(stat = "identity", position = "stack") +
labs(
title = "Number of Aberrant vs Not Aberrant Cells per Cluster",
x = "Cluster",
y = "Number of Cells",
fill = "Aberrant Status"
) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold")
)
ggsave("4_Aberrant_vs_NotAberrant_per_Cluster.png", plot = p, width = 10, height = 6, dpi = 300, bg = "white")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/3_Clonal Homeostasis Plot/Based on cdr_Full_ab")
suppressMessages(library(scRepertoire))
library(dplyr)
library(tidyr)
library(ggplot2)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
metadata_filtered <- full_metadata %>%
filter(!cluster %in% target_clusters)
metadata_filtered <- metadata_filtered %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
))
df <- metadata_filtered %>%
filter(!is.na(clone_category)) %>%
group_by(cluster, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(cluster, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(cluster) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
df$cluster <- factor(df$cluster)
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
clone_colors <- rev(c("#999999", "#FDBF6F", "#CAB2D6", "#f781bf", "#1b9e77"))
p1 <- ggplot(df, aes(x = cluster, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Cluster", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution per Cluster (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage.png", p1, width = 10, height = 5, dpi = 400, bg = "white")
p2 <- ggplot(df, aes(x = cluster, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Cluster", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution per Cluster (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts.png", p2, width = 10, height = 5, dpi = 400, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/3_Clonal Homeostasis Plot/Based on cdr_Full_gd")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("scRepertoire")
suppressMessages(library(scRepertoire))
library(dplyr)
library(tidyr)
library(ggplot2)
library(dplyr)
library(tidyr)
library(ggplot2)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
metadata_filtered <- full_metadata %>%
filter(!cluster %in% target_clusters)
metadata_filtered <- metadata_filtered %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
))
df <- metadata_filtered %>%
filter(!is.na(clone_category)) %>%
group_by(cluster, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(cluster, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(cluster) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
df$cluster <- factor(df$cluster)
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
clone_colors <- rev(c("#999999", "#FDBF6F", "#CAB2D6", "#f781bf", "#1b9e77"))
p1 <- ggplot(df, aes(x = cluster, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Cluster", y = "Percentage of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution per Cluster (Percentage)"
) +
white_theme
ggsave("CloneSize_gd_Percentage.png", p1, width = 10, height = 5, dpi = 400, bg = "white")
p2 <- ggplot(df, aes(x = cluster, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Cluster", y = "Number of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution per Cluster (Raw Counts)"
) +
white_theme
ggsave("CloneSize_gd_RawCounts.png", p2, width = 10, height = 5, dpi = 400, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/4_immune receptors distribution")
#-------------------------------------------------------------------------------- Add UMAP plot colored by imm_receptor_Esmaeil with custom colors
library(ggplot2)
library(dplyr)
receptor_colors <- c(
"ab" = "#ee1819",
"gd" = "#fd7d00",
"hkl" = "#fcd919",
"Aberrant ab" = "#3a78ce",
"Aberrant g" = "#47ad45",
"None" = "#eeeeee"
)
full_metadata$imm_receptor_Esmaeil <- factor(
full_metadata$imm_receptor_Esmaeil,
levels = c("", "ab", "Aberrant ab", "Aberrant g", "gd", "hkl")
)
receptor_labels <- c(
"ab" = "TCR⍺β",
"gd" = "γδ",
"hkl" = "hkl",
"Aberrant ab" = "Aberrant ⍺β",
"Aberrant g" = "Aberrant γ"
)
p <- ggplot() +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil == ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.5
) +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil != ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.8
) +
scale_color_manual(values = receptor_colors, labels = receptor_labels) +
guides(color = guide_legend(override.aes = list(size = 4))) +
labs(
title = "UMAP Colored by immune receptor",
x = "UMAP 1",
y = "UMAP 2",
color = "Receptor Type"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Umap_imm_receptor_highlighted.png", plot = p, width = 8, height = 6, dpi = 300, bg = "white")
#-------------------------------------------------------------------------------- Bar Plot of Immune Receptor Distribution Across Clusters
full_metadata$cluster <- recode(full_metadata$cluster,
"NK Tgd" = "NK Tγδ",
"Tgd CD8+" = "Tγδ CD8+",
"Tgd INSIG1+" = "Tγδ INSIG1+",
"Tgd" = "Tγδ"
)
valid_receptors <- c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g")
full_metadata <- full_metadata[
!is.na(full_metadata$imm_receptor_Esmaeil) &
full_metadata$imm_receptor_Esmaeil %in% valid_receptors, ]
filtered_data <- full_metadata[
!is.na(full_metadata$cluster) & full_metadata$cluster != "", ]
table_data <- table(filtered_data$cluster, filtered_data$imm_receptor_Esmaeil)
count_df <- as.data.frame.matrix(table_data)
if ("V1" %in% colnames(count_df)) {
count_df <- count_df[, colnames(count_df) != "V1"]
}
receptor_types <- colnames(count_df)
barplot_labels <- c(
"ab" = "TCRαβ",
"gd" = "TCRγδ",
"hkl" = "hkl",
"Aberrant ab" = "Aberrant αβ",
"Aberrant g" = "Aberrant γ"
)
for (receptor in receptor_types) {
png_filename <- paste0("BarPlot_", gsub(" ", "_", receptor), ".png")
max_y <- max(count_df[[receptor]])
ylim_max <- max_y * 1.1
png(filename = png_filename, width = 4000, height = 2000, res = 600)
barplot(count_df[[receptor]],
names.arg = rownames(count_df),
main = paste("Distribution of", barplot_labels[[receptor]], "receptor across clusters"),
xlab = "Clusters",
ylab = "Count",
col = "#984EA3",
las = 2,
cex.names = 0.3,
cex.axis = 0.3,
ylim = c(0, ylim_max))
dev.off()
}
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
#-------------------------------------------------------------------------------- Add UMAP plot colored by imm_receptor_Esmaeil with custom colors
library(ggplot2)
library(dplyr)
receptor_colors <- c(
"ab" = "#ee1819",
"gd" = "#fd7d00",
"hkl" = "#fcd919",
"Aberrant ab" = "#3a78ce",
"Aberrant g" = "#47ad45",
"None" = "#eeeeee"
)
full_metadata$imm_receptor_Esmaeil <- factor(
full_metadata$imm_receptor_Esmaeil,
levels = c("", "ab", "Aberrant ab", "Aberrant g", "gd", "hkl")
)
receptor_labels <- c(
"ab" = "TCR⍺β",
"gd" = "TCRγδ",
"hkl" = "hkl",
"Aberrant ab" = "Aberrant ⍺β",
"Aberrant g" = "Aberrant γ"
)
p <- ggplot() +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil == ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.5
) +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil != ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.8
) +
scale_color_manual(values = receptor_colors, labels = receptor_labels) +
guides(color = guide_legend(override.aes = list(size = 4))) +
labs(
title = "UMAP Colored by immune receptor",
x = "UMAP 1",
y = "UMAP 2",
color = "Receptor Type"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Umap_imm_receptor_highlighted.png", plot = p, width = 8, height = 6, dpi = 300, bg = "white")
#-------------------------------------------------------------------------------- Bar Plot of Immune Receptor Distribution Across Clusters
valid_receptors <- c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g")
full_metadata <- full_metadata[
!is.na(full_metadata$imm_receptor_Esmaeil) &
full_metadata$imm_receptor_Esmaeil %in% valid_receptors, ]
filtered_data <- full_metadata[
!is.na(full_metadata$cluster) & full_metadata$cluster != "", ]
table_data <- table(filtered_data$cluster, filtered_data$imm_receptor_Esmaeil)
count_df <- as.data.frame.matrix(table_data)
if ("V1" %in% colnames(count_df)) {
count_df <- count_df[, colnames(count_df) != "V1"]
}
receptor_types <- colnames(count_df)
barplot_labels <- c(
"ab" = "TCRαβ",
"gd" = "TCRγδ",
"hkl" = "hkl",
"Aberrant ab" = "Aberrant αβ",
"Aberrant g" = "Aberrant γ"
)
for (receptor in receptor_types) {
png_filename <- paste0("BarPlot_", gsub(" ", "_", receptor), ".png")
max_y <- max(count_df[[receptor]])
ylim_max <- max_y * 1.1
png(filename = png_filename, width = 4000, height = 2000, res = 600)
barplot(count_df[[receptor]],
names.arg = rownames(count_df),
main = paste("Distribution of", barplot_labels[[receptor]], "receptor across clusters"),
xlab = "Clusters",
ylab = "Count",
col = "#984EA3",
las = 2,
cex.names = 0.3,
cex.axis = 0.3,
ylim = c(0, ylim_max))
dev.off()
}
#-------------------------------------------------------------------------------- Add UMAP plot colored by imm_receptor_Esmaeil with custom colors
library(ggplot2)
library(dplyr)
receptor_colors <- c(
"ab" = "#ee1819",
"gd" = "#fd7d00",
"hkl" = "#fcd919",
"Aberrant ab" = "#3a78ce",
"Aberrant g" = "#47ad45",
"None" = "#eeeeee"
)
full_metadata$imm_receptor_Esmaeil <- factor(
full_metadata$imm_receptor_Esmaeil,
levels = c("", "ab", "gd", "Aberrant ab", "Aberrant g", "hkl")
)
receptor_labels <- c(
"ab" = "TCR⍺β",
"gd" = "TCRγδ",
"hkl" = "hkl",
"Aberrant ab" = "Aberrant ⍺β",
"Aberrant g" = "Aberrant γ"
)
p <- ggplot() +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil == ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.5
) +
geom_point(
data = full_metadata %>% filter(imm_receptor_Esmaeil != ""),
aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2, color = imm_receptor_Esmaeil),
size = 0.2, alpha = 0.8
) +
scale_color_manual(values = receptor_colors, labels = receptor_labels) +
guides(color = guide_legend(override.aes = list(size = 4))) +
labs(
title = "UMAP Colored by immune receptor",
x = "UMAP 1",
y = "UMAP 2",
color = "Receptor Type"
) +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggsave("Umap_imm_receptor_highlighted.png", plot = p, width = 8, height = 6, dpi = 300, bg = "white")
#-------------------------------------------------------------------------------- Bar Plot of Immune Receptor Distribution Across Clusters
valid_receptors <- c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g")
full_metadata <- full_metadata[
!is.na(full_metadata$imm_receptor_Esmaeil) &
full_metadata$imm_receptor_Esmaeil %in% valid_receptors, ]
filtered_data <- full_metadata[
!is.na(full_metadata$cluster) & full_metadata$cluster != "", ]
table_data <- table(filtered_data$cluster, filtered_data$imm_receptor_Esmaeil)
count_df <- as.data.frame.matrix(table_data)
if ("V1" %in% colnames(count_df)) {
count_df <- count_df[, colnames(count_df) != "V1"]
}
receptor_types <- colnames(count_df)
barplot_labels <- c(
"ab" = "TCRαβ",
"gd" = "TCRγδ",
"hkl" = "hkl",
"Aberrant ab" = "Aberrant αβ",
"Aberrant g" = "Aberrant γ"
)
for (receptor in receptor_types) {
png_filename <- paste0("BarPlot_", gsub(" ", "_", receptor), ".png")
max_y <- max(count_df[[receptor]])
ylim_max <- max_y * 1.1
png(filename = png_filename, width = 4000, height = 2000, res = 600)
barplot(count_df[[receptor]],
names.arg = rownames(count_df),
main = paste("Distribution of", barplot_labels[[receptor]], "receptor across clusters"),
xlab = "Clusters",
ylab = "Count",
col = "#984EA3",
las = 2,
cex.names = 0.3,
cex.axis = 0.3,
ylim = c(0, ylim_max))
dev.off()
}
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/4_immune receptors distribution")
valid_receptors <- c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g")
full_metadata <- full_metadata[
!is.na(full_metadata$imm_receptor_Esmaeil) &
full_metadata$imm_receptor_Esmaeil %in% valid_receptors, ]
filtered_data <- full_metadata[
!is.na(full_metadata$cluster) & full_metadata$cluster != "", ]
table_data <- table(filtered_data$cluster, filtered_data$imm_receptor_Esmaeil)
count_df <- as.data.frame.matrix(table_data)
if ("V1" %in% colnames(count_df)) {
count_df <- count_df[, colnames(count_df) != "V1"]
}
receptor_types <- colnames(count_df)
barplot_labels <- c(
"ab" = "TCRαβ",
"gd" = "TCRγδ",
"hkl" = "hkl",
"Aberrant ab" = "Aberrant αβ",
"Aberrant g" = "Aberrant γ"
)
for (receptor in receptor_types) {
png_filename <- paste0("BarPlot_", gsub(" ", "_", receptor), ".png")
max_y <- max(count_df[[receptor]])
ylim_max <- max_y * 1.1
png(filename = png_filename, width = 4000, height = 2000, res = 600)
barplot(count_df[[receptor]],
names.arg = rownames(count_df),
main = paste("Distribution of", barplot_labels[[receptor]], "receptor across clusters"),
xlab = "Clusters",
ylab = "Count",
col = "#984EA3",
las = 2,
cex.names = 0.3,
cex.axis = 0.3,
ylim = c(0, ylim_max))
dev.off()
}
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
valid_receptors <- c("ab", "gd", "hkl", "Aberrant ab", "Aberrant g")
full_metadata <- full_metadata[
!is.na(full_metadata$imm_receptor_Esmaeil) &
full_metadata$imm_receptor_Esmaeil %in% valid_receptors, ]
filtered_data <- full_metadata[
!is.na(full_metadata$cluster) & full_metadata$cluster != "", ]
View(full_metadata)
length(unique(full_metadata$imm_receptor_Esmaeil))
length(full_metadata$imm_receptor_Esmaeil)
length(full_metadata$imm_receptor_Esmaeil="ab")
View(full_metadata)
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
unique(full_metadata$imm_receptor_Esmaeil)
unique(full_metadata$cluster)
AbAb   <- sum(full_metadata$cluster == "CD4-CD8-")
unique(full_metadata$cluster == "CD4-CD8-")
length(AbAb)
sum(full_metadata$cluster == "CD4-CD8-")
sum(full_metadata$cluster == "CD4-CD8-" & full_metadata$imm_receptor_Esmaeil == "Aberrant ab")
sum(full_metadata$cluster == "CD4-CD8-" & full_metadata$imm_receptor_Esmaeil == "Aberrant g")
sum(full_metadata$cluster == "CD4-CD8-" & (!full_metadata$imm_receptor_Esmaeil == "Aberrant g" & !full_metadata$imm_receptor_Esmaeil == "Aberrant ab")
sum(full_metadata$cluster == "CD4-CD8-" & (full_metadata$imm_receptor_Esmaeil != "Aberrant g" & full_metadata$imm_receptor_Esmaeil != "Aberrant ab")
sum(full_metadata$cluster == "CD4-CD8-" & (full_metadata$imm_receptor_Esmaeil != "Aberrant g" & full_metadata$imm_receptor_Esmaeil != "Aberrant ab"))
sum(full_metadata$cluster == "CD4-CD8-" & full_metadata$imm_receptor_Esmaeil == "ab")
sum(full_metadata$cluster == "CD4-CD8-" & full_metadata$imm_receptor_Esmaeil == "Aberrant ab")
sum(full_metadata$cluster == "CD4-CD8-" & full_metadata$imm_receptor_Esmaeil == "ab")
sum(full_metadata$cluster == "CD4-CD8-" & full_metadata$imm_receptor_Esmaeil == "gd")
sum(full_metadata$cluster == "CD4-CD8-" & full_metadata$imm_receptor_Esmaeil == "Aberrant g")
sum(full_metadata$cluster == "CD4-CD8-" & full_metadata$imm_receptor_Esmaeil == "")
sum(full_metadata$cluster == "CD4-CD8-")
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-"]
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-"]
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-", ]
View(filtered_data)
filtered_data <- filtered_data[!is.na(full_metadata$a_cdr3) & !is.na(full_metadata$b_cdr3) & is.na(full_metadata$imm_receptor_Esmaeil), ]
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-", ]
filtered_data <- full_metadata[is.na(full_metadata$imm_receptor_Esmaeil, ]
filtered_data <- full_metadata[is.na(full_metadata$imm_receptor_Esmaeil), ]
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-", ]
filtered_data <- filtered_data[is.na(full_metadata$imm_receptor_Esmaeil), ]
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-", ]
View(filtered_data)
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-", ]
filtered_data <- filtered_data[filtered_data$imm_receptor_Esmaeil == "" | is.na(full_metadata$imm_receptor_Esmaeil) , ]
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-", ]
filtered_data <- filtered_data[filtered_data$imm_receptor_Esmaeil == "" | is.na(filtered_data$imm_receptor_Esmaeil) , ]
filtered_data <- filtered_data[!is.na(filtered_data$a_cdr3) & !is.na(filtered_data$b_cdr3) , ]
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-", ]
filtered_data <- filtered_data[filtered_data$imm_receptor_Esmaeil == "" | is.na(filtered_data$imm_receptor_Esmaeil) , ]
View(filtered_data)
filtered_data <- filtered_data[!is.na(filtered_data$g_cdr3) & !is.na(filtered_data$d_cdr3) , ]
setwd("C:/Esmaeil/CeliacProject/CeliacProject/4_immune receptors distribution/Circ")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
filtered_data <- full_metadata[full_metadata$cluster == "CD4-CD8-", ]
receptor_counts <- table(filtered_data$imm_receptor_Esmaeil)
receptor_counts
# Create a pie chart
pie(
receptor_counts,
main = "Immune Receptor Types in CD4-CD8- Cluster",
col = rainbow(length(receptor_counts)),
radius = 1
)
filtered_data <- full_metadata[full_metadata$imm_receptor_Esmaeil == "" | is.na(full_metadata$imm_receptor_Esmaeil), ]
filtered_data <- filtered_data[(!is.na(filtered_data$g_cdr3) & !is.na(filtered_data$d_cdr3)) & (is.na(filtered_data$a_cdr3) & is.na(filtered_data$b_cdr3)), ]
View(filtered_data)
filtered_data <- full_metadata[full_metadata$imm_receptor_Esmaeil == "" | is.na(full_metadata$imm_receptor_Esmaeil), ]
filtered_data <- filtered_data[(is.na(filtered_data$g_cdr3) & is.na(filtered_data$d_cdr3)) & (!is.na(filtered_data$a_cdr3) & !is.na(filtered_data$b_cdr3)), ]
View(filtered_data)
