load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_jerome.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/1_Data Cleaning")
#------------------------------------------------------------------------------- libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
library(Matrix)
library(tidyverse)
library(openxlsx)
library(patchwork)
load("C:/Esmaeil/CeliacProject/BackUp/GEX Data/all_norm_protein_gene.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/1_Data Cleaning")
#------------------------------------------------------------------------------- libraries
library(dplyr)
library(ggplot2)
library(readxl)
library(writexl)
library(Matrix)
library(tidyverse)
library(openxlsx)
library(patchwork)
#-------------------------------------------------------------------------------  Part 1 - Step 1: Initial Data Cleaning and Updates
# Corrected some spelling mistakes in the dataset.
full_metadata$imm_receptor[full_metadata$imm_receptor == "Aberant ab"] <- "Aberrant ab"
# Fixed a typo in the `imm_receptor` column and renamed it to `imm_receptor_Jerome`.
names(full_metadata)[names(full_metadata) == "imm_receptor"] <- "imm_receptor_Jerome"
# A new column `imm_receptor_Esmaeil` was created to preserve the original data before making any further modifications to receptor annotations.
full_metadata$imm_receptor_Esmaeil <- full_metadata$imm_receptor_Jerome
cols <- colnames(full_metadata)
i <- which(cols == "imm_receptor_Jerome")
new_order <- append(cols, "imm_receptor_Esmaeil", after = i)
new_order <- new_order[!duplicated(new_order)]
full_metadata <- full_metadata[, new_order]
# Patient names were updated based on newly provided metadata.
full_metadata = full_metadata %>%
mutate(Patient = case_when(
PatientName == "1912" & Timepoint == "T1" ~ "RCD1-1a",
PatientName == "1912" & Timepoint == "T2" ~ "RCD1-1b",
PatientName == "1912" & Timepoint == "T3" ~ "RCD1-1c",
PatientName == "1912" ~ "RCD1-1",
PatientName == "1996" ~ "RCD1-2",
PatientName == "6016" ~ "RCD1-3",
PatientName == "6024" ~ "RCD1-4",
PatientName == "2025" & Timepoint == "T1" ~ "RCD1-5a",
PatientName == "2025" & Timepoint == "T2" ~ "RCD1-5b",
PatientName == "2025" ~ "RCD1-5",
PatientName == "1960" & Timepoint == "T1" ~ "RCD1-6a",
PatientName == "1960" & Timepoint == "T2" ~ "RCD1-6b",
PatientName == "1960" & Timepoint == "NA" ~ "RCD1-6NA",
PatientName == "1960" ~ "RCD1-6",
PatientName == "2088" ~ "RCD1-7",
PatientName == "4562" ~ "RCD1-8",
PatientName == "6183" ~ "RCD1-9",
PatientName == "2091" ~ "RCD1-10",
PatientName == "1935" ~ "RCD1-11",
PatientName == "1937" ~ "RCD1-12",
PatientName == "1986" ~ "RCD1-13",
PatientName == "2020" ~ "RCD1-14",
PatientName == "1906" ~ "RCD1-15",
PatientName == "P1" ~ "ACD-1",
PatientName == "1918" ~ "ACD-2",
PatientName == "2054" ~ "ACD-3",
PatientName == "2074" ~ "ACD-4",
PatientName == "CD10" ~ "ACD-5",
PatientName == "P2" ~ "ACD-6",
PatientName == "1670" ~ "ACD-7",
PatientName == "1872" ~ "ACD-8",
PatientName == "1902" ~ "ACD-9",
PatientName == "CD1632" ~ "ACD-10",
PatientName == "ACD20" ~ "ACD-11",
PatientName == "8GM" ~ "H-1",
PatientName == "9HH" ~ "H-2",
PatientName == "CD11" ~ "H-3",
PatientName == "CD12" ~ "H-4",
PatientName == "CD13" ~ "H-5",
PatientName == "CD21" ~ "H-6",
PatientName == "2080" ~ "H-7",
PatientName == "P5" ~ "H-8",
PatientName == "P6" ~ "H-9",
PatientName == "P7" ~ "H-10",
PatientName == "P8" ~ "H-11",
PatientName == "P9" ~ "H-12",
PatientName == "2046" & Timepoint == "T1" ~ "RCD2-1a",
PatientName == "2046" & Timepoint == "T2" ~ "RCD2-1b",
PatientName == "2046" ~ "RCD2-1",
PatientName == "ItalyRCDII" ~ "RCD2-2",
TRUE ~ NA_character_
))
# Update the 'cluster' column in full_metadata based on matching CellID from updated_clusters.xlsx
new_clusters <- read_excel("new_cell_clusters.xlsx")
idx <- match(full_metadata$CellID, new_clusters$CellID)
full_metadata$cluster[!is.na(idx)] <- new_clusters$cluster[idx[!is.na(idx)]]
# Update cluster names based on mapping
full_metadata <- full_metadata %>%
mutate(cluster = case_when(
cluster == "Th" ~ "CD4 FTH1+",
cluster == "Tregs" ~ "Tregs",
cluster == "CD8 Mem" ~ "CD8 Mem",
cluster == "IEL GZMK+" ~ "IEL GZMK+",
cluster == "Th17" ~ "Th17",
cluster == "CD8 Cyt." ~ "Cyt. IEL",
cluster == "CD8 Trm" ~ "CD8 Trm",
cluster == "Trm IEL" ~ "Trm IEL",
cluster == "Prolif. IEL" ~ "Prolif. IEL",
cluster == "Tgd CD8+" ~ "Tgd CD8+",
cluster == "B cells_1" ~ "Act. plasma IGHA+",
cluster == "NK Tgd" ~ "NK/Tgd",
cluster == "Plasmablast" ~ "Mem B cells",
cluster == "Th1 Mem" ~ "CD4 Trm",
cluster == "DC" ~ "Macrophages",
cluster == "Tgd INSIG1+" ~ "Tgd INSIG1+",
cluster == "ILC2/ILC3" ~ "ILC3",
cluster == "CD4-CD8- IL10 ICOS" ~ "CD4-CD8-IL10+",
cluster == "CD4-CD8-" ~ "CD4-CD8-",
cluster == "ILC1" ~ "ILC1/ILC2",
cluster == "Th2/Tfh" ~ "Tfh",
cluster == "Cyt. IEL" ~ "T eff. IEL",
cluster == "B cells MZB1+" ~ "Act. plasmablast",
cluster == "Tgd" ~ "Act. Tgd",
cluster == "IEL CCL4+" ~ "IEL CCL4+",
cluster == "Plasma cells_2" ~ "Plasma IGHG+",
cluster == "Macrophages" ~ "pDC",
cluster == "Mast cells" ~ "Mast cells",
cluster == "nIEL" ~ "nIEL",
cluster == "B cells_2" ~ "Mature plasma IGHA+",
cluster == "B cells BAFFR" ~ "B cells BAFFR+",
cluster == "Plasma cells_1" ~ "Homing plasmablast",
cluster == "ILC2/ILTi" ~ "ILC2/ILTi",
TRUE ~ cluster
))
# Remove rows where imm_receptor_Jerome is "T and B"
removed_count <- sum(full_metadata$imm_receptor_Jerome == "T and B")
full_metadata <- full_metadata[full_metadata$imm_receptor_Jerome != "T and B", ]
# A total of 1116 cells were affected.
# Combine 'a_cdr3' and 'b_cdr3' into 'cdr_Full_ab' if both are non-empty
full_metadata <- full_metadata %>%
mutate(cdr_Full_ab = ifelse(!is.na(a_cdr3) & a_cdr3 != "" &
!is.na(b_cdr3) & b_cdr3 != "",
paste(a_cdr3, b_cdr3, sep = "+"),
NA))
# Combine 'g_cdr3' and 'd_cdr3' into 'cdr_Full_gd' if both are non-empty
full_metadata <- full_metadata %>%
mutate(cdr_Full_gd = ifelse(!is.na(g_cdr3) & g_cdr3 != "" &
!is.na(d_cdr3) & d_cdr3 != "",
paste(g_cdr3, d_cdr3, sep = "+"),
NA))
# Combine 'h_cdr3' and 'k_cdr3' into 'cdr_Full_ig_hk' if both are non-empty
full_metadata <- full_metadata %>%
mutate(cdr_Full_ig_hk = ifelse(!is.na(h_cdr3) & h_cdr3 != "" &
!is.na(k_cdr3) & k_cdr3 != "",
paste(h_cdr3, k_cdr3, sep = "+"),
NA))
# Combine 'h_cdr3' and 'l_cdr3' into 'cdr_Full_ig_hL' if both are non-empty
full_metadata <- full_metadata %>%
mutate(cdr_Full_ig_hL = ifelse(!is.na(h_cdr3) & h_cdr3 != "" &
!is.na(l_cdr3) & l_cdr3 != "",
paste(h_cdr3, l_cdr3, sep = "+"),
NA))
# Reordered columns to follow a standardized and organized structure, including clinical, demographic, scRNA-seq, and TCR-related parameters.
desired_order <- c("PatientName", "Patient", "Diagnosis", "CellID", "cluster",
"scVI_with_hvg_UMAP_1", "scVI_with_hvg_UMAP_2", "imm_receptor_Jerome","imm_receptor_Esmaeil",
"TRAV", "TRAJ", "a_cdr3", "TRBV", "TRBJ", "b_cdr3", "cdr_Full_ab",
"clone_size_ab", "clone_size_bucket_ab", "TRDV", "TRDJ", "d_cdr3",
"TRGV", "TRGJ", "g_cdr3", "cdr_Full_gd", "clone_size_gd",
"clone_size_bucket_gd", "contigCount_T", "IGHV", "IGHJ", "h_cdr3",
"IGKV", "IGKJ", "k_cdr3", "IGLV", "IGLJ", "l_cdr3", "cdr_Full_ig_hk",
"cdr_Full_ig_hL", "contigCount_B", "nFeature_RNA", "nCount_RNA",
"mt_ratio", "Tissue", "Batch", "Run", "FolderName", "Timepoint",
"Sorted", "Type", "Technology", "FolderNameMulti", "HTONameMulti",
"scanpy_noint_UMAP_1", "scanpy_noint_UMAP_2", "seurat_noint_cluster",
"rPCA_k3_cluster", "seurat_noint_UMAP_1", "seurat_noint_UMAP_2",
"rPCA_k3_UMAP_1", "rPCA_k3_UMAP_2", "rPCA_k5_cluster",
"rPCA_k5_UMAP_1", "rPCA_k5_UMAP_2", "rPCA_k10_cluster",
"rPCA_k10_UMAP_1", "rPCA_k10_UMAP_2", "rPCA_k20_cluster",
"rPCA_k20_UMAP_1", "rPCA_k20_UMAP_2", "scVI_no_hvg_leiden_cluster",
"scVI_no_hvg_MDE_1", "scVI_no_hvg_MDE_2", "scVI_no_hvg_UMAP_1",
"scVI_no_hvg_UMAP_2", "scVI_with_hvg_leiden_scVI_1",
"scVI_with_hvg_leiden_scVI_1.2", "scVI_with_hvg_leiden_scVI_1.5",
"scVI_with_hvg_leiden_scVI_1.8", "scVI_with_hvg_leiden_scVI_2",
"scVI_with_hvg_MDE_1", "scVI_with_hvg_MDE_2",
"scVI_with_hvg_paper_leiden_cluster", "scVI_with_hvg_paper_MDE_1",
"scVI_with_hvg_paper_MDE_2", "scVI_with_hvg_paper_UMAP_1",
"scVI_with_hvg_paper_UMAP_2", "doubletCluster", "doubletCell",
"doublet", "scVI_with_hvg_leiden_scVI_1.5_subset", "file_T", "file_B")
full_metadata <- full_metadata %>% select(all_of(desired_order))
