theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18, vjust = 1)
)
dev.off()
library(dplyr)
library(ggplot2)
pie_data <- full_metadata %>%
filter(!is.na(clone_size_bucket_ab)) %>%
count(clone_size_bucket_ab) %>%
mutate(
percent = round(100 * n / sum(n), 1),
label = paste0(percent, "%")
)
png("Clone_Size_Category_PieChart_PercentOnly_CenteredTitle.png", width = 2400, height = 2000, res = 300)
ggplot(pie_data, aes(x = "", y = n, fill = clone_size_bucket_ab)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y") +
geom_text(aes(label = label), position = position_stack(vjust = 0.5), size = 5) +
scale_fill_brewer(palette = "Set2") +
labs(
title = "Clone Size Categories Frequency",
fill = "Clone Size Category"
) +
theme_void(base_size = 16) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 18)
)
dev.off()
library(dplyr)
library(ggplot2)
pie_data <- full_metadata %>%
filter(!is.na(clone_size_bucket_ab)) %>%
count(clone_size_bucket_ab) %>%
mutate(
percent = round(100 * n / sum(n), 1),
label = paste0(percent, "%")
)
png("Clone_Size_Category_PieChart_PercentOnly_CenteredTitle.png", width = 2400, height = 2000, res = 300)
ggplot(pie_data, aes(x = "", y = n, fill = clone_size_bucket_ab)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y") +
geom_text(aes(label = label), position = position_stack(vjust = 0.5), size = 5) +
scale_fill_brewer(palette = "Set2") +
labs(
title = "Clone Size Categories Frequency",
fill = "Clone Size Category"
) +
theme_void(base_size = 16) +
theme(
plot.title = element_text(hjust = 1, face = "bold", size = 18)
)
dev.off()
library(dplyr)
library(ggplot2)
pie_data <- full_metadata %>%
filter(!is.na(clone_size_bucket_ab)) %>%
count(clone_size_bucket_ab) %>%
mutate(
percent = round(100 * n / sum(n), 1),
label = paste0(percent, "%")
)
png("Clone Size Category.png", width = 2400, height = 2000, res = 300)
ggplot(pie_data, aes(x = "", y = n, fill = clone_size_bucket_ab)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y") +
geom_text(aes(label = label), position = position_stack(vjust = 0.5), size = 5) +
scale_fill_brewer(palette = "Set2") +
labs(
title = "Clone Size Categories Frequency",
fill = "Clone Size Category"
) +
theme_void(base_size = 16) +
theme(
plot.title = element_text(hjust = 1, face = "bold", size = 18)
)
dev.off()
library(dplyr)
library(ggplot2)
pie_data <- full_metadata %>%
filter(!is.na(clone_size_bucket_ab)) %>%
count(clone_size_bucket_ab) %>%
mutate(
percent = round(100 * n / sum(n), 1),
label = paste0(percent, "%")
)
png("Clone Size Category.png", width = 2400, height = 2000, res = 300)
ggplot(pie_data, aes(x = "", y = n, fill = clone_size_bucket_ab)) +
geom_bar(stat = "identity", width = 1, color = "white") +
coord_polar("y") +
geom_text(aes(label = label), position = position_stack(vjust = 0.5), size = 5) +
scale_fill_brewer(palette = "Set2") +
labs(
title = "Clone Size Categories Frequency",
fill = "Clone Size Category"
) +
theme_void(base_size = 16) +
theme(
plot.title = element_text(hjust = 1, face = "bold", size = 18)
)
dev.off()
install.packages("vegan")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
clone_counts <- full_metadata %>%
filter(!is.na(cdr_Full_ab)) %>%
count(cdr_Full_ab) %>%
pull(n)
unique(clone_counts)
unique(full_metadata$clone_size_ab)
library(vegan)
shannon_index <- diversity(clone_counts, index = "shannon")
simpson_index <- diversity(clone_counts, index = "simpson")
cat("Shannon Index:", shannon_index, "\n")
cat("Simpson Index:", simpson_index, "\n")
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
# تابع محاسبه شاخص‌های تنوع برای یک گروه
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
# محاسبه شاخص‌ها
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_patientName <- calc_diversity(full_metadata, "PatientName")
# تبدیل به فرمت بلند برای ggplot
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patientName_long <- diversity_patientName %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
# رسم نمودار با مرتب سازی گروه‌ها بر اساس مقدار شاخص (از بزرگ به کوچک)
plot_diversity <- function(data_long, title_text, x_label) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"))
}
# نمودارها
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster")
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per Patient", "Patient")
p3 <- plot_diversity(diversity_patientName_long, "Clonal Diversity Metrics per PatientName", "PatientName")
# نمایش نمودارها
print(p1)
print(p2)
print(p3)
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clone Size Analysis/Shannon and Simpson")
png("diversity_per_cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("diversity_per_patient.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("diversity_per_patientName.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
unique()
unique(full_metadata$Patient)
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
# تابع محاسبه شاخص‌های تنوع برای یک گروه
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
# محاسبه شاخص‌ها
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_patientName <- calc_diversity(full_metadata, "PatientName")
# تبدیل به فرمت بلند برای ggplot
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patientName_long <- diversity_patientName %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
# رسم نمودار با مرتب سازی گروه‌ها بر اساس مقدار شاخص (از بزرگ به کوچک)
plot_diversity <- function(data_long, title_text, x_label) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"))
}
# نمودارها
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster")
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per Disease Type", "Patient")
p3 <- plot_diversity(diversity_patientName_long, "Clonal Diversity Metrics per Individual Patient", "PatientName")
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Disease Type.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Patient.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
# تابع محاسبه شاخص‌های تنوع برای یک گروه
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
# محاسبه شاخص‌ها
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_patientName <- calc_diversity(full_metadata, "PatientName")
# تبدیل به فرمت بلند برای ggplot
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patientName_long <- diversity_patientName %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
# رسم نمودار با مرتب سازی گروه‌ها بر اساس مقدار شاخص (از بزرگ به کوچک)
plot_diversity <- function(data_long, title_text, x_label) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold"))
}
# نمودارها
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster")
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per Disease Type", "Patient")
p3 <- plot_diversity(diversity_patientName_long, "Clonal Diversity Metrics per Individual Patient", "PatientName")
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Disease Type.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Patient.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_patientName <- calc_diversity(full_metadata, "PatientName")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patientName_long <- diversity_patientName %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 14)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per Disease Type", "Patient", axis_text_size = 12)
p3 <- plot_diversity(diversity_patientName_long, "Clonal Diversity Metrics per Individual Patient", "PatientName", axis_text_size = 10)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Disease Type.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Patient.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_patientName <- calc_diversity(full_metadata, "PatientName")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patientName_long <- diversity_patientName %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per Disease Type", "Patient", axis_text_size = 12)
p3 <- plot_diversity(diversity_patientName_long, "Clonal Diversity Metrics per Individual Patient", "PatientName", axis_text_size = 10)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Disease Type.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Patient.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_patientName <- calc_diversity(full_metadata, "PatientName")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patientName_long <- diversity_patientName %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per Disease Type", "Patient", axis_text_size = 10)
p3 <- plot_diversity(diversity_patientName_long, "Clonal Diversity Metrics per Individual Patient", "PatientName", axis_text_size = 10)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Disease Type.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Patient.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_patientName <- calc_diversity(full_metadata, "PatientName")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patientName_long <- diversity_patientName %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per Disease Type", "Patient", axis_text_size = 10)
p3 <- plot_diversity(diversity_patientName_long, "Clonal Diversity Metrics per Individual Patient", "PatientName", axis_text_size = 8)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Disease Type.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Patient.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_patientName <- calc_diversity(full_metadata, "PatientName")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patientName_long <- diversity_patientName %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per Disease Type", "Disease Type", axis_text_size = 10)
p3 <- plot_diversity(diversity_patientName_long, "Clonal Diversity Metrics per Individual Patient", "Individual Patient", axis_text_size = 8)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Disease Type.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Patient.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
