load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
View(full_metadata)
full_metadata = full_metadata %>%
mutate(Patient = case_when(
PatientName == "1912" & Timepoint == "T1" ~ "RCD1-1a",
PatientName == "1912" & Timepoint == "T2" ~ "RCD1-1b",
PatientName == "1912" & Timepoint == "T3" ~ "RCD1-1c",
PatientName == "1912" ~ "RCD1-1",
PatientName == "1996" ~ "RCD1-2",
PatientName == "6016" ~ "RCD1-3",
PatientName == "6024" ~ "RCD1-4",
PatientName == "2025" & Timepoint == "T1" ~ "RCD1-5a",
PatientName == "2025" & Timepoint == "T2" ~ "RCD1-5b",
PatientName == "2025" ~ "RCD1-5",
PatientName == "1960" & Timepoint == "T1" ~ "RCD1-6a",
PatientName == "1960" & Timepoint == "T2" ~ "RCD1-6b",
PatientName == "1960" & Timepoint == "NA" ~ "RCD1-6NA",
PatientName == "1960" ~ "RCD1-6",
PatientName == "2088" ~ "RCD1-7",
PatientName == "4562" ~ "RCD1-8",
PatientName == "6183" ~ "RCD1-9",
PatientName == "2091" ~ "RCD1-10",
PatientName == "1935" ~ "RCD1-11",
PatientName == "1937" ~ "RCD1-12",
PatientName == "1986" ~ "RCD1-13",
PatientName == "2020" ~ "RCD1-14",
PatientName == "1906" ~ "RCD1-15",
PatientName == "P1" ~ "ACD-1",
PatientName == "1918" ~ "ACD-2",
PatientName == "2054" ~ "ACD-3",
PatientName == "2074" ~ "ACD-4",
PatientName == "CD10" ~ "ACD-5",
PatientName == "P2" ~ "ACD-6",
PatientName == "1670" ~ "ACD-7",
PatientName == "1872" ~ "ACD-8",
PatientName == "1902" ~ "ACD-9",
PatientName == "CD1632" ~ "ACD-10",
PatientName == "ACD20" ~ "ACD-11",
PatientName == "8GM" ~ "H-1",
PatientName == "9HH" ~ "H-2",
PatientName == "CD11" ~ "H-3",
PatientName == "CD12" ~ "H-4",
PatientName == "CD13" ~ "H-5",
PatientName == "CD21" ~ "H-6",
PatientName == "2080" ~ "H-7",
PatientName == "P5" ~ "H-8",
PatientName == "P6" ~ "H-9",
PatientName == "P7" ~ "H-10",
PatientName == "P8" ~ "H-11",
PatientName == "P9" ~ "H-12",
PatientName == "2046" & Timepoint == "T1" ~ "RCD2-1a",
PatientName == "2046" & Timepoint == "T2" ~ "RCD2-1b",
PatientName == "2046" ~ "RCD2-1",
PatientName == "ItalyRCDII" ~ "RCD2-2",
TRUE ~ NA_character_
))
library(dplyr)
full_metadata = full_metadata %>%
mutate(Patient = case_when(
PatientName == "1912" & Timepoint == "T1" ~ "RCD1-1a",
PatientName == "1912" & Timepoint == "T2" ~ "RCD1-1b",
PatientName == "1912" & Timepoint == "T3" ~ "RCD1-1c",
PatientName == "1912" ~ "RCD1-1",
PatientName == "1996" ~ "RCD1-2",
PatientName == "6016" ~ "RCD1-3",
PatientName == "6024" ~ "RCD1-4",
PatientName == "2025" & Timepoint == "T1" ~ "RCD1-5a",
PatientName == "2025" & Timepoint == "T2" ~ "RCD1-5b",
PatientName == "2025" ~ "RCD1-5",
PatientName == "1960" & Timepoint == "T1" ~ "RCD1-6a",
PatientName == "1960" & Timepoint == "T2" ~ "RCD1-6b",
PatientName == "1960" & Timepoint == "NA" ~ "RCD1-6NA",
PatientName == "1960" ~ "RCD1-6",
PatientName == "2088" ~ "RCD1-7",
PatientName == "4562" ~ "RCD1-8",
PatientName == "6183" ~ "RCD1-9",
PatientName == "2091" ~ "RCD1-10",
PatientName == "1935" ~ "RCD1-11",
PatientName == "1937" ~ "RCD1-12",
PatientName == "1986" ~ "RCD1-13",
PatientName == "2020" ~ "RCD1-14",
PatientName == "1906" ~ "RCD1-15",
PatientName == "P1" ~ "ACD-1",
PatientName == "1918" ~ "ACD-2",
PatientName == "2054" ~ "ACD-3",
PatientName == "2074" ~ "ACD-4",
PatientName == "CD10" ~ "ACD-5",
PatientName == "P2" ~ "ACD-6",
PatientName == "1670" ~ "ACD-7",
PatientName == "1872" ~ "ACD-8",
PatientName == "1902" ~ "ACD-9",
PatientName == "CD1632" ~ "ACD-10",
PatientName == "ACD20" ~ "ACD-11",
PatientName == "8GM" ~ "H-1",
PatientName == "9HH" ~ "H-2",
PatientName == "CD11" ~ "H-3",
PatientName == "CD12" ~ "H-4",
PatientName == "CD13" ~ "H-5",
PatientName == "CD21" ~ "H-6",
PatientName == "2080" ~ "H-7",
PatientName == "P5" ~ "H-8",
PatientName == "P6" ~ "H-9",
PatientName == "P7" ~ "H-10",
PatientName == "P8" ~ "H-11",
PatientName == "P9" ~ "H-12",
PatientName == "2046" & Timepoint == "T1" ~ "RCD2-1a",
PatientName == "2046" & Timepoint == "T2" ~ "RCD2-1b",
PatientName == "2046" ~ "RCD2-1",
PatientName == "ItalyRCDII" ~ "RCD2-2",
TRUE ~ NA_character_
))
View(full_metadata)
unique(full_metadata$Patient)
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
full_metadata = full_metadata %>%
mutate(Patient = case_when(
PatientName == "1912" & Timepoint == "T1" ~ "RCD1-1a",
PatientName == "1912" & Timepoint == "T2" ~ "RCD1-1b",
PatientName == "1912" & Timepoint == "T3" ~ "RCD1-1c",
PatientName == "1912" ~ "RCD1-1",
PatientName == "1996" ~ "RCD1-2",
PatientName == "6016" ~ "RCD1-3",
PatientName == "6024" ~ "RCD1-4",
PatientName == "2025" & Timepoint == "T1" ~ "RCD1-5a",
PatientName == "2025" & Timepoint == "T2" ~ "RCD1-5b",
PatientName == "2025" ~ "RCD1-5",
PatientName == "1960" & Timepoint == "T1" ~ "RCD1-6a",
PatientName == "1960" & Timepoint == "T2" ~ "RCD1-6b",
PatientName == "1960" & Timepoint == "NA" ~ "RCD1-6NA",
PatientName == "1960" ~ "RCD1-6",
PatientName == "2088" ~ "RCD1-7",
PatientName == "4562" ~ "RCD1-8",
PatientName == "6183" ~ "RCD1-9",
PatientName == "2091" ~ "RCD1-10",
PatientName == "1935" ~ "RCD1-11",
PatientName == "1937" ~ "RCD1-12",
PatientName == "1986" ~ "RCD1-13",
PatientName == "2020" ~ "RCD1-14",
PatientName == "1906" ~ "RCD1-15",
PatientName == "P1" ~ "ACD-1",
PatientName == "1918" ~ "ACD-2",
PatientName == "2054" ~ "ACD-3",
PatientName == "2074" ~ "ACD-4",
PatientName == "CD10" ~ "ACD-5",
PatientName == "P2" ~ "ACD-6",
PatientName == "1670" ~ "ACD-7",
PatientName == "1872" ~ "ACD-8",
PatientName == "1902" ~ "ACD-9",
PatientName == "CD1632" ~ "ACD-10",
PatientName == "ACD20" ~ "ACD-11",
PatientName == "8GM" ~ "H-1",
PatientName == "9HH" ~ "H-2",
PatientName == "CD11" ~ "H-3",
PatientName == "CD12" ~ "H-4",
PatientName == "CD13" ~ "H-5",
PatientName == "CD21" ~ "H-6",
PatientName == "2080" ~ "H-7",
PatientName == "P5" ~ "H-8",
PatientName == "P6" ~ "H-9",
PatientName == "P7" ~ "H-10",
PatientName == "P8" ~ "H-11",
PatientName == "P9" ~ "H-12",
PatientName == "2046" & Timepoint == "T1" ~ "RCD2-1a",
PatientName == "2046" & Timepoint == "T2" ~ "RCD2-1b",
PatientName == "2046" ~ "RCD2-1",
PatientName == "ItalyRCDII" ~ "RCD2-2",
TRUE ~ NA_character_
))
View(full_metadata)
save(full_metadata, patient_colours, diagnosis_colours, palette_34, file = "MetaData_V2_Esmaeil.Rdata")
getwd()
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Data Cleaning")
View(full_metadata)
save(full_metadata, patient_colours, diagnosis_colours, palette_34, file = "MetaData_Esmaeil.Rdata")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
setwd("C:/Esmaeil/CeliacProject/BackUp/MetaData")
install.packages("writexl")
library(writexl)
write_xlsx(full_metadata, "full_metadata.xlsx")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
View(full_metadata)
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clone Size Analysis/Shannon and Simpson")
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_Diagnosis <- calc_diversity(full_metadata, "Diagnosis")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_Diagnosis_long <- diversity_Diagnosis %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per patient", "Patient", axis_text_size = 10)
p3 <- plot_diversity(diversity_Diagnosis_long, "Clonal Diversity Metrics per Diagnosis", "Diagnosis", axis_text_size = 8)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Patient.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Diagnosis.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_Diagnosis <- calc_diversity(full_metadata, "Diagnosis")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_Diagnosis_long <- diversity_Diagnosis %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per patient", "Patient", axis_text_size = 10)
p3 <- plot_diversity(diversity_Diagnosis_long, "Clonal Diversity Metrics per Diagnosis", "Diagnosis", axis_text_size = 8)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Patient.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Diagnosis.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_Diagnosis <- calc_diversity(full_metadata, "Diagnosis")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_Diagnosis_long <- diversity_Diagnosis %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per patient", "Patient", axis_text_size = 10)
p3 <- plot_diversity(diversity_Diagnosis_long, "Clonal Diversity Metrics per Diagnosis", "Diagnosis", axis_text_size = 6)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Patient.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Diagnosis.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_Diagnosis <- calc_diversity(full_metadata, "Diagnosis")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_Diagnosis_long <- diversity_Diagnosis %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per patient", "Patient", axis_text_size = 8)
p3 <- plot_diversity(diversity_Diagnosis_long, "Clonal Diversity Metrics per Diagnosis", "Diagnosis", axis_text_size = 6)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Patient.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Diagnosis.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
library(dplyr)
library(vegan)
library(tidyr)
library(ggplot2)
calc_diversity <- function(df, group_col) {
df %>%
filter(!is.na(cdr_Full_ab), cdr_Full_ab != "") %>%
group_by(.data[[group_col]]) %>%
summarise(
shannon = diversity(table(cdr_Full_ab)),
simpson = diversity(table(cdr_Full_ab), index = "simpson")
) %>%
rename(Group = .data[[group_col]]) %>%
filter(Group != "")
}
diversity_cluster <- calc_diversity(full_metadata, "cluster")
diversity_patient <- calc_diversity(full_metadata, "Patient")
diversity_Diagnosis <- calc_diversity(full_metadata, "Diagnosis")
diversity_cluster_long <- diversity_cluster %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_patient_long <- diversity_patient %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
diversity_Diagnosis_long <- diversity_Diagnosis %>% pivot_longer(cols = c(shannon, simpson), names_to = "Index", values_to = "Value")
plot_diversity <- function(data_long, title_text, x_label, axis_text_size = 12) {
ggplot(data_long, aes(x = reorder(Group, -Value), y = Value, fill = Index)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = title_text,
x = x_label,
y = "Diversity Index Value",
fill = "Index") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = axis_text_size),
axis.text.y = element_text(size = axis_text_size),
axis.title.x = element_text(size = axis_text_size + 2),
axis.title.y = element_text(size = axis_text_size + 2),
plot.title = element_text(hjust = 0.5, face = "bold", size = axis_text_size + 4)
)
}
p1 <- plot_diversity(diversity_cluster_long, "Clonal Diversity Metrics per Cluster", "Cluster", axis_text_size = 6)
p2 <- plot_diversity(diversity_patient_long, "Clonal Diversity Metrics per patient", "Patient", axis_text_size = 6)
p3 <- plot_diversity(diversity_Diagnosis_long, "Clonal Diversity Metrics per Diagnosis", "Diagnosis", axis_text_size = 6)
png("Diversity per Cluster.png", width = 1200, height = 800, res = 150)
print(p1)
dev.off()
png("Diversity per Patient.png", width = 1200, height = 800, res = 150)
print(p2)
dev.off()
png("Diversity per Individual Diagnosis.png", width = 1200, height = 800, res = 150)
print(p3)
dev.off()
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clone Size Analysis/Unique Clones Per Individual Patient")
library(dplyr)
library(ggplot2)
clone_per_patient <- full_metadata %>%
group_by(Patient) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab)) %>%
ungroup() %>%
arrange(desc(unique_clones)) %>%
mutate(Patient = factor(Patient, levels = Patient))
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
clone_per_patient <- full_metadata %>%
group_by(Patient) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab)) %>%
ungroup() %>%
arrange(desc(unique_clones)) %>%
mutate(Patient = factor(Patient, levels = Patient))
png("Unique Clones Per Individual Patient.png", width = 2800, height = 2000, res = 300)
ggplot(clone_per_patient, aes(x = Patient, y = unique_clones)) +
geom_bar(stat = "identity", fill = "#238b45") +
labs(
title = "Number of Unique Clones per Patient",
x = "Patient Name",
y = "Unique Clones"
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(angle = 45, hjust = 1, size = 7)
)
dev.off()
library(dplyr)
library(ggplot2)
clone_per_patient <- full_metadata %>%
group_by(Patient) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab)) %>%
ungroup() %>%
arrange(desc(unique_clones)) %>%
mutate(Patient = factor(Patient, levels = Patient))
png("Unique Clones Per Individual Patient.png", width = 2800, height = 2000, res = 300)
ggplot(clone_per_patient, aes(x = Patient, y = unique_clones)) +
geom_bar(stat = "identity", fill = "#238b45") +
labs(
title = "Number of Unique Clones per Patient",
x = "Patient",
y = "Unique Clones"
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(angle = 45, hjust = 1, size = 7)
)
dev.off()
setwd("C:/Esmaeil/CeliacProject/CeliacProject/Clone Size Analysis/Unique Clones Per Disease Type")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
clone_per_id <- full_metadata %>%
filter(!is.na(Diagnosis) & Diagnosis != "") %>%
droplevels() %>%
group_by(Diagnosis) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab)) %>%
ungroup() %>%
arrange(desc(unique_clones)) %>%
mutate(Diagnosis = factor(Diagnosis, levels = Diagnosis))
png("Unique Clones Per Diagnosis.png", width = 2800, height = 2000, res = 300)
ggplot(clone_per_id, aes(x = Diagnosis, y = unique_clones)) +
geom_bar(stat = "identity", fill = "#984ea3") +
labs(
title = "Number of Unique Clones per Diagnosis",
x = "Diagnosis",
y = "Unique Clones"
) +
theme_minimal(base_size = 16) +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold"),
axis.text.y = element_text(size = 7),
axis.text.x = element_text(angle = 45, hjust = 1, size = 7)
)
dev.off()
