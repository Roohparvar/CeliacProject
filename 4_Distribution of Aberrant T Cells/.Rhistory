load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
View(full_metadata)
unique(full_metadata$clone_size_bucket_ab)
library(dplyr)
unique_clones_per_cluster <- full_metadata %>%
group_by(cluster) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab)) %>%
arrange(cluster)
View(unique_clones_per_cluster)
unique(full_metadata$cluster)
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
# فیلتر کردن کلاسترهایی که در لیست target_clusters نیستند
# سپس شمارش cloneهای یکتا بر اساس cdr_Full_ab در هر کلاستر
unique_clones_per_cluster <- full_metadata %>%
filter(!cluster %in% target_clusters) %>%
group_by(cluster) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab)) %>%
arrange(cluster)
View(unique_clones_per_cluster)
library(dplyr)
library(tidyr)
# لیست کلاسترهایی که می‌خواهیم حذف کنیم
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
# ابتدا فقط کلاسترهای مورد نظر را نگه می‌داریم
filtered_data <- full_metadata %>%
filter(!cluster %in% target_clusters)
# شمارش cloneهای یکتا در هر cluster
clone_counts <- filtered_data %>%
group_by(cluster) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab))
# شمارش cloneهای یکتا در هر bucket از clone_size_bucket_ab در هر cluster
bucket_counts <- filtered_data %>%
group_by(cluster, cdr_Full_ab, clone_size_bucket_ab) %>%
summarise(.groups = "drop") %>%  # حذف تکراری‌ها
group_by(cluster, clone_size_bucket_ab) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = clone_size_bucket_ab, values_from = count, values_fill = 0)
# ادغام دو جدول بالا
final_table <- clone_counts %>%
left_join(bucket_counts, by = "cluster") %>%
arrange(cluster)
View(final_table)
library(dplyr)
library(tidyr)
# لیست کلاسترهایی که می‌خواهیم حذف کنیم
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
# حذف NA ها و فیلتر کلاسترهای موردنظر
filtered_data <- full_metadata %>%
filter(!is.na(cdr_Full_ab)) %>%
filter(!is.na(clone_size_bucket_ab)) %>%
filter(!cluster %in% target_clusters)
# شمارش تعداد clone یکتا در هر کلاستر
clone_counts <- filtered_data %>%
group_by(cluster) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab), .groups = "drop")
# شمارش cloneهای یکتا در هر گروه از clone_size_bucket_ab
bucket_counts <- filtered_data %>%
distinct(cluster, cdr_Full_ab, clone_size_bucket_ab) %>%  # حذف تکراری‌ها
group_by(cluster, clone_size_bucket_ab) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = clone_size_bucket_ab, values_from = count, values_fill = 0)
# ترکیب با جدول اصلی
final_table <- clone_counts %>%
left_join(bucket_counts, by = "cluster") %>%
arrange(cluster)
View(final_table)
unique(full_metadata$imm_receptor_Esmaeil)
library(dplyr)
library(tidyr)
# لیست کلاسترهایی که باید حذف شوند
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
# فیلتر اولیه: حذف NAها و حذف کلاسترهای نامطلوب
filtered_data <- full_metadata %>%
filter(!is.na(cdr_Full_ab)) %>%
filter(!is.na(clone_size_bucket_ab)) %>%
filter(!cluster %in% target_clusters)
# شمارش کلون‌های یکتا در هر کلاستر
clone_counts <- filtered_data %>%
group_by(cluster) %>%
summarise(unique_clones = n_distinct(cdr_Full_ab), .groups = "drop")
# شمارش کلون‌های یکتا در هر کلاستر و bucket
basic_buckets <- filtered_data %>%
distinct(cluster, cdr_Full_ab, clone_size_bucket_ab) %>%
group_by(cluster, clone_size_bucket_ab) %>%
summarise(count = n(), .groups = "drop") %>%
pivot_wider(names_from = clone_size_bucket_ab, values_from = count, values_fill = 0)
# شمارش کلون‌های یکتا بر اساس imm_receptor_Esmaeil + clone_size_bucket_ab
advanced_buckets <- filtered_data %>%
distinct(cluster, cdr_Full_ab, clone_size_bucket_ab, imm_receptor_Esmaeil) %>%
group_by(cluster, clone_size_bucket_ab, imm_receptor_Esmaeil) %>%
summarise(count = n(), .groups = "drop") %>%
unite(col = "category", imm_receptor_Esmaeil, clone_size_bucket_ab, sep = " ") %>%
pivot_wider(names_from = category, values_from = count, values_fill = 0)
# ترکیب همه با هم
final_table <- clone_counts %>%
left_join(basic_buckets, by = "cluster") %>%
left_join(advanced_buckets, by = "cluster") %>%
arrange(cluster)
View(final_table)
library(dplyr)
library(tidyr)
# لیست کلاسترهایی که نمی‌خواهیم در نظر بگیریم
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
# فیلتر کردن داده‌ها
filtered_data <- full_metadata %>%
filter(!is.na(cdr_Full_ab)) %>%
filter(!is.na(clone_size_bucket_ab)) %>%
filter(!cluster %in% target_clusters)
# ساختن یک جدول از cloneهای یکتا
unique_clones <- filtered_data %>%
distinct(cluster, cdr_Full_ab, imm_receptor_Esmaeil, clone_size_bucket_ab)
# دسته‌بندی برای Non-Aberrant
unique_clones <- unique_clones %>%
mutate(ReceptorGroup = case_when(
imm_receptor_Esmaeil == "Aberrant ab" ~ "Aberrant ab",
imm_receptor_Esmaeil == "Aberrant g" ~ "Aberrant g",
TRUE ~ "Non-Aberrant"
))
# جدول شمارش‌ها
count_table <- unique_clones %>%
group_by(cluster) %>%
summarise(
unique_clones = n(),  # تعداد کل کلون‌های یکتا
Aberrant_ab_Singleton = sum(ReceptorGroup == "Aberrant ab" & clone_size_bucket_ab == "Singleton"),
Aberrant_ab_Small = sum(ReceptorGroup == "Aberrant ab" & clone_size_bucket_ab == "Small clone (2+)"),
Aberrant_ab_Large = sum(ReceptorGroup == "Aberrant ab" & clone_size_bucket_ab == "Large clone (10+)"),
Aberrant_g_Singleton = sum(ReceptorGroup == "Aberrant g" & clone_size_bucket_ab == "Singleton"),
Aberrant_g_Small = sum(ReceptorGroup == "Aberrant g" & clone_size_bucket_ab == "Small clone (2+)"),
Aberrant_g_Large = sum(ReceptorGroup == "Aberrant g" & clone_size_bucket_ab == "Large clone (10+)"),
Non_Aberrant_Singleton = sum(ReceptorGroup == "Non-Aberrant" & clone_size_bucket_ab == "Singleton"),
Non_Aberrant_Small = sum(ReceptorGroup == "Non-Aberrant" & clone_size_bucket_ab == "Small clone (2+)"),
Non_Aberrant_Large = sum(ReceptorGroup == "Non-Aberrant" & clone_size_bucket_ab == "Large clone (10+)")
) %>%
arrange(cluster)
View(count_table)
library(dplyr)
library(tidyr)
# حذف کلاسترهای خاص و NAها
target_clusters <- c(
"Plasma cells_1", "B cells_1", "B cells_2",
"B cells MZB1+", "Plasma cells_2", "Plasmablast",
"B cells BAFFR", "DC", "Macrophages", "Mast cells"
)
filtered_data <- full_metadata %>%
filter(!is.na(cdr_Full_ab)) %>%
filter(!is.na(clone_size_bucket_ab)) %>%
filter(!cluster %in% target_clusters)
# کلون‌های یکتا با اطلاعات مورد نیاز
unique_clones <- filtered_data %>%
distinct(cluster, cdr_Full_ab, imm_receptor_Esmaeil, clone_size_bucket_ab) %>%
mutate(ReceptorGroup = case_when(
imm_receptor_Esmaeil == "Aberrant ab" ~ "Aberrant ab",
imm_receptor_Esmaeil == "Aberrant g" ~ "Aberrant g",
TRUE ~ "Non-Aberrant"
))
# جدول نهایی با شمارش و ترتیب سفارشی ستون‌ها
count_table <- unique_clones %>%
group_by(cluster) %>%
summarise(
unique_clones = n(),
Aberrant_ab_Large = sum(ReceptorGroup == "Aberrant ab" & clone_size_bucket_ab == "Large clone (10+)"),
Aberrant_g_Large = sum(ReceptorGroup == "Aberrant g" & clone_size_bucket_ab == "Large clone (10+)"),
Non_Aberrant_Large = sum(ReceptorGroup == "Non-Aberrant" & clone_size_bucket_ab == "Large clone (10+)"),
Aberrant_ab_Small = sum(ReceptorGroup == "Aberrant ab" & clone_size_bucket_ab == "Small clone (2+)"),
Aberrant_g_Small = sum(ReceptorGroup == "Aberrant g" & clone_size_bucket_ab == "Small clone (2+)"),
Non_Aberrant_Small = sum(ReceptorGroup == "Non-Aberrant" & clone_size_bucket_ab == "Small clone (2+)"),
Aberrant_ab_Singleton = sum(ReceptorGroup == "Aberrant ab" & clone_size_bucket_ab == "Singleton"),
Aberrant_g_Singleton = sum(ReceptorGroup == "Aberrant g" & clone_size_bucket_ab == "Singleton"),
Non_Aberrant_Singleton = sum(ReceptorGroup == "Non-Aberrant" & clone_size_bucket_ab == "Singleton")
) %>%
arrange(cluster)
View(count_table)
