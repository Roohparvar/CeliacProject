plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" | full_metadata$cluster == "Cyt. IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_ab)) %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#D999FF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" | full_metadata$cluster == "Cyt. IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_ab)) %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/5_Clonal Expansion Analysis/Based on cdr_Full_ab/2_All Clusters/Horizontal/Version 4/Tgd and Trm IEL clusters")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "Tγδ" | full_metadata$cluster == "Trm IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "Tγδ" | full_metadata$cluster == "Trm IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "Tγδ" | full_metadata$cluster == "Trm IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_γδ_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_γδ_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/5_Clonal Expansion Analysis/Based on cdr_Full_ab/2_All Clusters/Horizontal/Version 4/Tgd and Trm IEL clusters")
getwd()
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "Tγδ" | full_metadata$cluster == "Trm IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_γδ_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
ggsave("CloneSize_γδ_Percentage_ByDiagnosis.pdf", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_γδ_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
ggsave("CloneSize_γδ_RawCounts_ByDiagnosis.pdf", p2, width = 6, height = 5, dpi = 400, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "Tγδ" | full_metadata$cluster == "Trm IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_γδ_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("CloneSize_γδ_Percentage_ByDiagnosis.pdf", p1, width = 6, height = 5, dpi = 400, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_γδ_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("CloneSize_γδ_RawCounts_ByDiagnosis.pdf", p2, width = 6, height = 5, dpi = 400, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/5_Clonal Expansion Analysis/Based on cdr_Full_ab/2_All Clusters/Horizontal/Version 4/CD4-CD8- and Cyt IEL clusters")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" | full_metadata$cluster == "Cyt. IEL", ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_ab)) %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, face = "bold", hjust = 0.5)
)
# Plot percentage
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Percentage of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Percentage)"
) +
white_theme
ggsave("CloneSize_ab_Percentage_ByDiagnosis.pdf", p1, width = 6, height = 5, dpi = 400, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("CloneSize_ab_Percentage_ByDiagnosis.png", p1, width = 6, height = 5, dpi = 400, bg = "white")
# Plot raw counts
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis", y = "Number of Cells", fill = "Clone Size",
title = "αβ Clonal Size Distribution by Diagnosis (Raw Counts)"
) +
white_theme
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.pdf", p2, width = 6, height = 5, dpi = 400, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("CloneSize_ab_RawCounts_ByDiagnosis.png", p2, width = 6, height = 5, dpi = 400, bg = "white")
