pvalue = c(0.0001, 0.00005, 0.4, 0.3, 0.02, 0.001, 0.9)
)
data$negLog10Pval <- -log10(data$pvalue)
ggplot(data, aes(x = log2FoldChange, y = negLog10Pval)) +
geom_point(size=3) +
geom_text(aes(label = gene), vjust = -1, size=3) +  # اضافه کردن نام ژن بالای هر نقطه
geom_hline(yintercept = -log10(0.05), linetype="dashed", color="red") +
geom_vline(xintercept = c(-1, 1), linetype="dashed", color="blue") +
xlab("log2 Fold Change") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot with Gene Labels") +
theme_minimal()
library(ggplot2)
data <- data.frame(
gene = c("Gene1", "Gene2", "Gene3", "Gene4", "Gene5", "Gene6", "Gene7"),
log2FoldChange = c(3.5, -2.8, 0.1, -0.2, 1.2, -1.5, 0.05),
pvalue = c(0.0001, 0.00005, 0.4, 0.3, 0.02, 0.001, 0.9)
)
data$negLog10Pval <- -log10(data$pvalue)
png(filename = "1.png")
ggplot(data, aes(x = log2FoldChange, y = negLog10Pval)) +
geom_point(size=3) +
geom_text(aes(label = gene), vjust = -1, size=3) +  # اضافه کردن نام ژن بالای هر نقطه
geom_hline(yintercept = -log10(0.05), linetype="dashed", color="red") +
geom_vline(xintercept = c(-1, 1), linetype="dashed", color="blue") +
xlab("log2 Fold Change") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot with Gene Labels") +
theme_minimal()
dev.off()
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
unique(full_metadata$imm_receptor_Esmaeil)
df <- full_metadata[, c("TRBV", "imm_receptor_Esmaeil")]
View(df)
View(df)
df$Group <- ifelse(df$imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant", "Normal")
View(df)
df$imm_receptor_Esmaeil <- NULL
View(df)
df <- full_metadata[, c("TRBV", "imm_receptor_Esmaeil")]
df$Group <- ifelse(df$imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant", "Normal")
View(df)
df <- df[!(is.na(df$TRBV) | df$TRBV == ""), ]
View(df)
View(full_metadata)
df$imm_receptor_Esmaeil <- NULL
df <- data.frame(Cell_ID = seq_len(nrow(df)), df)
View(df)
library(dplyr)
library(tidyr)
count_table <- df %>%
group_by(TRBV, Group) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = Count, values_fill = 0)
View(count_table)
library(DESeq2)
rownames(count_table) <- count_table$TRBV
count_data <- as.matrix(count_table[, c("Aberrant", "Normal")])
View(count_data)
colData <- data.frame(
row.names = colnames(count_data),
condition = factor(c("Aberrant", "Normal"))
)
View(colData)
dds <- DESeqDataSetFromMatrix(countData = count_data,
colData = colData,
design = ~ condition)
View(dds)
dds <- DESeq(dds)
# ایجاد جدول Fisher برای هر TRBV
fisher_results <- lapply(1:nrow(count_table), function(i) {
row <- count_table[i, ]
matrix_vals <- matrix(c(row$Aberrant, row$Normal,
sum(count_table$Aberrant) - row$Aberrant,
sum(count_table$Normal) - row$Normal),
nrow = 2)
test <- fisher.test(matrix_vals)
data.frame(
TRBV = row$TRBV,
pvalue = test$p.value,
odds_ratio = test$estimate
)
})
fisher_df <- do.call(rbind, fisher_results)
# اضافه کردن log2 Fold Change (نسبت Aberrant به Normal)
fisher_df$log2FC <- log2((count_table$Aberrant + 1) / (count_table$Normal + 1))
# نمایش نتایج مرتب‌شده
fisher_df <- fisher_df[order(fisher_df$pvalue), ]
View(fisher_df)
library(ggplot2)
library(ggrepel)
# تنظیم سایز خروجی و مسیر ذخیره
ggsave("Volcano_TRBV_fixed_labels.png", width = 8, height = 6, dpi = 300)
# یا برای ذخیره مستقیم هنگام رسم:
png("Volcano_TRBV_fixed_labels.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 15) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "blue") +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
str(fisher_df)
head(fisher_df)
library(ggplot2)
library(ggrepel)
# ساخت ستون -log10(p-value)
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV  # برای برچسب‌گذاری ژن‌ها
# ذخیره به‌صورت تصویر با کیفیت بالا
png("volcano_plot_TRBV.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "blue") +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون -log10(p-value)
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV  # برای برچسب‌گذاری ژن‌ها
# ذخیره به‌صورت تصویر با کیفیت بالا
png("Volcano_TRBV_fixed_labels.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "blue") +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون -log10(p-value)
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV  # برای برچسب‌گذاری ژن‌ها
# ذخیره به‌صورت تصویر با کیفیت بالا
png("Volcano_TRBV_fixed_labels.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "blue") +
xlab("difference TRBV gene use") +    # تغییر عنوان محور x
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون log10 p-value
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV
# ✅ اختیاری: محدود کردن مقدار منفی لاگ ۱۰ برای جلوگیری از نقطه‌های خیلی بالا
# اینجا بالاترین مقدار را روی 50 محدود می‌کنیم (تغییرش بده اگه خواستی)
fisher_df$negLog10Pval <- pmin(fisher_df$negLog10Pval, 50)
# ذخیره تصویر با کیفیت بالا
png("volcano_plot_TRBV_clean.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
View(colData)
View(count_data)
View(count_table)
View(df)
length(df)
length(df$Group == "Normal")
length(df$Group == "Aberrant")
length(df$Group <- "Aberrant")
library(dplyr)
library(tidyr)
# ابتدا تعداد کل سلول‌ها در هر گروه رو حساب می‌کنیم:
total_cells <- df %>%
group_by(Group) %>%
summarise(Total = n())
# جدول شمارش TRBV در هر گروه:
count_table <- df %>%
group_by(TRBV, Group) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = Count, values_fill = 0)
# اضافه کردن تعداد کل سلول‌ها به جدول:
count_table <- count_table %>%
mutate(
Total_Aberrant = total_cells$Total[total_cells$Group == "Aberrant"],
Total_Normal = total_cells$Total[total_cells$Group == "Normal"]
)
library(dplyr)
library(tidyr)
# ابتدا تعداد کل سلول‌ها در هر گروه رو حساب می‌کنیم:
total_cells <- df %>%
group_by(Group) %>%
summarise(Total = n())
# جدول شمارش TRBV در هر گروه:
count_table <- df %>%
group_by(TRBV, Group) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = Count, values_fill = 0)
# اضافه کردن تعداد کل سلول‌ها به جدول:
count_table <- count_table %>%
mutate(
Total_Aberrant = total_cells$Total[total_cells$Group == "Aberrant"],
Total_Normal = total_cells$Total[total_cells$Group == "Normal"]
)
library(dplyr)
library(tidyr)
# ابتدا تعداد کل سلول‌ها در هر گروه رو حساب می‌کنیم:
total_cells <- df %>%
group_by(Group) %>%
summarise(Total = n())
# جدول شمارش TRBV در هر گروه:
count_table <- df %>%
group_by(TRBV, Group) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = Count, values_fill = 0)
# تعداد کل سلول‌ها در هر گروه
total_aberrant <- total_cells$Total[total_cells$Group == "Aberrant"]
total_normal <- total_cells$Total[total_cells$Group == "Normal"]
# اضافه کردن ستون‌ها
count_table <- count_table %>%
mutate(
Total_Aberrant = total_aberrant,
Total_Normal = total_normal,
Freq_Aberrant = Aberrant / total_aberrant,
Freq_Normal = Normal / total_normal
)
df <- full_metadata[, c("TRBV", "imm_receptor_Esmaeil")]
df <- df[!(is.na(df$TRBV) | df$TRBV == ""), ]
df$Group <- ifelse(df$imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant", "Normal")
df$imm_receptor_Esmaeil <- NULL
df <- data.frame(Cell_ID = seq_len(nrow(df)), df)
library(dplyr)
library(tidyr)
count_table <- df %>%
group_by(TRBV, Group) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = Count, values_fill = 0)
df <- full_metadata[, c("TRBV", "imm_receptor_Esmaeil")]
df <- df[!(is.na(df$TRBV) | df$TRBV == ""), ]
df$Group <- ifelse(df$imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant", "Normal")
df$imm_receptor_Esmaeil <- NULL
df <- data.frame(Cell_ID = seq_len(nrow(df)), df)
library(dplyr)
library(tidyr)
count_table <- df %>%
group_by(TRBV, Group) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = Count, values_fill = 0)
View(count_data)
View(df)
df <- full_metadata[, c("TRBV", "imm_receptor_Esmaeil")]
df <- df[!(is.na(df$TRBV) | df$TRBV == ""), ]
df$Group <- ifelse(df$imm_receptor_Esmaeil %in% c("Aberrant ab", "Aberrant g"),
"Aberrant", "Normal")
df$imm_receptor_Esmaeil <- NULL
df <- data.frame(Cell_ID = seq_len(nrow(df)), df)
library(dplyr)
library(tidyr)
count_table <- df %>%
group_by(TRBV, Group) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = Count, values_fill = 0)
View(colData)
View(count_data)
View(count_table)
View(df)
df %>%
group_by(Group) %>%
summarise(Count = n())
count_table <- df %>%
group_by(TRBV, Group) %>%
summarise(Count = n(), .groups = "drop") %>%
pivot_wider(names_from = Group, values_from = Count, values_fill = 0) %>%
mutate(
PerAberrant = Aberrant / 2724,
PerNormal = Normal / 74328
)
count_table <- count_table %>%
mutate(
Difference = abs(PerAberrant - PerNormal)
)
# ایجاد جدول Fisher برای هر TRBV
fisher_results <- lapply(1:nrow(count_table), function(i) {
row <- count_table[i, ]
matrix_vals <- matrix(c(row$Aberrant, row$Normal,
sum(count_table$Aberrant) - row$Aberrant,
sum(count_table$Normal) - row$Normal),
nrow = 2)
test <- fisher.test(matrix_vals)
data.frame(
TRBV = row$TRBV,
pvalue = test$p.value,
odds_ratio = test$estimate
)
})
# ترکیب نتایج
fisher_df <- do.call(rbind, fisher_results)
# اضافه کردن log2 Fold Change (نسبت Aberrant به Normal)
fisher_df$log2FC <- log2((count_table$Aberrant + 1) / (count_table$Normal + 1))
# نمایش نتایج مرتب‌شده
fisher_df <- fisher_df[order(fisher_df$pvalue), ]
library(ggplot2)
library(ggrepel)
# ساخت ستون -log10(p-value)
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV  # برای برچسب‌گذاری ژن‌ها
# ذخیره به‌صورت تصویر با کیفیت بالا
png("Volcano_TRBV_fixed_labels.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "blue") +
xlab("difference TRBV gene use") +    # تغییر عنوان محور x
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون -log10(p-value)
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV  # برای برچسب‌گذاری ژن‌ها
# ذخیره به‌صورت تصویر با کیفیت بالا
png("4Volcano_TRBV_fixed_labels.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "red") +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "blue") +
xlab("difference TRBV gene use") +    # تغییر عنوان محور x
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون log10 p-value
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV
# ✅ اختیاری: محدود کردن مقدار منفی لاگ ۱۰ برای جلوگیری از نقطه‌های خیلی بالا
# اینجا بالاترین مقدار را روی 50 محدود می‌کنیم (تغییرش بده اگه خواستی)
fisher_df$negLog10Pval <- pmin(fisher_df$negLog10Pval, 50)
# ذخیره تصویر با کیفیت بالا
png("volcano_plot_TRBV_clean.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون log10 p-value
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV
# ✅ اختیاری: محدود کردن مقدار منفی لاگ ۱۰ برای جلوگیری از نقطه‌های خیلی بالا
# اینجا بالاترین مقدار را روی 50 محدود می‌کنیم (تغییرش بده اگه خواستی)
fisher_df$negLog10Pval <- pmin(fisher_df$negLog10Pval, 50)
# ذخیره تصویر با کیفیت بالا
png("volcano_plot_TRBV_clean.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون log10 p-value
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV
# ✅ اختیاری: محدود کردن مقدار منفی لاگ ۱۰ برای جلوگیری از نقطه‌های خیلی بالا
# اینجا بالاترین مقدار را روی 50 محدود می‌کنیم (تغییرش بده اگه خواستی)
fisher_df$negLog10Pval <- pmin(fisher_df$negLog10Pval, 50)
# ذخیره تصویر با کیفیت بالا
png("volcano_plot_TRBV_clean.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 3, max.overlaps = 20) +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون log10 p-value
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV
# ✅ اختیاری: محدود کردن مقدار منفی لاگ ۱۰ برای جلوگیری از نقطه‌های خیلی بالا
# اینجا بالاترین مقدار را روی 50 محدود می‌کنیم (تغییرش بده اگه خواستی)
fisher_df$negLog10Pval <- pmin(fisher_df$negLog10Pval, 50)
# ذخیره تصویر با کیفیت بالا
png("volcano_plot_TRBV_clean.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 2, max.overlaps = 20) +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)
dev.off()
View(count_data)
View(count_table)
library(ggplot2)
library(ggrepel)
# ساخت ستون log10 p-value
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV
# ✅ اختیاری: محدود کردن مقدار منفی لاگ ۱۰ برای جلوگیری از نقطه‌های خیلی بالا
# اینجا بالاترین مقدار را روی 50 محدود می‌کنیم (تغییرش بده اگه خواستی)
fisher_df$negLog10Pval <- pmin(fisher_df$negLog10Pval, 50)
# ذخیره تصویر با کیفیت بالا
png("volcano_plot_TRBV_clean.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(size = 2, alpha = 0.8) +
geom_text_repel(aes(label = gene), size = 2, max.overlaps = 20) +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14)+
theme(plot.title = element_text(hjust = 0.5))
dev.off()
library(ggplot2)
library(ggrepel)
# ساخت ستون log10 p-value
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV
# محدود کردن مقدار منفی لاگ ۱۰
fisher_df$negLog10Pval <- pmin(fisher_df$negLog10Pval, 50)
# ساخت دسته‌بندی بر اساس log2FC و p-value برای رنگ‌بندی
fisher_df$Significance <- ifelse(fisher_df$pvalue < 0.05 & abs(fisher_df$log2FC) > 1,
"Significant",
"Not Significant")
# ذخیره تصویر با کیفیت بالا
png("OOOOOOOvolcano_plot_TRBV_pretty.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(aes(color = Significance), size = 2.5, alpha = 0.9) +
scale_color_manual(values = c("Significant" = "#E64A19", "Not Significant" = "#90A4AE")) +
geom_text_repel(aes(label = ifelse(Significance == "Significant", gene, "")),
size = 2.5,
max.overlaps = 25,
box.padding = 0.3,
point.padding = 0.2,
segment.size = 0.2) +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title = element_text(face = "bold"),
legend.title = element_blank(),
legend.position = "top"
) +
geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "grey50") +
geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "grey50")
dev.off()
library(ggplot2)
library(ggrepel)
# آماده‌سازی داده‌ها
fisher_df$negLog10Pval <- -log10(fisher_df$pvalue)
fisher_df$gene <- fisher_df$TRBV
fisher_df$negLog10Pval <- pmin(fisher_df$negLog10Pval, 50)
# ذخیره تصویر با کیفیت بالا
png("volcano_plot_TRBV_clean_simple.png", width = 2000, height = 1600, res = 300)
ggplot(fisher_df, aes(x = log2FC, y = negLog10Pval)) +
geom_point(color = "#0072B2", size = 2.5, alpha = 0.8) +  # رنگ آبی جذاب
geom_text_repel(
aes(label = ifelse(negLog10Pval > 10 & abs(log2FC) > 1, gene, "")),
size = 3,
max.overlaps = 30,
box.padding = 0.3,
point.padding = 0.2,
segment.color = "grey70",
segment.size = 0.2
) +
geom_hline(yintercept = -log10(0.05), linetype = "dotted", color = "grey50") +
geom_vline(xintercept = c(-1, 1), linetype = "dotted", color = "grey50") +
xlab("log2 Fold Change (Aberrant vs Normal)") +
ylab("-log10(p-value)") +
ggtitle("Volcano Plot of TRBV Usage") +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
axis.title = element_text(face = "bold"),
panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "grey90")
)
dev.off()
