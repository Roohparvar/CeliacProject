summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# 6. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
# 7. تنظیم ترتیب فاکتور برای محور x در ggplot
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 8. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 800, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(legend.position = "none") +
coord_flip()  # اگر دوست داری نمودار به صورت افقی باشه
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# 6. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
# 7. تنظیم ترتیب فاکتور برای محور x در ggplot
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 8. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 800, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(y = cluster, x = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Number of cells with TRBV7-2",
y = "Cluster") +
theme(legend.position = "none")
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# 6. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
# 7. تنظیم ترتیب فاکتور برای محور x در ggplot
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 8. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 800, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(y = cluster, x = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Number of cells with TRBV7-2",
y = "Cluster") +
theme(legend.position = "none")
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# 6. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
# 7. تنظیم ترتیب فاکتور برای محور x
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 8. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 800, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(legend.position = "none") +
coord_flip() # اگر نمی‌خوای بچرخونی این خط رو حذف کن
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# 6. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
# 7. تنظیم ترتیب فاکتور برای محور x
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 8. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 800, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(legend.position = "none") +
coord_flip() # اگر نمی‌خوای بچرخونی این خط رو حذف کن
dev.off()
library(ggplot2)
library(dplyr)
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
png(filename = "TRBV7_2_frequency_ACD.png", width = 800, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(legend.position = "none")
dev.off()
library(ggplot2)
library(dplyr)
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
png(filename = "TRBV7_2_frequency_ACD.png", width = 1300, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(legend.position = "none")
dev.off()
library(ggplot2)
library(dplyr)
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
png(filename = "TRBV7_2_frequency_ACD.png", width = 2000, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(legend.position = "none")
dev.off()
library(ggplot2)
library(dplyr)
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
png(filename = "TRBV7_
2_frequency_ACD.png", width = 2500, height = 600, res = 150)
library(ggplot2)
library(dplyr)
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
png(filename = "TRBV7_
2_frequency_ACD.png", width = 2200, height = 600, res = 150)
library(ggplot2)
library(dplyr)
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
count_TRBV7_2 <- count_TRBV7_2 %>%
arrange(desc(count))
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
png(filename = "TRBV7_2_frequency_ACD.png", width = 2500, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(legend.position = "none")
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# ✅ 6. فیلتر کردن فقط کلاسترهایی که count > 0
count_TRBV7_2 <- count_TRBV7_2 %>% filter(count > 0)
# 7. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>% arrange(desc(count))
# 8. تنظیم ترتیب فاکتور برای محور x
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 9. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 800, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(
legend.position = "none",
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12)
)
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# ✅ 6. فیلتر کردن فقط کلاسترهایی که count > 0
count_TRBV7_2 <- count_TRBV7_2 %>% filter(count > 0)
# 7. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>% arrange(desc(count))
# 8. تنظیم ترتیب فاکتور برای محور x
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 9. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 2000, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(
legend.position = "none",
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 8),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12)
)
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# ✅ 6. فیلتر کردن فقط کلاسترهایی که count > 0
count_TRBV7_2 <- count_TRBV7_2 %>% filter(count > 0)
# 7. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>% arrange(desc(count))
# 8. تنظیم ترتیب فاکتور برای محور x
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 9. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 2000, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(
legend.position = "none",
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 6),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12)
)
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# ✅ 6. فیلتر کردن فقط کلاسترهایی که count > 0
count_TRBV7_2 <- count_TRBV7_2 %>% filter(count > 0)
# 7. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>% arrange(desc(count))
# 8. تنظیم ترتیب فاکتور برای محور x
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 9. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 2000, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(
legend.position = "none",
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 6, angle = 45, hjust = 1),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12)
)
dev.off()
library(ggplot2)
library(dplyr)
# 1. فیلتر کردن فقط نمونه‌های ACD
meta_ACD <- full_metadata %>% filter(Diagnosis == "ACD")
# 2. اضافه کردن ستون cluster اگر موجود نیست
if(!"cluster" %in% colnames(meta_ACD)) {
meta_ACD$cluster <- as.character(Idents(merged_obj1)[rownames(meta_ACD)])
}
# 3. فیلتر سلول‌هایی که TRBV == "TRBV7-2"
meta_ACD_TRBV7_2 <- meta_ACD %>% filter(TRBV == "TRBV7-2")
# 4. شمارش سلول TRBV7-2 در هر کلاستر
count_TRBV7_2 <- meta_ACD_TRBV7_2 %>%
group_by(cluster) %>%
summarise(count = n())
# 5. اضافه کردن کلاسترهای بدون TRBV7-2 (صفر)
all_clusters <- unique(meta_ACD$cluster)
count_TRBV7_2 <- count_TRBV7_2 %>%
right_join(data.frame(cluster = all_clusters), by = "cluster") %>%
mutate(count = ifelse(is.na(count), 0, count))
# ✅ 6. فیلتر کردن فقط کلاسترهایی که count > 0
count_TRBV7_2 <- count_TRBV7_2 %>% filter(count > 0)
# 7. مرتب‌سازی از بزرگ به کوچک
count_TRBV7_2 <- count_TRBV7_2 %>% arrange(desc(count))
# 8. تنظیم ترتیب فاکتور برای محور x
count_TRBV7_2$cluster <- factor(count_TRBV7_2$cluster, levels = count_TRBV7_2$cluster)
# 9. ذخیره نمودار به صورت PNG
png(filename = "TRBV7_2_frequency_ACD.png", width = 2000, height = 600, res = 150)
ggplot(count_TRBV7_2, aes(x = cluster, y = count, fill = cluster)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Frequency of TRBV7-2 in clusters (ACD patients)",
x = "Cluster",
y = "Number of cells with TRBV7-2") +
theme(
legend.position = "none",
axis.title.x = element_text(size = 10),
axis.title.y = element_text(size = 10),
axis.text.x = element_text(size = 6, angle = 45, hjust = 1),
axis.text.y = element_text(size = 8),
plot.title = element_text(size = 12, hjust = 0.5)
)
dev.off()
