setwd("C:/Esmaeil/CeliacProject/CeliacProject/Motif")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
dist_matrix <- readRDS("C:/Esmaeil/CeliacProject/BackUp/Motif Network/dist_matrix.rds")
library(stringdist)
library(dplyr)
library(ggplot2)
View(dist_matrix)
# Calculate node degrees (sum of each row or column, since matrix is symmetric)
node_degrees <- rowSums(binary_matrix)
binary_matrix <- readRDS("C:/Esmaeil/CeliacProject/BackUp/Motif Network/binary_matrix.rds")
# Calculate node degrees (sum of each row or column, since matrix is symmetric)
node_degrees <- rowSums(binary_matrix)
# Create result matrix: node ID + degree
degree_matrix <- cbind(Node = 1:length(node_degrees), Degree = node_degrees)
# Sort by degree descending (most connected nodes first)
degree_matrix <- degree_matrix[order(-degree_matrix[,2]), ]
# Save as a matrix
degree_matrix <- as.matrix(degree_matrix)
# Make degree_matrix a data frame
degree_matrix <- as.data.frame(degree_matrix)
# Assume rownames(degree_matrix) are the clones
degree_matrix$Clone <- rownames(degree_matrix)
# For each clone, get all unique clusters in full_metadata and collapse into one string
cluster_map <- full_metadata %>%
group_by(cdr_Full_ab) %>%
summarise(Cluster = paste(unique(cluster), collapse = ","), .groups = "drop")
# Join with degree_matrix by clone name
degree_matrix <- degree_matrix %>% left_join(cluster_map, by = c("Clone" = "cdr_Full_ab"))
View(degree_matrix)
saveRDS(degree_matrix, file = "degree_matrix.rds")
View(dist_matrix)
binary_matrix <- binary_matrix[rowSums(binary_matrix) > 0, ]
storage.mode(binary_matrix) <- storage.mode(dist_matrix)
saveRDS(binary_matrix, file = "binary_matrix.rds")
node_degrees <- rowSums(binary_matrix)
degree_matrix <- cbind(Node = 1:length(node_degrees), Degree = node_degrees)
degree_matrix <- degree_matrix[order(-degree_matrix[,2]), ]
degree_matrix <- as.data.frame(degree_matrix)
degree_matrix$Clone <- rownames(degree_matrix)
cluster_map <- full_metadata %>%
group_by(cdr_Full_ab) %>%
summarise(Cluster = paste(unique(cluster), collapse = ","), .groups = "drop")
degree_matrix <- degree_matrix %>% left_join(cluster_map, by = c("Clone" = "cdr_Full_ab"))
saveRDS(degree_matrix, file = "degree_matrix.rds")
View(degree_matrix)
num_nodes <- nrow(binary_matrix)
num_edges <- sum(binary_matrix[upper.tri(binary_matrix)])
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
metadata <- full_metadata
metadata <- metadata[!is.na(metadata$a_cdr3) & !is.na(metadata$b_cdr3), ]
# Keep only unique pairs of (a_cdr3, b_cdr3)
pairs <- unique(metadata[, c("a_cdr3", "b_cdr3")])
dist_matrix <- readRDS("C:/Esmaeil/CeliacProject/BackUp/Motif Network/dist_matrix.rds")
View(dist_matrix)
binary_matrix <- readRDS("C:/Esmaeil/CeliacProject/BackUp/Motif Network/2/binary_matrix.rds")
View(binary_matrix)
sum(binary_matrix$CALSDDLRPGNQFYF+CASSDAGWQRGGGEGDPGYF)
node_degrees <- rowSums(binary_matrix)
degree_matrix <- cbind(Node = 1:length(node_degrees), Degree = node_degrees)
degree_matrix <- degree_matrix[order(-degree_matrix[,2]), ]
degree_matrix <- as.data.frame(degree_matrix)
degree_matrix$Clone <- rownames(degree_matrix)
cluster_map <- full_metadata %>%
group_by(cdr_Full_ab) %>%
summarise(Cluster = paste(unique(cluster), collapse = ","), .groups = "drop")
degree_matrix <- degree_matrix %>% left_join(cluster_map, by = c("Clone" = "cdr_Full_ab"))
View(degree_matrix)
# 3
saveRDS(degree_matrix, file = "degree_matrix.rds")
degree_counts <- degree_matrix %>% count(Degree, name = "Frequency")
View(degree_counts)
degree_filtered <- subset(degree_counts, Degree < 100)
png("degree_distribution.png", width = 2800, height = 2600, res = 600)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 7)
)
dev.off()
degree_counts <- degree_matrix %>% count(Degree, name = "Frequency")
View(degree_counts)
degree_filtered <- subset(degree_counts, Degree < 150)
png("degree_distribution.png", width = 2800, height = 2600, res = 600)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 7)
)
dev.off()
png("degree_distribution.png", width = 3000, height = 2600, res = 600)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 7)
)
dev.off()
png("degree_distribution.png", width = 3500, height = 2600, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 8),
axis.title.x = element_text(size = 8),
axis.title.y = element_text(size = 8),
axis.text.x = element_text(size = 7),
axis.text.y = element_text(size = 7)
)
dev.off()
png("degree_distribution.png", width = 3800, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
png("degree_distribution.png", width = 3800, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 4),
axis.title.y = element_text(size = 4),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
png("degree_distribution.png", width = 4000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 4),
axis.title.y = element_text(size = 4),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 4),
axis.title.y = element_text(size = 4),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
degree_filtered <- subset(degree_counts, Degree < 130)
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 4),
axis.title.y = element_text(size = 4),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
degree_filtered <- subset(degree_counts, Degree < 120)
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 4),
axis.title.y = element_text(size = 4),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
degree_filtered <- subset(degree_counts, Degree < 100)
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 4),
axis.title.y = element_text(size = 4),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 3),
axis.title.y = element_text(size = 3),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 5),
axis.title.y = element_text(size = 5),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 4.5),
axis.title.y = element_text(size = 4.5),
axis.text.x = element_text(size = 5),
axis.text.y = element_text(size = 5)
)
dev.off()
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 5),
axis.title.y = element_text(size = 5),
axis.text.x = element_text(size = 4.5),
axis.text.y = element_text(size = 4.5)
)
dev.off()
png("degree_distribution.png", width = 5000, height = 3000, res = 1200)
ggplot(degree_filtered, aes(x = Degree, y = Frequency)) +
geom_bar(stat = "identity", width = 0.8, fill = "steelblue") +
theme_minimal() +
labs(x = "Degree", y = "Frequency", title = "Degree Distribution") +
scale_x_continuous(breaks = seq(0, 200, by = 5)) +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 5),
axis.title.y = element_text(size = 5),
axis.text.x = element_text(size = 4),
axis.text.y = element_text(size = 4)
)
dev.off()
head(degree_matrix)
# Sort by Degree descending
degree_matrix <- degree_matrix[order(-degree_matrix$Degree), ]
# Select top 100
top100 <- degree_matrix[1:100, ]
View(top100)
clusters <- unlist(strsplit(top100$Cluster, split = ","))
cluster_counts <- table(trimws(clusters))  # trimws to remove extra spaces
cluster_counts
# Convert to data frame for ggplot
library(ggplot2)
df <- as.data.frame(cluster_counts)
colnames(df) <- c("Cluster", "Count")
# Bar plot
png("2.png", width = 5000, height = 3000, res = 1200)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
top <- degree_matrix[1:50, ]
# Split clusters by comma and unlist
clusters <- unlist(strsplit(top$Cluster, split = ","))
# Count occurrences
cluster_counts <- table(trimws(clusters))  # trimws to remove extra spaces
# Convert to data frame for ggplot
library(ggplot2)
df <- as.data.frame(cluster_counts)
colnames(df) <- c("Cluster", "Count")
# Bar plot
png("2.png", width = 5000, height = 3000, res = 1200)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
top <- degree_matrix[1:200, ]
# Split clusters by comma and unlist
clusters <- unlist(strsplit(top$Cluster, split = ","))
# Count occurrences
cluster_counts <- table(trimws(clusters))  # trimws to remove extra spaces
# Convert to data frame for ggplot
library(ggplot2)
df <- as.data.frame(cluster_counts)
colnames(df) <- c("Cluster", "Count")
# Bar plot
png("2.png", width = 5000, height = 3000, res = 1200)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
View(top)
top <- degree_matrix[1:100, ]
clusters <- unlist(strsplit(top$Cluster, split = ","))
cluster_counts <- table(trimws(clusters))
df <- as.data.frame(cluster_counts)
colnames(df) <- c("Cluster", "Count")
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 1200)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 1200)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 5),
axis.title.y = element_text(size = 5),
axis.text.x = element_text(size = 4),
axis.text.y = element_text(size = 4)
)
dev.off()
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 600)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 5),
axis.title.y = element_text(size = 5),
axis.text.x = element_text(size = 4),
axis.text.y = element_text(size = 4)
)
dev.off()
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 600)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 5, angle = 45),
axis.title.y = element_text(size = 5),
axis.text.x = element_text(size = 4),
axis.text.y = element_text(size = 4)
)
dev.off()
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 600)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 5),
axis.title.y = element_text(size = 5),
axis.text.x = element_text(size = 6, angle = 45),
axis.text.y = element_text(size = 6)
)
dev.off()
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 600)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(
plot.title = element_text(hjust = 0.5, size = 6),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
axis.text.x = element_text(size = 6, angle = 45),
axis.text.y = element_text(size = 6)
)
dev.off()
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 600)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top 100 TCRs by Degree",
x = "Cluster",
y = "Count") +
theme(
plot.title = element_text(hjust = 0.5, size = 8),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
axis.text.x = element_text(size = 6, angle = 45),
axis.text.y = element_text(size = 6)
)
dev.off()
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 600)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top CDRs (hubs) by Degree",
x = "Cluster",
y = "Count") +
theme(
plot.title = element_text(hjust = 0.5, size = 8),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
axis.text.x = element_text(size = 6, angle = 45),
axis.text.y = element_text(size = 6)
)
dev.off()
png("Clusters Associated with Network Hubs.png", width = 5000, height = 3000, res = 600)
ggplot(df, aes(x = Cluster, y = Count)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal() +
labs(title = "Cluster Distribution of Top CDRs (hubs) by Degree",
x = "Cluster",
y = "Count") +
theme(
plot.title = element_text(hjust = 0.5, size = 8),
axis.title.x = element_text(size = 7),
axis.title.y = element_text(size = 7),
axis.text.x = element_text(size = 5, angle = 45),
axis.text.y = element_text(size = 5)
)
dev.off()
