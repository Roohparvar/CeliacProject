library(forcats)
# فرض می‌کنیم full_metadata ستونی به نام cluster دارد و ژن‌های TRBV
# فیلتر NA و رشته‌های فاصله‌ای و انتخاب ستون‌های cluster و TRBV
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
filter(cluster %in% c("mلاستر", "Trm IEL")) %>%   # فقط این دو کلستر
select(cluster, gene = TRBV) %>%
mutate(cluster = factor(cluster, levels = c("mلاستر", "Trm IEL")))
# محاسبه فراوانی نسبی هر ژن در هر cluster
dot_data <- trbv_data %>%
group_by(cluster, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس cluster اول یعنی mلاستر (از کم به زیاد)
gene_order <- dot_data %>%
filter(cluster == "mلاستر") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار با محور x = cluster
dot_plot <- ggplot(dot_data, aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = cluster), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Selected Clusters",
x = "Cluster",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_by_Cluster.png",
plot = dot_plot,
width = 7,
height = 12,
dpi = 300,
bg = "white"
)
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر TRBV و حذف NA و رشته‌های فقط فاصله‌ای
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
select(cluster, gene = TRBV)
# استخراج سطوح کلستر و مرتب کردن به طوری که "Trm IEL" اول بیاد
all_clusters <- unique(trbv_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
# تبدیل cluster به factor با ترتیب دلخواه
trbv_data <- trbv_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# محاسبه فراوانی نسبی هر ژن در هر cluster
dot_data <- trbv_data %>%
group_by(cluster, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس فراوانی در "Trm IEL" (از کم به زیاد)
gene_order <- dot_data %>%
filter(cluster == "Trm IEL") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار
dot_plot <- ggplot(dot_data, aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = cluster), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Clusters",
x = "Cluster",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_with_TrmIEL_first.png",
plot = dot_plot,
width = 8,
height = 12,
dpi = 300,
bg = "white"
)
library(dplyr)
library(ggplot2)
library(forcats)
# فیلتر TRBV و حذف NA و رشته‌های فقط فاصله‌ای
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
select(cluster, gene = TRBV)
# استخراج سطوح کلستر و مرتب کردن به طوری که "Trm IEL" اول بیاد
all_clusters <- unique(trbv_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
# تبدیل cluster به factor با ترتیب دلخواه
trbv_data <- trbv_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# محاسبه فراوانی نسبی هر ژن در هر cluster
dot_data <- trbv_data %>%
group_by(cluster, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس فراوانی در "Trm IEL" (از کم به زیاد)
gene_order <- dot_data %>%
filter(cluster == "Trm IEL") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار
dot_plot <- ggplot(dot_data, aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = cluster), alpha = 0.8) +
scale_size_continuous(name = "Frequency") +
labs(
title = "TRBV Gene Usage Across Clusters",
x = "Cluster",
y = "TRBV Gene"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# ذخیره تصویر
ggsave(
filename = "TRBV_DotPlot_with_TrmIEL_first.png",
plot = dot_plot,
width = 12,
height = 12,
dpi = 300,
bg = "white"
)
getwd()
library(ggplot2)
library(dplyr)
library(forcats)
# فقط داده‌های TRBV و حذف مقادیر NA یا خالی
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
select(cluster, gene = TRBV)
# مرتب‌سازی سطوح cluster طوری که "Trm IEL" اول بیاد
all_clusters <- unique(trbv_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
trbv_data <- trbv_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# محاسبه فراوانی نسبی ژن‌ها در هر cluster
dot_data <- trbv_data %>%
group_by(cluster, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس فراوانی در "Trm IEL"
gene_order <- dot_data %>%
filter(cluster == "Trm IEL") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# تابع رسم نمودار
make_dotplot <- function(data, title) {
ggplot(data, aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = cluster), alpha = 0.7) +
scale_size_continuous(name = "Frequency") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
) +
labs(x = "Cluster", y = "TRBV Gene", title = title)
}
# رسم نمودار TRBV فقط
dot_plot_trbv <- make_dotplot(dot_data, "TRBV Gene Usage Across Clusters (Trm IEL First)")
# ذخیره نمودار
ggsave("TCR_dotplot_TRBV_TrmIEL_first.png", plot = dot_plot_trbv, width = 8, height = 15, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(forcats)
# فقط داده‌های TRBV و حذف مقادیر NA یا خالی
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & trimws(TRBV) != "") %>%
select(cluster, gene = TRBV)
# مرتب‌سازی سطوح cluster طوری که "Trm IEL" اول بیاد
all_clusters <- unique(trbv_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
trbv_data <- trbv_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# محاسبه فراوانی نسبی ژن‌ها در هر cluster
dot_data <- trbv_data %>%
group_by(cluster, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس فراوانی در "Trm IEL"
gene_order <- dot_data %>%
filter(cluster == "Trm IEL") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# تابع رسم نمودار
make_dotplot <- function(data, title) {
ggplot(data, aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = cluster), alpha = 0.7) +
scale_size_continuous(name = "Frequency") +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
) +
labs(x = "Cluster", y = "TRBV Gene", title = title)
}
# رسم نمودار TRBV فقط
dot_plot_trbv <- make_dotplot(dot_data, "TRBV Gene Usage Across Clusters (Trm IEL First)")
# ذخیره نمودار
ggsave("TCR_dotplot_TRBV_TrmIEL_first.png", plot = dot_plot_trbv, width = 8, height = 15, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
# Remove empty ("") or NA values
trav_data <- full_metadata %>%
filter(!is.na(TRAV) & TRAV != "") %>%
select(cluster, gene = TRAV)
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(cluster, gene = TRBV)
# Combine and label
combined_data <- bind_rows(
trav_data %>% mutate(chain = "TRAV"),
trbv_data %>% mutate(chain = "TRBV")
)
# Count, normalize, and reorder genes by frequency (from high to low)
dot_data <- combined_data %>%
group_by(cluster, chain, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster, chain) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
group_by(chain) %>%
mutate(gene = fct_reorder(gene, freq, .desc = TRUE)) %>%
ungroup()
# **ترتیب cluster را طوری تغییر بده که "Trm IEL" اول باشه**
all_clusters <- unique(dot_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
dot_data <- dot_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# Filter for TRBV only plot
dot_plot_trbv <- ggplot(filter(dot_data, chain == "TRBV"), aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = chain), alpha = 0.7) +
scale_size_continuous(name = "Frequency") +
scale_color_manual(values = c("TRBV" = "#ff7f0e")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
) +
labs(x = "Cluster", y = "TCR Gene", title = "TCR V Gene Usage in Tregs (TRBV only)")
# ذخیره فقط نمودار TRBV
ggsave("TCR_dotplot_TRBV.png", plot = dot_plot_trbv, width = 8, height = 15, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
# Remove empty ("") or NA values
trav_data <- full_metadata %>%
filter(!is.na(TRAV) & TRAV != "") %>%
select(cluster, gene = TRAV)
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(cluster, gene = TRBV)
# Combine and label
combined_data <- bind_rows(
trav_data %>% mutate(chain = "TRAV"),
trbv_data %>% mutate(chain = "TRBV")
)
# Count, normalize, and reorder genes by frequency (from high to low)
dot_data <- combined_data %>%
group_by(cluster, chain, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster, chain) %>%
mutate(freq = count / sum(count)) %>%
ungroup() %>%
group_by(chain) %>%
mutate(gene = fct_reorder(gene, freq, .desc = TRUE)) %>%
ungroup()
# **ترتیب cluster را طوری تغییر بده که "Trm IEL" اول باشه**
all_clusters <- unique(dot_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
dot_data <- dot_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# Filter for TRBV only plot
dot_plot_trbv <- ggplot(filter(dot_data, chain == "TRBV"), aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = chain), alpha = 0.7) +
scale_size_continuous(name = "Frequency") +
scale_color_manual(values = c("TRBV" = "#ff7f0e")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
) +
labs(x = "Cluster", y = "TCR Gene", title = "TCR V Gene Usage in Tregs (TRBV only)")
# ذخیره فقط نمودار TRBV
ggsave("TCR_dotplot_TRBV.png", plot = dot_plot_trbv, width = 8, height = 15, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
# Remove empty ("") or NA values
trav_data <- full_metadata %>%
filter(!is.na(TRAV) & TRAV != "") %>%
select(cluster, gene = TRAV)
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(cluster, gene = TRBV)
# Combine and label
combined_data <- bind_rows(
trav_data %>% mutate(chain = "TRAV"),
trbv_data %>% mutate(chain = "TRBV")
)
# Count, normalize, and reorder genes by frequency (from high to low)
dot_data <- combined_data %>%
group_by(cluster, chain, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster, chain) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# ترتیب cluster طوری که "Trm IEL" اول باشد
all_clusters <- unique(dot_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
dot_data <- dot_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# مرتب‌سازی ژن‌ها بر اساس فراوانی در "Trm IEL" از بزرگ به کوچک
gene_order <- dot_data %>%
filter(chain == "TRBV", cluster == "Trm IEL") %>%
arrange(desc(freq)) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار TRBV فقط
dot_plot_trbv <- ggplot(filter(dot_data, chain == "TRBV"), aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = chain), alpha = 0.7) +
scale_size_continuous(name = "Frequency") +
scale_color_manual(values = c("TRBV" = "#ff7f0e")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
) +
labs(x = "Cluster", y = "TCR Gene", title = "TCR V Gene Usage in Tregs (TRBV only)")
# ذخیره تصویر
ggsave("TCR_dotplot_TRBV.png", plot = dot_plot_trbv, width = 8, height = 15, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
# Remove empty ("") or NA values
trav_data <- full_metadata %>%
filter(!is.na(TRAV) & TRAV != "") %>%
select(cluster, gene = TRAV)
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(cluster, gene = TRBV)
# Combine and label
combined_data <- bind_rows(
trav_data %>% mutate(chain = "TRAV"),
trbv_data %>% mutate(chain = "TRBV")
)
# Count, normalize, and reorder genes by frequency (from high to low)
dot_data <- combined_data %>%
group_by(cluster, chain, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster, chain) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# ترتیب cluster طوری که "Trm IEL" اول باشد
all_clusters <- unique(dot_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
dot_data <- dot_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# مرتب‌سازی ژن‌ها بر اساس فراوانی در "Trm IEL" از کوچک به بزرگ
gene_order <- dot_data %>%
filter(chain == "TRBV", cluster == "Trm IEL") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار TRBV فقط
dot_plot_trbv <- ggplot(filter(dot_data, chain == "TRBV"), aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = chain), alpha = 0.7) +
scale_size_continuous(name = "Frequency") +
scale_color_manual(values = c("TRBV" = "#ff7f0e")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
) +
labs(x = "Cluster", y = "TCR Gene", title = "TCR V Gene Usage in Tregs (TRBV only)")
# ذخیره تصویر
ggsave("TCR_dotplot_TRBV.png", plot = dot_plot_trbv, width = 8, height = 15, dpi = 300, bg = "white")
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
# Remove empty ("") or NA values
trav_data <- full_metadata %>%
filter(!is.na(TRAV) & TRAV != "") %>%
select(cluster, gene = TRAV)
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(cluster, gene = TRBV)
# Combine and label
combined_data <- bind_rows(
trav_data %>% mutate(chain = "TRAV"),
trbv_data %>% mutate(chain = "TRBV")
)
# Count, normalize, and reorder genes by frequency (from high to low)
dot_data <- combined_data %>%
group_by(cluster, chain, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster, chain) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# ترتیب cluster طوری که "Trm IEL" اول باشد
all_clusters <- unique(dot_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
dot_data <- dot_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# حذف NA و رشته‌های خالی از gene
dot_data <- dot_data %>% filter(!is.na(gene) & trimws(gene) != "")
# مرتب‌سازی ژن‌ها بر اساس فراوانی در "Trm IEL" از کوچک به بزرگ
gene_order <- dot_data %>%
filter(chain == "TRBV", cluster == "Trm IEL") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# رسم نمودار TRBV فقط
dot_plot_trbv <- ggplot(filter(dot_data, chain == "TRBV"), aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = chain), alpha = 0.7) +
scale_size_continuous(name = "Frequency") +
scale_color_manual(values = c("TRBV" = "#ff7f0e")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
) +
labs(x = "Cluster", y = "TCR Gene", title = "TCR V Gene Usage in Tregs (TRBV only)")
# ذخیره تصویر
ggsave("TCR_dotplot_TRBV.png", plot = dot_plot_trbv, width = 8, height = 15, dpi = 300, bg = "white")
View(dot_data)
library(ggplot2)
library(dplyr)
library(tidyr)
library(forcats)
# Remove empty ("") or NA values
trav_data <- full_metadata %>%
filter(!is.na(TRAV) & TRAV != "") %>%
select(cluster, gene = TRAV)
trbv_data <- full_metadata %>%
filter(!is.na(TRBV) & TRBV != "") %>%
select(cluster, gene = TRBV)
# Combine and label
combined_data <- bind_rows(
trav_data %>% mutate(chain = "TRAV"),
trbv_data %>% mutate(chain = "TRBV")
)
# Count, normalize, and reorder genes by frequency (from high to low)
dot_data <- combined_data %>%
group_by(cluster, chain, gene) %>%
summarise(count = n(), .groups = "drop") %>%
group_by(cluster, chain) %>%
mutate(freq = count / sum(count)) %>%
ungroup()
# ترتیب cluster طوری که "Trm IEL" اول باشد
all_clusters <- unique(dot_data$cluster)
cluster_order <- c("Trm IEL", setdiff(all_clusters, "Trm IEL"))
dot_data <- dot_data %>%
mutate(cluster = factor(cluster, levels = cluster_order))
# مرتب‌سازی ژن‌ها بر اساس فراوانی در "Trm IEL" از کوچک به بزرگ
gene_order <- dot_data %>%
filter(chain == "TRBV", cluster == "Trm IEL") %>%
arrange(freq) %>%
pull(gene)
dot_data <- dot_data %>%
mutate(gene = factor(gene, levels = gene_order))
# حذف NA و رشته‌های خالی از gene
dot_data <- dot_data %>% filter(!is.na(gene) & trimws(gene) != "")
# رسم نمودار TRBV فقط
dot_plot_trbv <- ggplot(filter(dot_data, chain == "TRBV"), aes(x = cluster, y = gene)) +
geom_point(aes(size = freq, color = chain), alpha = 0.7) +
scale_size_continuous(name = "Frequency") +
scale_color_manual(values = c("TRBV" = "#ff7f0e")) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5)
) +
labs(x = "Cluster", y = "TCR Gene", title = "TCR V Gene Usage in Tregs (TRBV only)")
# ذخیره تصویر
ggsave("TCR_dotplot_TRBV.png", plot = dot_plot_trbv, width = 8, height = 15, dpi = 300, bg = "white")
