title = "αβ Clonal Size Distribution by Patient (Raw Counts) | Rogue Clusters"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +   # حذف فاصله اضافی دسته‌ها
coord_cartesian(clip = "off")          # اجازه می‌دهد نمودار کامل نشان داده شود بدون فضای اضافه
ggsave("Rogue Clusters (Raw Counts).pdf", p2, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("Rogue Clusters (Raw Counts).png", p2, width = 4, height = 2, dpi = 600, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" |
full_metadata$cluster == "Cyt. IEL" |
full_metadata$cluster == "Trm IEL" , ]
# Filter by Patient if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_ab)) %>%
mutate(clone_category = case_when(
clone_size_ab == 1 ~ "Singleton",
clone_size_ab >= 2 & clone_size_ab <= 10 ~ "Size 2-10",
clone_size_ab >= 11 & clone_size_ab <= 50 ~ "Size 11-50",
clone_size_ab >= 51 & clone_size_ab <= 100 ~ "Size 51-100",
clone_size_ab >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Patient and clone category
df <- metadata_filtered %>%
group_by(Patient, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Patient, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Patient) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
library(writexl)
write_xlsx(df, "df.xlsx")
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 2),
axis.text.y = element_text(size = 2),
plot.title = element_text(size = 5, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
legend.title = element_text(size = 5),
legend.text = element_text(size = 4),
legend.key.size = unit(4, "mm")
)
p1 <- ggplot(df, aes(x = Patient, y = perc, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Patient",
y = "Percentage of Cells",
fill = "Clone Size",
title = "αβ Clonal Size Distribution by Patient (Percentage) | Rogue Clusters"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +   # حذف فاصله اضافی دسته‌ها
coord_cartesian(clip = "off")          # اجازه می‌دهد نمودار کامل نشان داده شود بدون فضای اضافه
ggsave("Rogue Clusters (Percentage).pdf", p1, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("Rogue Clusters (Percentage).png", p1, width = 4, height = 2, dpi = 600, bg = "white")
p2 <- ggplot(df, aes(x = Patient, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Patient",
y = "Number of Cells",
fill = "Clone Size",
title = "αβ Clonal Size Distribution by Patient (Raw Counts) | Rogue Clusters"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +   # حذف فاصله اضافی دسته‌ها
coord_cartesian(clip = "off")          # اجازه می‌دهد نمودار کامل نشان داده شود بدون فضای اضافه
ggsave("Rogue Clusters (Raw Counts).pdf", p2, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("Rogue Clusters (Raw Counts).png", p2, width = 4, height = 2, dpi = 600, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/5_Clonal Expansion Analysis/Based on cdr_Full_ab/2_All Clusters/Horizontal/Version 4/Patient By Patient/gd/Rogue Clusters")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8-" |
full_metadata$cluster == "Cyt. IEL" |
full_metadata$cluster == "Trm IEL" , ]
# Filter by Patient if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Patient and clone category
df <- metadata_filtered %>%
group_by(Patient, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Patient, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Patient) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
library(writexl)
write_xlsx(df, "df.xlsx")
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 2),
axis.text.y = element_text(size = 2),
plot.title = element_text(size = 5, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
legend.title = element_text(size = 5),
legend.text = element_text(size = 4),
legend.key.size = unit(4, "mm")
)
p1 <- ggplot(df, aes(x = Patient, y = perc, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Patient",
y = "Percentage of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Patient (Percentage) | Rogue Clusters"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("Rogue Clusters (Percentage).pdf", p1, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("Rogue Clusters (Percentage).png", p1, width = 4, height = 2, dpi = 600, bg = "white")
p2 <- ggplot(df, aes(x = Patient, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Patient",
y = "Number of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Patient (Raw Counts) | Rogue Clusters"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("Rogue Clusters (Raw Counts).pdf", p2, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("Rogue Clusters (Raw Counts).png", p2, width = 4, height = 2, dpi = 600, bg = "white")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/5_Clonal Expansion Analysis/Based on cdr_Full_ab/2_All Clusters/Horizontal/Version 4/Patient By Patient/gd/CD4-CD8- IL10 ICOS")
unique(full_metadata$cluster)
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
unique(full_metadata$cluster)
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8- IL10 ICOS" , ]
# Filter by Patient if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Patient and clone category
df <- metadata_filtered %>%
group_by(Patient, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Patient, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Patient) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
library(writexl)
write_xlsx(df, "df.xlsx")
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 2),
axis.text.y = element_text(size = 2),
plot.title = element_text(size = 5, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
legend.title = element_text(size = 5),
legend.text = element_text(size = 4),
legend.key.size = unit(4, "mm")
)
p1 <- ggplot(df, aes(x = Patient, y = perc, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Patient",
y = "Percentage of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Patient (Percentage) | CD4 Group"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("CD4 Group (Percentage).pdf", p1, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8- IL10 ICOS" , ]
# Filter by Patient if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Patient and clone category
df <- metadata_filtered %>%
group_by(Patient, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Patient, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Patient) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
library(writexl)
write_xlsx(df, "df.xlsx")
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 2),
axis.text.y = element_text(size = 2),
plot.title = element_text(size = 5, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
legend.title = element_text(size = 5),
legend.text = element_text(size = 4),
legend.key.size = unit(4, "mm")
)
p1 <- ggplot(df, aes(x = Patient, y = perc, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Patient",
y = "Percentage of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Patient (Percentage) | CD4 Group"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("CD4 Group (Percentage).pdf", p1, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8- IL10 ICOS" , ]
# Filter by Patient if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Patient and clone category
df <- metadata_filtered %>%
group_by(Patient, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Patient, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Patient) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
library(writexl)
write_xlsx(df, "df.xlsx")
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 2),
axis.text.y = element_text(size = 2),
plot.title = element_text(size = 5, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
legend.title = element_text(size = 5),
legend.text = element_text(size = 4),
legend.key.size = unit(4, "mm")
)
p1 <- ggplot(df, aes(x = Patient, y = perc, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Patient",
y = "Percentage of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Patient (Percentage) | CD4-CD8- IL10 ICOS"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("CD4-CD8- IL10 ICOS (Percentage).pdf", p1, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8- IL10 ICOS" , ]
# Filter by Patient if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Patient and clone category
df <- metadata_filtered %>%
group_by(Patient, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Patient, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Patient) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
View(df)
View(full_metadata)
setwd("C:/Esmaeil/CeliacProject/CeliacProject/5_Clonal Expansion Analysis/Based on cdr_Full_ab/2_All Clusters/Horizontal/Version 4/gd/CD4-CD8- IL10 ICOS")
load("C:/Esmaeil/CeliacProject/BackUp/Meta Data/MetaData_Esmaeil.Rdata")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8- IL10 ICOS" , ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 3),
axis.text.y = element_text(size = 3),
plot.title = element_text(size = 5, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
legend.title = element_text(size = 5),
legend.text = element_text(size = 4),
legend.key.size = unit(4, "mm")
)
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis",
y = "Percentage of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Percentage) | CD4 Group"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("CD4 Group (Percentage).pdf", p1, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("CD4 Group (Percentage).png", p1, width = 4, height = 2, dpi = 600, bg = "white")
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis",
y = "Number of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Raw Counts) | CD4 Group"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("CD4 Group (Raw Counts).pdf", p2, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("CD4 Group (Raw Counts).png", p2, width = 4, height = 2, dpi = 600, bg = "white")
library(dplyr)
library(tidyr)
library(ggplot2)
library(scRepertoire)
full_metadata = full_metadata[full_metadata$cluster == "CD4-CD8- IL10 ICOS" , ]
# Filter by diagnosis if needed
metadata_filtered <- full_metadata %>%
filter(!is.na(clone_size_gd)) %>%
mutate(clone_category = case_when(
clone_size_gd == 1 ~ "Singleton",
clone_size_gd >= 2 & clone_size_gd <= 10 ~ "Size 2-10",
clone_size_gd >= 11 & clone_size_gd <= 50 ~ "Size 11-50",
clone_size_gd >= 51 & clone_size_gd <= 100 ~ "Size 51-100",
clone_size_gd >= 101 ~ "Size 100+",
TRUE ~ NA_character_
)) %>%
filter(!is.na(clone_category))
# Summarize by Diagnosis and clone category
df <- metadata_filtered %>%
group_by(Diagnosis, clone_category) %>%
summarise(n_cells = n(), .groups = "drop") %>%
complete(Diagnosis, clone_category = c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+"),
fill = list(n_cells = 0)) %>%
group_by(Diagnosis) %>%
mutate(perc = if (sum(n_cells) == 0) 0 else n_cells / sum(n_cells) * 100) %>%
ungroup()
# Order clone categories
df$clone_category <- factor(df$clone_category, levels = rev(c("Singleton", "Size 2-10", "Size 11-50", "Size 51-100", "Size 100+")))
# Colors and theme
clone_colors <- rev(c("#B3B3B3", "#F0CCFF", "#F8766D", "#619CFF", "#F032E6"))
white_theme <- theme_minimal(base_size = 12) +
theme(
plot.background = element_rect(fill = "white", color = NA),
panel.background = element_rect(fill = "white", color = NA),
legend.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 3),
axis.text.y = element_text(size = 3),
plot.title = element_text(size = 5, face = "bold", hjust = 0.5),
axis.title.x = element_text(size = 6),
axis.title.y = element_text(size = 6),
legend.title = element_text(size = 5),
legend.text = element_text(size = 4),
legend.key.size = unit(4, "mm")
)
p1 <- ggplot(df, aes(x = Diagnosis, y = perc, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis",
y = "Percentage of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Percentage) | CD4-CD8- IL10 ICOS"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("CD4-CD8- IL10 ICOS (Percentage).pdf", p1, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("CD4-CD8- IL10 ICOS (Percentage).png", p1, width = 4, height = 2, dpi = 600, bg = "white")
p2 <- ggplot(df, aes(x = Diagnosis, y = n_cells, fill = clone_category)) +
geom_bar(stat = "identity", width = 0.9) +
scale_fill_manual(values = clone_colors) +
labs(
x = "Diagnosis",
y = "Number of Cells",
fill = "Clone Size",
title = "γδ Clonal Size Distribution by Diagnosis (Raw Counts) | CD4-CD8- IL10 ICOS"
) +
white_theme +
scale_x_discrete(expand = c(0,10)) +
coord_cartesian(clip = "off")
ggsave("CD4-CD8- IL10 ICOS (Raw Counts).pdf", p2, width = 4, height = 2, dpi = 600, bg = "white", device = cairo_pdf, family = "Arial Unicode MS")
ggsave("CD4-CD8- IL10 ICOS (Raw Counts).png", p2, width = 4, height = 2, dpi = 600, bg = "white")
