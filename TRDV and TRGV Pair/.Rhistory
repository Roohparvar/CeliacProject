theme(plot.title = element_text(hjust = 0.5))
# Save as PNG
ggsave("TRDV_by_Diagnosis_dark.png", plot = p, width = 8, height = 6, dpi = 600, bg = "white")
View(diagnosis_summary)
diagnosis_summaryTRGV <- full_metadata %>%
group_by(Diagnosis, TRGV) %>%
summarise(count = n(), .groups = "drop_last") %>%
mutate(total = sum(count),
percent = round(100 * count / total, 2)) %>%
ungroup() %>%
arrange(Diagnosis, TRGV)
print(diagnosis_summaryTRGV)
library(ggplot2)
# Plot with dark colors
p <- ggplot(diagnosis_summaryTRGV, aes(x = Diagnosis, y = percent, fill = TRGV)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Diagnosis", y = "Percentage",
title = "Proportion of TRGV types per Diagnosis") +
scale_fill_manual(values = c(
"TRGV1" = "#c6ab52",   # dark navy
"TRGV2" = "#679966",   # dark grey-purple
"TRGV3" = "#ff6766"    # very dark blue
)) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
# Save as PNG
ggsave("TRGV_by_Diagnosis_dark.png", plot = p, width = 8, height = 6, dpi = 600, bg = "white")
View(diagnosis_summaryTRGV)
unique(diagnosis_summaryTRGV$TRGV)
dark_colors <- c(
"TRGV2"  = "#1b2a41",
"TRGV3"  = "#4a4e69",
"TRGV4"  = "#22223b",
"TRGV5"  = "#6a2c70",
"TRGV5P" = "#9a031e",
"TRGV8"  = "#3f4e4f",
"TRGV9"  = "#2e4057",
"TRGV10" = "#5a3e36",
"TRGV11" = "#4b1d3f"
)
# Plot
p <- ggplot(diagnosis_summaryTRGV, aes(x = Diagnosis, y = percent, fill = TRGV)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Diagnosis", y = "Percentage",
title = "Proportion of TRGV types per Diagnosis") +
scale_fill_manual(values = dark_colors) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
# Save as PNG
ggsave("TRGV_by_Diagnosis_dark.png", plot = p, width = 8, height = 6, dpi = 600, bg = "white")
View(diagnosis_summaryTRGV)
dark_colors <- c(
"TRGV2"  = "#ae1f29",
"TRGV3"  = "#e05b48",
"TRGV4"  = "#f1a284",
"TRGV5"  = "#fbdbc3",
"TRGV5P" = "#f7f7f7",
"TRGV8"  = "#cce5f6",
"TRGV9"  = "#8fc3dd",
"TRGV10" = "#4790be",
"TRGV11" = "#1666aa"
)
# Plot
p <- ggplot(diagnosis_summaryTRGV, aes(x = Diagnosis, y = percent, fill = TRGV)) +
geom_bar(stat = "identity", position = "stack") +
labs(x = "Diagnosis", y = "Percentage",
title = "Proportion of TRGV types per Diagnosis") +
scale_fill_manual(values = dark_colors) +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
# Save as PNG
ggsave("TRGV_by_Diagnosis_dark.png", plot = p, width = 8, height = 6, dpi = 600, bg = "white")
# install.packages("ggalluvial")
library(ggalluvial)
library(ggplot2)
library(dplyr)
# Make sure your data has Diagnosis, TRDV, percent
# diagnosis_summary <- full_metadata %>%
#   group_by(Diagnosis, TRDV) %>%
#   summarise(count = n(), .groups = "drop_last") %>%
#   mutate(total = sum(count),
#          percent = round(100 * count / total, 2)) %>%
#   ungroup() %>%
#   arrange(Diagnosis, TRDV)
# Create the alluvial plot
p <- ggplot(diagnosis_summary,
aes(axis1 = Diagnosis, axis2 = TRDV, y = percent)) +
geom_alluvium(aes(fill = TRDV), width = 1/12, alpha = 0.8) +
geom_stratum(width = 1/12, fill = "gray80", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Diagnosis", "TRDV"), expand = c(0.15, 0.05)) +
scale_fill_manual(values = c(
"TRDV1" = "#c6ab52",
"TRDV2" = "#679966",
"TRDV3" = "#ff6766"
)) +
labs(title = "Flow of TRDV types across Diagnoses", y = "Percentage") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
# Save as PNG
ggsave("TRDV_alluvial.png", plot = p, width = 10, height = 6, dpi = 600, bg = "white")
# install.packages("ggalluvial")
library(ggalluvial)
library(ggplot2)
library(dplyr)
diagnosis_summary_alluv <- diagnosis_summary %>%
mutate(Diagnosis = factor(Diagnosis, levels = unique(Diagnosis)))
# Plot with Diagnosis on x-axis
p <- ggplot(diagnosis_summary_alluv,
aes(x = Diagnosis, stratum = TRDV, alluvium = TRDV, y = percent, fill = TRDV)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", color = "darkgray", alpha = 0.8) +
geom_stratum(width = 0.6, color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 4, color = "white") +
scale_fill_manual(values = c(
"TRDV1" = "#c6ab52",
"TRDV2" = "#679966",
"TRDV3" = "#ff6766"
)) +
labs(title = "TRDV Proportions Across Diagnoses", y = "Percentage") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
# Save as PNG
ggsave("TRDV_alluvial_xaxis.png", plot = p, width = 10, height = 6, dpi = 600, bg = "white")
library(tibble)
library(dplyr)
library(ggplot2)
library(ggalluvial)
library(tidyr)
library(scales)  # for percent_format
# Target Diagnoses and TRDV types
target_diagnosis <- c("Healthy", "ACD", "RCD-I", "RCD-II")
target_TRDV <- c("TRDV1", "TRDV2", "TRDV3")
# Create percent matrix
percent_matrix <- matrix(NA,
nrow = length(target_TRDV),
ncol = length(target_diagnosis),
dimnames = list(target_TRDV, target_diagnosis))
for (diag in target_diagnosis) {
subset_diag <- full_metadata[full_metadata$Diagnosis == diag, ]
for (trdv in target_TRDV) {
count_TRDV <- sum(subset_diag$TRDV == trdv, na.rm = TRUE)
total_cells <- nrow(subset_diag)
percent <- (count_TRDV / total_cells) * 100
percent_matrix[trdv, diag] <- percent
}
}
percent_matrix <- t(percent_matrix)
df <- as.data.frame(percent_matrix)
df <- cbind(TRDV = rownames(df), df)
rownames(df) <- NULL
wide_percent <- as_tibble(df)
# Convert to long format
alluvial_data <- wide_percent %>%
rename(Healthy = Healthy, ACD = ACD, RCD_I = `RCD-I`, RCD_II = `RCD-II`) %>%
mutate(id = TRDV)
library(ggalluvial)
library(ggplot2)
library(dplyr)
# Ensure your data is in a proper format for alluvial plot
alluvial_data <- diagnosis_summary %>%
mutate(Diagnosis = factor(Diagnosis),
TRDV = factor(TRDV))
# Create alluvial plot
p_alluvial <- ggplot(alluvial_data,
aes(axis1 = Diagnosis, axis2 = TRDV, y = percent)) +
geom_alluvium(aes(fill = TRDV), width = 1/12) +
geom_stratum(width = 1/12, fill = "grey", color = "black") +
geom_text(stat = "stratum", aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Diagnosis", "TRDV"), expand = c(0.1, 0.05)) +
scale_fill_manual(values = c(
"TRDV1" = "#c6ab52",
"TRDV2" = "#679966",
"TRDV3" = "#ff6766"
)) +
labs(x = "", y = "Percentage",
title = "Alluvial Plot of TRDV Types per Diagnosis") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
# Save as PNG
ggsave("TRDV_by_Diagnosis_alluvial.png", plot = p_alluvial, width = 8, height = 6, dpi = 600, bg = "white")
library(ggalluvial)
library(ggplot2)
library(dplyr)
library(ggalluvial)
library(ggplot2)
library(dplyr)
# Make sure the data is in alluvial format
alluvial_data <- diagnosis_summary %>%
mutate(Diagnosis = factor(Diagnosis),
TRDV = factor(TRDV))
# Alluvial plot with Diagnosis on x-axis
p_alluvial <- ggplot(alluvial_data,
aes(x = Diagnosis, stratum = TRDV, alluvium = TRDV, y = percent, fill = TRDV)) +
geom_flow(stat = "alluvium", lode.guidance = "forward", color = "darkgray") +
geom_stratum(width = 0.8, color = "black") +
scale_fill_manual(values = c(
"TRDV1" = "#c6ab52",
"TRDV2" = "#679966",
"TRDV3" = "#ff6766"
)) +
labs(x = "Diagnosis", y = "Percentage",
title = "Proportion of TRDV Types per Diagnosis (Alluvial)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
# Save
ggsave("TRDV_by_Diagnosis_alluvial.png", plot = p_alluvial, width = 8, height = 6, dpi = 600, bg = "white")
library(ggplot2)
library(ggalluvial)
library(scales)
library(dplyr)
# Prepare the data
alluvial_data <- diagnosis_summary %>%
mutate(Diagnosis = factor(Diagnosis),
TRDV = factor(TRDV)) %>%
rename(Stage = Diagnosis, id = TRDV, Freq = percent) %>%
mutate(alluvium = id)  # Needed for geom_flow
# Define colors
trdv_colors <- c(
"TRDV1" = "#c6ab52",
"TRDV2" = "#679966",
"TRDV3" = "#ff6766"
)
# Plot
p <- ggplot(alluvial_data,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(stat = "stratum", aes(label = paste0(round(Freq, 1), "%")),
size = 3, color = "black") +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = trdv_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "Proportion of TRDV Types per Diagnosis",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# Save as PNG
ggsave("TRDV_alluvial_percentages.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
View(diagnosis_summary)
library(ggplot2)
library(ggalluvial)
library(scales)
library(dplyr)
# Prepare the data
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id)  # Needed for geom_flow
# Colors
dark_colors <- c(
"TRGV2"  = "#ae1f29",
"TRGV3"  = "#e05b48",
"TRGV4"  = "#f1a284",
"TRGV5"  = "#fbdbc3",
"TRGV5P" = "#f7f7f7",
"TRGV8"  = "#cce5f6",
"TRGV9"  = "#8fc3dd",
"TRGV10" = "#4790be",
"TRGV11" = "#1666aa"
)
# Plot
p <- ggplot(alluvial_data_TRGV,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(stat = "stratum", aes(label = paste0(round(Freq, 1), "%")),
size = 3, color = "black") +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = dark_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "Proportion of TRGV Types per Diagnosis",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# Save as PNG
ggsave("TRGV_alluvial_percentages.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
library(ggplot2)
library(ggalluvial)
library(scales)
library(dplyr)
# Prepare the data
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id)  # Needed for geom_flow
# Colors
dark_colors <- c(
"TRGV2"  = "#ae1f29",
"TRGV3"  = "#e05b48",
"TRGV4"  = "#f1a284",
"TRGV5"  = "#fbdbc3",
"TRGV5P" = "#f7f7f7",
"TRGV8"  = "#cce5f6",
"TRGV9"  = "#8fc3dd",
"TRGV10" = "#4790be",
"TRGV11" = "#1666aa"
)
# Plot
p <- ggplot(alluvial_data_TRGV,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(
stat = "stratum",
aes(label = ifelse(Freq >= 3, paste0(round(Freq, 1), "%"), "")),
size = 3, color = "black"
) +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = dark_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "Proportion of TRGV Types per Diagnosis",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# Save as PNG
ggsave("TRGV_alluvial_percentages_filtered.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
p <- ggplot(alluvial_data_TRGV,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(
stat = "stratum",
aes(label = ifelse(Freq >= 2, paste0(round(Freq, 1), "%"), "")),
size = 3, color = "black"
) +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = dark_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "Proportion of TRGV Types per Diagnosis",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# Save as PNG
ggsave("TRGV_alluvial_percentages_filtered.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
p <- ggplot(alluvial_data_TRGV,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(
stat = "stratum",
aes(label = ifelse(Freq >= 2, paste0(round(Freq, 1), "%"), "")),
size = 2, color = "black"
) +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = dark_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "Proportion of TRGV Types per Diagnosis",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# Save as PNG
ggsave("TRGV_alluvial_percentages_filtered.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id) %>%  # Needed for geom_flow
complete(Stage, id, fill = list(Freq = 0, alluvium = NA)) %>%
mutate(alluvium = ifelse(is.na(alluvium), id, alluvium))
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id) %>%  # Needed for geom_flow
complete(Stage, id, fill = list(Freq = 0, alluvium = NA)) %>%
mutate(alluvium = ifelse(is.na(alluvium), id, alluvium))
View(alluvial_data_TRGV)
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id) %>%  # Needed for geom_flow
complete(Stage, id, fill = list(Freq = 0, alluvium = 0)) %>%
mutate(alluvium = ifelse(is.na(alluvium), id, alluvium))
# Ensure all combinations exist, fill missing with 0
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id) %>%  # Needed for geom_flow
complete(Stage, id, fill = list(Freq = 0)) %>%  # fill missing with 0
mutate(alluvium = id)  # alluvium must match id
View(alluvial_data_TRGV)
# Convert NAs in Freq/percent to 0
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id,           # needed for geom_flow
Freq = ifelse(is.na(Freq), 0, Freq))  # replace NA with 0
View(alluvial_data_TRGV)
# Ensure all combinations exist, fill missing with 0
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id) %>%  # Needed for geom_flow
complete(Stage, id, fill = list(Freq = 0)) %>%  # fill missing with 0
mutate(alluvium = id)  # alluvium must match id
alluvial_data_TRGV[is.na(alluvial_data_TRGV)] <- 0
View(alluvial_data_TRGV)
# Colors
dark_colors <- c(
"TRGV2"  = "#ae1f29",
"TRGV3"  = "#e05b48",
"TRGV4"  = "#f1a284",
"TRGV5"  = "#fbdbc3",
"TRGV5P" = "#f7f7f7",
"TRGV8"  = "#cce5f6",
"TRGV9"  = "#8fc3dd",
"TRGV10" = "#4790be",
"TRGV11" = "#1666aa"
)
# Plot
p <- ggplot(alluvial_data_TRGV,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(
stat = "stratum",
aes(label = ifelse(Freq >= 2, paste0(round(Freq, 1), "%"), "")),
size = 2, color = "black"
) +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = dark_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "Proportion of TRGV Types per Diagnosis",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# Save as PNG
ggsave("TRGV_alluvial_percentages_filtered.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
# Ensure all combinations exist, fill missing with 0
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id) %>%  # Needed for geom_flow
complete(Stage, id, fill = list(Freq = 0)) %>%  # fill missing with 0
mutate(alluvium = id)  # alluvium must match id
alluvial_data_TRGV[is.na(alluvial_data_TRGV)] <- 0
# Colors
dark_colors <- c(
"TRGV2"  = "#ae1f29",
"TRGV3"  = "#e05b48",
"TRGV4"  = "#f1a284",
"TRGV5"  = "#fbdbc3",
"TRGV5P" = "#f7f7f7",
"TRGV8"  = "#cce5f6",
"TRGV9"  = "#8fc3dd",
"TRGV10" = "#4790be",
"TRGV11" = "#1666aa"
)
# Plot
p <- ggplot(alluvial_data_TRGV,
aes(x = Stage, stratum = id, alluvium = alluvium,
y = Freq, fill = id)) +
geom_flow(alpha = 0.7, color = "grey50") +
geom_stratum(width = 0.3, color = "black") +
geom_text(
stat = "stratum",
aes(label = ifelse(Freq >= 2, paste0(round(Freq, 1), "%"), "")),
size = 2, color = "black"
) +
scale_x_discrete(expand = c(0.1, 0.1)) +
scale_fill_manual(values = dark_colors) +
scale_y_continuous(labels = percent_format(scale = 1)) +
labs(title = "Proportion of TRGV Types per Diagnosis",
x = "Diagnosis",
y = "Percentage (%)") +
theme_minimal(base_size = 14) +
theme(plot.title = element_text(hjust = 0.5))
print(p)
# Save as PNG
ggsave("TRGV_alluvial_percentages_filtered.png",
plot = p, width = 10, height = 5, dpi = 300, bg = "white")
# Ensure all combinations exist, fill missing with 0
alluvial_data_TRGV <- diagnosis_summaryTRGV %>%
mutate(Diagnosis = factor(Diagnosis),
TRGV = factor(TRGV)) %>%
rename(Stage = Diagnosis, id = TRGV, Freq = percent) %>%
mutate(alluvium = id) %>%  # Needed for geom_flow
complete(Stage, id, fill = list(Freq = 0)) %>%  # fill missing with 0
mutate(alluvium = id)  # alluvium must match id
alluvial_data_TRGV[is.na(alluvial_data_TRGV)] <- 0
View(alluvial_data_TRGV)
