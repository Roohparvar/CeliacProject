load("C:/Esmaeil/CeliacProject/BackUp/MetaData_jerome.Rdata")
setwd("C:/Esmaeil/CeliacProject/BackUp")
install.packages("writexl")
library(writexl)
write_xlsx(full_metadata, "MetaData_jerome.xlsx")
getw
load("C:/Esmaeil/CeliacProject/BackUp/MetaData_Esmaeil.Rdata")
install.packages("writexl")
library(writexl)
write_xlsx(full_metadata, "MetaData_Esmaeil.xlsx")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/T and B (Ambiguous) Immune Receptor distribution")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
load("C:/Esmaeil/CeliacProject/BackUp/MetaData/MetaData_Esmaeil.Rdata")
setwd("C:/Esmaeil/CeliacProject/CeliacProject/T and B (Ambiguous) Immune Receptor distribution")
View(full_metadata)
unique(full_metadata$imm_receptor_Esmaeil_clean)
unique(full_metadata$imm_receptor_Esmaeil)
unique(full_metadata$imm_receptor_Jerome)
library(dplyr)
library(writexl)
library(dplyr)
library(writexl)
output_df <- full_metadata %>%
select(
UMAP_1 = scVI_with_hvg_UMAP_1,
UMAP_2 = scVI_with_hvg_UMAP_2,
imm_receptor_jerome,
cluster
) %>%
mutate(
color = ifelse(imm_receptor_jerome == "T and B", "blue", "gray")
)
library(dplyr)
library(writexl)
output_df <- full_metadata %>%
select(
UMAP_1 = scVI_with_hvg_UMAP_1,
UMAP_2 = scVI_with_hvg_UMAP_2,
imm_receptor_Jerome,
cluster
) %>%
mutate(
color = ifelse(imm_receptor_Jerome == "T and B", "blue", "gray")
)
write_xlsx(output_df, "Ambiguous_TandB_Distribution.xlsx")
library(ggplot2)
bar_data <- output_df %>%
filter(imm_receptor_jerome == "T and B") %>%
count(cluster)
bar_data <- output_df %>%
filter(imm_receptor_Jerome == "T and B") %>%
count(cluster)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 📊 آماده‌سازی داده برای Bar Plot
bar_data <- output_df %>%
filter(imm_receptor_jerome == "T and B") %>%
count(cluster) %>%
arrange(desc(n)) %>%
mutate(cluster = factor(cluster, levels = cluster))  # برای حفظ ترتیب در محور x
# 📊 آماده‌سازی داده برای Bar Plot
bar_data <- output_df %>%
filter(imm_receptor_Jerome == "T and B") %>%
count(cluster) %>%
arrange(desc(n)) %>%
mutate(cluster = factor(cluster, levels = cluster))  # برای حفظ ترتیب در محور x
# 🖼 ذخیره نمودار به صورت فایل PNG
png("T_and_B_cells_per_cluster.png", width = 1200, height = 800)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
# 📊 آماده‌سازی داده برای Bar Plot
bar_data <- output_df %>%
filter(imm_receptor_Jerome == "T and B") %>%
count(cluster) %>%
arrange(desc(n)) %>%
mutate(cluster = factor(cluster, levels = cluster))  # برای حفظ ترتیب در محور x
# 🖼 ذخیره نمودار به صورت فایل PNG
png("T_and_B_cells_umap.png", width = 1600, height = 1200, res = 200)
ggplot(output_df, aes(x = scVI_with_hvg_UMAP_1, y = scVI_with_hvg_UMAP_2)) +
geom_point(aes(color = color), size = 1.5, alpha = 0.8) +
labs(
title = "UMAP of Cells with 'T and B' Immune Receptor",
x = "UMAP 1",
y = "UMAP 2"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16),
legend.position = "none"
)
# 📊 آماده‌سازی داده برای Bar Plot
bar_data <- output_df %>%
filter(imm_receptor_Jerome == "T and B") %>%
count(cluster) %>%
arrange(desc(n)) %>%
mutate(cluster = factor(cluster, levels = cluster))  # برای حفظ ترتیب در محور x
# 🖼 ذخیره نمودار به صورت فایل PNG
png("T_and_B_cells_per_cluster.png", width = 1200, height = 800)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dev.off()
# 📊 آماده‌سازی داده برای Bar Plot
bar_data <- output_df %>%
filter(imm_receptor_Jerome == "T and B") %>%
count(cluster) %>%
arrange(desc(n)) %>%
mutate(cluster = factor(cluster, levels = cluster))  # برای حفظ ترتیب در محور x
# 🖼 ذخیره نمودار به صورت فایل PNG
png("T_and_B_cells_per_cluster.png", width = 1200, height = 800)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16)
)
dev.off()
png("T_and_B_cells_per_cluster.png", width = 1200, height = 800, res = 600)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16)
)
dev.off()
png("T_and_B_cells_per_cluster.png", width = 2000, height = 1200, res = 600)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16)
)
dev.off()
png("T_and_B_cells_per_cluster.png", width = 2000, height = 1200, res = 300)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(hjust = 0.5, face = "bold", size = 16)
)
dev.off()
png("T_and_B_cells_per_cluster.png", width = 2000, height = 1200, res = 300)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 35, hjust = 1, size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(hjust = 0.5, face = "bold", size = 12)
)
dev.off()
png("T_and_B_cells_per_cluster.png", width = 2000, height = 1200, res = 300)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 20, hjust = 1, size = 5),
axis.text.y = element_text(size = 20),
plot.title = element_text(hjust = 0.5, face = "bold", size = 10)
)
dev.off()
png("T_and_B_cells_per_cluster.png", width = 2000, height = 1200, res = 300)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(hjust = 0.5, face = "bold", size = 10)
)
dev.off()
ggplot(output_df, aes(x = UMAP_1, y = UMAP_2, color = color)) +
geom_point(size = 0.8, alpha = 0.7) +
scale_color_identity() +
labs(
title = "UMAP Plot - Highlighting 'T and B' Cells",
x = "UMAP 1",
y = "UMAP 2"
) +
theme_minimal()
png("UMAP_T_and_B_cells.png", width = 1600, height = 1200, res = 150)
ggplot(output_df, aes(x = UMAP_1, y = UMAP_2, color = color)) +
geom_point(size = 0.8, alpha = 0.7) +
scale_color_identity() +
labs(
title = "UMAP Plot - Highlighting 'T and B' Cells",
x = "UMAP 1",
y = "UMAP 2"
) +
theme_minimal(base_size = 14) +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 16)
)
dev.off()
bar_data <- output_df %>%
filter(imm_receptor_Jerome == "T and B") %>%
count(cluster) %>%
arrange(desc(n)) %>%
mutate(cluster = factor(cluster, levels = cluster))  # برای حفظ ترتیب در محور x
png("T_and_B_cells_umap.png", width = 2000, height = 1200, res = 300)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(hjust = 0.5, face = "bold", size = 10)
)
dev.off()
bar_data <- output_df %>%
filter(imm_receptor_Jerome == "T and B") %>%
count(cluster) %>%
arrange(desc(n)) %>%
mutate(cluster = factor(cluster, levels = cluster))  # برای حفظ ترتیب در محور x
png("T_and_B_cells_per_cluster.png", width = 2000, height = 1200, res = 300)
ggplot(bar_data, aes(x = cluster, y = n)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(
title = "Count of 'T and B' Cells per Cluster",
x = "Cluster",
y = "Number of 'T and B' Cells"
) +
theme_minimal(base_size = 14) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 5),
axis.text.y = element_text(size = 5),
plot.title = element_text(hjust = 0.5, face = "bold", size = 10)
)
dev.off()
